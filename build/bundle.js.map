{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/lib/heartRateSensor.js","../../node_modules/howler/dist/howler.js","../../src/steps/Home.svelte","../../src/svg/Heart.svelte","../../node_modules/nouislider/dist/nouislider.js","../../src/steps/Setup.svelte","../../src/steps/Run.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const SERVICE_HEART_RATE = 'heart_rate';\nconst HEART_RATE_CONFIGURATION = 'heart_rate_measurement';\nconst SERVICE_CONFIGURATION = '6217ff4b-fb31-1140-ad5a-a45545d7ecf3';\nconst CHARACTERISTIC_CONFIGURATION = '6217ff4d-91bb-91d0-7e2a-7cd3bda8a1f3';\n\nexport class HeartRateSensor {\n  constructor() {\n    this.device = null;\n    this.server = null;\n    this.serviceHeartRate = null;\n    this.serviceConfiguration = null;\n    this.characteristicConfiguration = null;\n    this._promises = {};\n  }\n\n  async connect() {\n    this.device = await navigator.bluetooth.requestDevice({\n      filters: [{ services: [ SERVICE_HEART_RATE ] }],\n      optionalServices: [ SERVICE_CONFIGURATION ]\n    });\n    this.server = await this.device.gatt.connect();\n    this.serviceHeartRate = await this.server.getPrimaryService(SERVICE_HEART_RATE);\n    this.serviceConfiguration = await this.server.getPrimaryService(SERVICE_CONFIGURATION);\n    this.characteristicConfiguration = await this.serviceConfiguration.getCharacteristic(CHARACTERISTIC_CONFIGURATION);\n    this.characteristicHeartRate = await this.serviceHeartRate.getCharacteristic(HEART_RATE_CONFIGURATION);\n  }\n\n  async enableMultiConnection() {\n    await this.characteristicConfiguration.startNotifications();\n    this.characteristicConfiguration.addEventListener('characteristicvaluechanged', (event) => {\n      const { value } = event.target;\n      const status = value.getUint8(2);\n      if (status === 1) {\n        this._promises.configuration.resolve(value.byteLength === 4 && value.getUint8(3));\n      } else {\n        this._promises.configuration.reject(new Error('Fail!'));\n      }\n    });\n    const multiConnection = await this._getConfiguration(9); // pfcRequestMultiConnectionSetting = 9\n    if (multiConnection === 0) {\n      await this._setConfiguration(8, 1) // pfcConfigureMultiConnection = 8\n    };\n    await this.characteristicConfiguration.stopNotifications();\n  }\n\n  async _getConfiguration(id) {\n    await this.characteristicConfiguration.writeValueWithoutResponse(Uint8Array.of(id));\n    const promise = new Promise((resolve, reject) => {\n      this._promises.configuration = { resolve, reject };\n    });\n    return promise;\n  }\n\n  async _setConfiguration(id, value) {\n    await this.characteristicConfiguration.writeValueWithoutResponse(Uint8Array.of(id, value));\n    const promise = new Promise((resolve, reject) => {\n      this._promises.configuration = { resolve, reject };\n    });\n    return promise;\n  }\n\n  parseHeartRate(value) {\n    // In Chrome 50+, a DataView is returned instead of an ArrayBuffer.\n    value = value.buffer ? value : new DataView(value);\n    let flags = value.getUint8(0);\n    let rate16Bits = flags & 0x1;\n    let result = {};\n    let index = 1;\n    if (rate16Bits) {\n      result.heartRate = value.getUint16(index, /*littleEndian=*/true);\n      index += 2;\n    } else {\n      result.heartRate = value.getUint8(index);\n      index += 1;\n    }\n    let contactDetected = flags & 0x2;\n    let contactSensorPresent = flags & 0x4;\n    if (contactSensorPresent) {\n      result.contactDetected = !!contactDetected;\n    }\n    let energyPresent = flags & 0x8;\n    if (energyPresent) {\n      result.energyExpended = value.getUint16(index, /*littleEndian=*/true);\n      index += 2;\n    }\n    let rrIntervalPresent = flags & 0x10;\n    if (rrIntervalPresent) {\n      let rrIntervals = [];\n      for (; index + 1 < value.byteLength; index += 2) {\n        rrIntervals.push(value.getUint16(index, /*littleEndian=*/true));\n      }\n      result.rrIntervals = rrIntervals;\n    }\n    return result;\n  }\n}\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","<script>\n  export let connect;\n  let isConnecting = false;\n</script>\n\n<div class=\"content\">\n  <div class=\"header\">\n    <h1>Polar H10 alert</h1>\n  </div>\n  {#if isConnecting}\n    <button class=\"button\">Loading...</button>\n  {:else}\n    <button class=\"button\" on:click={connect}>Connect</button>\n  {/if}\n</div>\n","<script>\n\texport let size = 32;\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"{size}px\" viewBox=\"0 0 24 24\" width=\"{size}px\">\n  <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n  <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" fill=\"#ff0000\"/>\n</svg>\n\n<style>\n  svg {\n    margin-bottom: -20px;\n  }\n</style>\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.noUiSlider = {}));\n})(this, (function (exports) { 'use strict';\n\n    exports.PipsMode = void 0;\n    (function (PipsMode) {\n        PipsMode[\"Range\"] = \"range\";\n        PipsMode[\"Steps\"] = \"steps\";\n        PipsMode[\"Positions\"] = \"positions\";\n        PipsMode[\"Count\"] = \"count\";\n        PipsMode[\"Values\"] = \"values\";\n    })(exports.PipsMode || (exports.PipsMode = {}));\n    exports.PipsType = void 0;\n    (function (PipsType) {\n        PipsType[PipsType[\"None\"] = -1] = \"None\";\n        PipsType[PipsType[\"NoValue\"] = 0] = \"NoValue\";\n        PipsType[PipsType[\"LargeValue\"] = 1] = \"LargeValue\";\n        PipsType[PipsType[\"SmallValue\"] = 2] = \"SmallValue\";\n    })(exports.PipsType || (exports.PipsType = {}));\n    //region Helper Methods\n    function isValidFormatter(entry) {\n        return isValidPartialFormatter(entry) && typeof entry.from === \"function\";\n    }\n    function isValidPartialFormatter(entry) {\n        // partial formatters only need a to function and not a from function\n        return typeof entry === \"object\" && typeof entry.to === \"function\";\n    }\n    function removeElement(el) {\n        el.parentElement.removeChild(el);\n    }\n    function isSet(value) {\n        return value !== null && value !== undefined;\n    }\n    // Bindable version\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n    // Removes duplicates from an array.\n    function unique(array) {\n        return array.filter(function (a) {\n            return !this[a] ? (this[a] = true) : false;\n        }, {});\n    }\n    // Round a value to the closest 'to'.\n    function closest(value, to) {\n        return Math.round(value / to) * to;\n    }\n    // Current position of an element relative to the document.\n    function offset(elem, orientation) {\n        var rect = elem.getBoundingClientRect();\n        var doc = elem.ownerDocument;\n        var docElem = doc.documentElement;\n        var pageOffset = getPageOffset(doc);\n        // getBoundingClientRect contains left scroll in Chrome on Android.\n        // I haven't found a feature detection that proves this. Worst case\n        // scenario on mis-match: the 'tap' feature on horizontal sliders breaks.\n        if (/webkit.*Chrome.*Mobile/i.test(navigator.userAgent)) {\n            pageOffset.x = 0;\n        }\n        return orientation ? rect.top + pageOffset.y - docElem.clientTop : rect.left + pageOffset.x - docElem.clientLeft;\n    }\n    // Checks whether a value is numerical.\n    function isNumeric(a) {\n        return typeof a === \"number\" && !isNaN(a) && isFinite(a);\n    }\n    // Sets a class and removes it after [duration] ms.\n    function addClassFor(element, className, duration) {\n        if (duration > 0) {\n            addClass(element, className);\n            setTimeout(function () {\n                removeClass(element, className);\n            }, duration);\n        }\n    }\n    // Limits a value to 0 - 100\n    function limit(a) {\n        return Math.max(Math.min(a, 100), 0);\n    }\n    // Wraps a variable as an array, if it isn't one yet.\n    // Note that an input array is returned by reference!\n    function asArray(a) {\n        return Array.isArray(a) ? a : [a];\n    }\n    // Counts decimals\n    function countDecimals(numStr) {\n        numStr = String(numStr);\n        var pieces = numStr.split(\".\");\n        return pieces.length > 1 ? pieces[1].length : 0;\n    }\n    // http://youmightnotneedjquery.com/#add_class\n    function addClass(el, className) {\n        if (el.classList && !/\\s/.test(className)) {\n            el.classList.add(className);\n        }\n        else {\n            el.className += \" \" + className;\n        }\n    }\n    // http://youmightnotneedjquery.com/#remove_class\n    function removeClass(el, className) {\n        if (el.classList && !/\\s/.test(className)) {\n            el.classList.remove(className);\n        }\n        else {\n            el.className = el.className.replace(new RegExp(\"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\", \"gi\"), \" \");\n        }\n    }\n    // https://plainjs.com/javascript/attributes/adding-removing-and-testing-for-classes-9/\n    function hasClass(el, className) {\n        return el.classList ? el.classList.contains(className) : new RegExp(\"\\\\b\" + className + \"\\\\b\").test(el.className);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY#Notes\n    function getPageOffset(doc) {\n        var supportPageOffset = window.pageXOffset !== undefined;\n        var isCSS1Compat = (doc.compatMode || \"\") === \"CSS1Compat\";\n        var x = supportPageOffset\n            ? window.pageXOffset\n            : isCSS1Compat\n                ? doc.documentElement.scrollLeft\n                : doc.body.scrollLeft;\n        var y = supportPageOffset\n            ? window.pageYOffset\n            : isCSS1Compat\n                ? doc.documentElement.scrollTop\n                : doc.body.scrollTop;\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    // we provide a function to compute constants instead\n    // of accessing window.* as soon as the module needs it\n    // so that we do not compute anything if not needed\n    function getActions() {\n        // Determine the events to bind. IE11 implements pointerEvents without\n        // a prefix, which breaks compatibility with the IE10 implementation.\n        return window.navigator.pointerEnabled\n            ? {\n                start: \"pointerdown\",\n                move: \"pointermove\",\n                end: \"pointerup\",\n            }\n            : window.navigator.msPointerEnabled\n                ? {\n                    start: \"MSPointerDown\",\n                    move: \"MSPointerMove\",\n                    end: \"MSPointerUp\",\n                }\n                : {\n                    start: \"mousedown touchstart\",\n                    move: \"mousemove touchmove\",\n                    end: \"mouseup touchend\",\n                };\n    }\n    // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // Issue #785\n    function getSupportsPassive() {\n        var supportsPassive = false;\n        /* eslint-disable */\n        try {\n            var opts = Object.defineProperty({}, \"passive\", {\n                get: function () {\n                    supportsPassive = true;\n                },\n            });\n            // @ts-ignore\n            window.addEventListener(\"test\", null, opts);\n        }\n        catch (e) { }\n        /* eslint-enable */\n        return supportsPassive;\n    }\n    function getSupportsTouchActionNone() {\n        return window.CSS && CSS.supports && CSS.supports(\"touch-action\", \"none\");\n    }\n    //endregion\n    //region Range Calculation\n    // Determine the size of a sub-range in relation to a full range.\n    function subRangeRatio(pa, pb) {\n        return 100 / (pb - pa);\n    }\n    // (percentage) How many percent is this value of this range?\n    function fromPercentage(range, value, startRange) {\n        return (value * 100) / (range[startRange + 1] - range[startRange]);\n    }\n    // (percentage) Where is this value on this range?\n    function toPercentage(range, value) {\n        return fromPercentage(range, range[0] < 0 ? value + Math.abs(range[0]) : value - range[0], 0);\n    }\n    // (value) How much is this percentage on this range?\n    function isPercentage(range, value) {\n        return (value * (range[1] - range[0])) / 100 + range[0];\n    }\n    function getJ(value, arr) {\n        var j = 1;\n        while (value >= arr[j]) {\n            j += 1;\n        }\n        return j;\n    }\n    // (percentage) Input a value, find where, on a scale of 0-100, it applies.\n    function toStepping(xVal, xPct, value) {\n        if (value >= xVal.slice(-1)[0]) {\n            return 100;\n        }\n        var j = getJ(value, xVal);\n        var va = xVal[j - 1];\n        var vb = xVal[j];\n        var pa = xPct[j - 1];\n        var pb = xPct[j];\n        return pa + toPercentage([va, vb], value) / subRangeRatio(pa, pb);\n    }\n    // (value) Input a percentage, find where it is on the specified range.\n    function fromStepping(xVal, xPct, value) {\n        // There is no range group that fits 100\n        if (value >= 100) {\n            return xVal.slice(-1)[0];\n        }\n        var j = getJ(value, xPct);\n        var va = xVal[j - 1];\n        var vb = xVal[j];\n        var pa = xPct[j - 1];\n        var pb = xPct[j];\n        return isPercentage([va, vb], (value - pa) * subRangeRatio(pa, pb));\n    }\n    // (percentage) Get the step that applies at a certain value.\n    function getStep(xPct, xSteps, snap, value) {\n        if (value === 100) {\n            return value;\n        }\n        var j = getJ(value, xPct);\n        var a = xPct[j - 1];\n        var b = xPct[j];\n        // If 'snap' is set, steps are used as fixed points on the slider.\n        if (snap) {\n            // Find the closest position, a or b.\n            if (value - a > (b - a) / 2) {\n                return b;\n            }\n            return a;\n        }\n        if (!xSteps[j - 1]) {\n            return value;\n        }\n        return xPct[j - 1] + closest(value - xPct[j - 1], xSteps[j - 1]);\n    }\n    //endregion\n    //region Spectrum\n    var Spectrum = /** @class */ (function () {\n        function Spectrum(entry, snap, singleStep) {\n            this.xPct = [];\n            this.xVal = [];\n            this.xSteps = [];\n            this.xNumSteps = [];\n            this.xHighestCompleteStep = [];\n            this.xSteps = [singleStep || false];\n            this.xNumSteps = [false];\n            this.snap = snap;\n            var index;\n            var ordered = [];\n            // Map the object keys to an array.\n            Object.keys(entry).forEach(function (index) {\n                ordered.push([asArray(entry[index]), index]);\n            });\n            // Sort all entries by value (numeric sort).\n            ordered.sort(function (a, b) {\n                return a[0][0] - b[0][0];\n            });\n            // Convert all entries to subranges.\n            for (index = 0; index < ordered.length; index++) {\n                this.handleEntryPoint(ordered[index][1], ordered[index][0]);\n            }\n            // Store the actual step values.\n            // xSteps is sorted in the same order as xPct and xVal.\n            this.xNumSteps = this.xSteps.slice(0);\n            // Convert all numeric steps to the percentage of the subrange they represent.\n            for (index = 0; index < this.xNumSteps.length; index++) {\n                this.handleStepPoint(index, this.xNumSteps[index]);\n            }\n        }\n        Spectrum.prototype.getDistance = function (value) {\n            var distances = [];\n            for (var index = 0; index < this.xNumSteps.length - 1; index++) {\n                distances[index] = fromPercentage(this.xVal, value, index);\n            }\n            return distances;\n        };\n        // Calculate the percentual distance over the whole scale of ranges.\n        // direction: 0 = backwards / 1 = forwards\n        Spectrum.prototype.getAbsoluteDistance = function (value, distances, direction) {\n            var xPct_index = 0;\n            // Calculate range where to start calculation\n            if (value < this.xPct[this.xPct.length - 1]) {\n                while (value > this.xPct[xPct_index + 1]) {\n                    xPct_index++;\n                }\n            }\n            else if (value === this.xPct[this.xPct.length - 1]) {\n                xPct_index = this.xPct.length - 2;\n            }\n            // If looking backwards and the value is exactly at a range separator then look one range further\n            if (!direction && value === this.xPct[xPct_index + 1]) {\n                xPct_index++;\n            }\n            if (distances === null) {\n                distances = [];\n            }\n            var start_factor;\n            var rest_factor = 1;\n            var rest_rel_distance = distances[xPct_index];\n            var range_pct = 0;\n            var rel_range_distance = 0;\n            var abs_distance_counter = 0;\n            var range_counter = 0;\n            // Calculate what part of the start range the value is\n            if (direction) {\n                start_factor = (value - this.xPct[xPct_index]) / (this.xPct[xPct_index + 1] - this.xPct[xPct_index]);\n            }\n            else {\n                start_factor = (this.xPct[xPct_index + 1] - value) / (this.xPct[xPct_index + 1] - this.xPct[xPct_index]);\n            }\n            // Do until the complete distance across ranges is calculated\n            while (rest_rel_distance > 0) {\n                // Calculate the percentage of total range\n                range_pct = this.xPct[xPct_index + 1 + range_counter] - this.xPct[xPct_index + range_counter];\n                // Detect if the margin, padding or limit is larger then the current range and calculate\n                if (distances[xPct_index + range_counter] * rest_factor + 100 - start_factor * 100 > 100) {\n                    // If larger then take the percentual distance of the whole range\n                    rel_range_distance = range_pct * start_factor;\n                    // Rest factor of relative percentual distance still to be calculated\n                    rest_factor = (rest_rel_distance - 100 * start_factor) / distances[xPct_index + range_counter];\n                    // Set start factor to 1 as for next range it does not apply.\n                    start_factor = 1;\n                }\n                else {\n                    // If smaller or equal then take the percentual distance of the calculate percentual part of that range\n                    rel_range_distance = ((distances[xPct_index + range_counter] * range_pct) / 100) * rest_factor;\n                    // No rest left as the rest fits in current range\n                    rest_factor = 0;\n                }\n                if (direction) {\n                    abs_distance_counter = abs_distance_counter - rel_range_distance;\n                    // Limit range to first range when distance becomes outside of minimum range\n                    if (this.xPct.length + range_counter >= 1) {\n                        range_counter--;\n                    }\n                }\n                else {\n                    abs_distance_counter = abs_distance_counter + rel_range_distance;\n                    // Limit range to last range when distance becomes outside of maximum range\n                    if (this.xPct.length - range_counter >= 1) {\n                        range_counter++;\n                    }\n                }\n                // Rest of relative percentual distance still to be calculated\n                rest_rel_distance = distances[xPct_index + range_counter] * rest_factor;\n            }\n            return value + abs_distance_counter;\n        };\n        Spectrum.prototype.toStepping = function (value) {\n            value = toStepping(this.xVal, this.xPct, value);\n            return value;\n        };\n        Spectrum.prototype.fromStepping = function (value) {\n            return fromStepping(this.xVal, this.xPct, value);\n        };\n        Spectrum.prototype.getStep = function (value) {\n            value = getStep(this.xPct, this.xSteps, this.snap, value);\n            return value;\n        };\n        Spectrum.prototype.getDefaultStep = function (value, isDown, size) {\n            var j = getJ(value, this.xPct);\n            // When at the top or stepping down, look at the previous sub-range\n            if (value === 100 || (isDown && value === this.xPct[j - 1])) {\n                j = Math.max(j - 1, 1);\n            }\n            return (this.xVal[j] - this.xVal[j - 1]) / size;\n        };\n        Spectrum.prototype.getNearbySteps = function (value) {\n            var j = getJ(value, this.xPct);\n            return {\n                stepBefore: {\n                    startValue: this.xVal[j - 2],\n                    step: this.xNumSteps[j - 2],\n                    highestStep: this.xHighestCompleteStep[j - 2],\n                },\n                thisStep: {\n                    startValue: this.xVal[j - 1],\n                    step: this.xNumSteps[j - 1],\n                    highestStep: this.xHighestCompleteStep[j - 1],\n                },\n                stepAfter: {\n                    startValue: this.xVal[j],\n                    step: this.xNumSteps[j],\n                    highestStep: this.xHighestCompleteStep[j],\n                },\n            };\n        };\n        Spectrum.prototype.countStepDecimals = function () {\n            var stepDecimals = this.xNumSteps.map(countDecimals);\n            return Math.max.apply(null, stepDecimals);\n        };\n        Spectrum.prototype.hasNoSize = function () {\n            return this.xVal[0] === this.xVal[this.xVal.length - 1];\n        };\n        // Outside testing\n        Spectrum.prototype.convert = function (value) {\n            return this.getStep(this.toStepping(value));\n        };\n        Spectrum.prototype.handleEntryPoint = function (index, value) {\n            var percentage;\n            // Covert min/max syntax to 0 and 100.\n            if (index === \"min\") {\n                percentage = 0;\n            }\n            else if (index === \"max\") {\n                percentage = 100;\n            }\n            else {\n                percentage = parseFloat(index);\n            }\n            // Check for correct input.\n            if (!isNumeric(percentage) || !isNumeric(value[0])) {\n                throw new Error(\"noUiSlider: 'range' value isn't numeric.\");\n            }\n            // Store values.\n            this.xPct.push(percentage);\n            this.xVal.push(value[0]);\n            var value1 = Number(value[1]);\n            // NaN will evaluate to false too, but to keep\n            // logging clear, set step explicitly. Make sure\n            // not to override the 'step' setting with false.\n            if (!percentage) {\n                if (!isNaN(value1)) {\n                    this.xSteps[0] = value1;\n                }\n            }\n            else {\n                this.xSteps.push(isNaN(value1) ? false : value1);\n            }\n            this.xHighestCompleteStep.push(0);\n        };\n        Spectrum.prototype.handleStepPoint = function (i, n) {\n            // Ignore 'false' stepping.\n            if (!n) {\n                return;\n            }\n            // Step over zero-length ranges (#948);\n            if (this.xVal[i] === this.xVal[i + 1]) {\n                this.xSteps[i] = this.xHighestCompleteStep[i] = this.xVal[i];\n                return;\n            }\n            // Factor to range ratio\n            this.xSteps[i] =\n                fromPercentage([this.xVal[i], this.xVal[i + 1]], n, 0) / subRangeRatio(this.xPct[i], this.xPct[i + 1]);\n            var totalSteps = (this.xVal[i + 1] - this.xVal[i]) / this.xNumSteps[i];\n            var highestStep = Math.ceil(Number(totalSteps.toFixed(3)) - 1);\n            var step = this.xVal[i] + this.xNumSteps[i] * highestStep;\n            this.xHighestCompleteStep[i] = step;\n        };\n        return Spectrum;\n    }());\n    //endregion\n    //region Options\n    /*\tEvery input option is tested and parsed. This will prevent\n        endless validation in internal methods. These tests are\n        structured with an item for every option available. An\n        option can be marked as required by setting the 'r' flag.\n        The testing function is provided with three arguments:\n            - The provided value for the option;\n            - A reference to the options object;\n            - The name for the option;\n\n        The testing function returns false when an error is detected,\n        or true when everything is OK. It can also modify the option\n        object, to make sure all values can be correctly looped elsewhere. */\n    //region Defaults\n    var defaultFormatter = {\n        to: function (value) {\n            return value === undefined ? \"\" : value.toFixed(2);\n        },\n        from: Number,\n    };\n    var cssClasses = {\n        target: \"target\",\n        base: \"base\",\n        origin: \"origin\",\n        handle: \"handle\",\n        handleLower: \"handle-lower\",\n        handleUpper: \"handle-upper\",\n        touchArea: \"touch-area\",\n        horizontal: \"horizontal\",\n        vertical: \"vertical\",\n        background: \"background\",\n        connect: \"connect\",\n        connects: \"connects\",\n        ltr: \"ltr\",\n        rtl: \"rtl\",\n        textDirectionLtr: \"txt-dir-ltr\",\n        textDirectionRtl: \"txt-dir-rtl\",\n        draggable: \"draggable\",\n        drag: \"state-drag\",\n        tap: \"state-tap\",\n        active: \"active\",\n        tooltip: \"tooltip\",\n        pips: \"pips\",\n        pipsHorizontal: \"pips-horizontal\",\n        pipsVertical: \"pips-vertical\",\n        marker: \"marker\",\n        markerHorizontal: \"marker-horizontal\",\n        markerVertical: \"marker-vertical\",\n        markerNormal: \"marker-normal\",\n        markerLarge: \"marker-large\",\n        markerSub: \"marker-sub\",\n        value: \"value\",\n        valueHorizontal: \"value-horizontal\",\n        valueVertical: \"value-vertical\",\n        valueNormal: \"value-normal\",\n        valueLarge: \"value-large\",\n        valueSub: \"value-sub\",\n    };\n    // Namespaces of internal event listeners\n    var INTERNAL_EVENT_NS = {\n        tooltips: \".__tooltips\",\n        aria: \".__aria\",\n    };\n    //endregion\n    function testStep(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'step' is not numeric.\");\n        }\n        // The step option can still be used to set stepping\n        // for linear sliders. Overwritten if set in 'range'.\n        parsed.singleStep = entry;\n    }\n    function testKeyboardPageMultiplier(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'keyboardPageMultiplier' is not numeric.\");\n        }\n        parsed.keyboardPageMultiplier = entry;\n    }\n    function testKeyboardMultiplier(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'keyboardMultiplier' is not numeric.\");\n        }\n        parsed.keyboardMultiplier = entry;\n    }\n    function testKeyboardDefaultStep(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'keyboardDefaultStep' is not numeric.\");\n        }\n        parsed.keyboardDefaultStep = entry;\n    }\n    function testRange(parsed, entry) {\n        // Filter incorrect input.\n        if (typeof entry !== \"object\" || Array.isArray(entry)) {\n            throw new Error(\"noUiSlider: 'range' is not an object.\");\n        }\n        // Catch missing start or end.\n        if (entry.min === undefined || entry.max === undefined) {\n            throw new Error(\"noUiSlider: Missing 'min' or 'max' in 'range'.\");\n        }\n        parsed.spectrum = new Spectrum(entry, parsed.snap || false, parsed.singleStep);\n    }\n    function testStart(parsed, entry) {\n        entry = asArray(entry);\n        // Validate input. Values aren't tested, as the public .val method\n        // will always provide a valid location.\n        if (!Array.isArray(entry) || !entry.length) {\n            throw new Error(\"noUiSlider: 'start' option is incorrect.\");\n        }\n        // Store the number of handles.\n        parsed.handles = entry.length;\n        // When the slider is initialized, the .val method will\n        // be called with the start options.\n        parsed.start = entry;\n    }\n    function testSnap(parsed, entry) {\n        if (typeof entry !== \"boolean\") {\n            throw new Error(\"noUiSlider: 'snap' option must be a boolean.\");\n        }\n        // Enforce 100% stepping within subranges.\n        parsed.snap = entry;\n    }\n    function testAnimate(parsed, entry) {\n        if (typeof entry !== \"boolean\") {\n            throw new Error(\"noUiSlider: 'animate' option must be a boolean.\");\n        }\n        // Enforce 100% stepping within subranges.\n        parsed.animate = entry;\n    }\n    function testAnimationDuration(parsed, entry) {\n        if (typeof entry !== \"number\") {\n            throw new Error(\"noUiSlider: 'animationDuration' option must be a number.\");\n        }\n        parsed.animationDuration = entry;\n    }\n    function testConnect(parsed, entry) {\n        var connect = [false];\n        var i;\n        // Map legacy options\n        if (entry === \"lower\") {\n            entry = [true, false];\n        }\n        else if (entry === \"upper\") {\n            entry = [false, true];\n        }\n        // Handle boolean options\n        if (entry === true || entry === false) {\n            for (i = 1; i < parsed.handles; i++) {\n                connect.push(entry);\n            }\n            connect.push(false);\n        }\n        // Reject invalid input\n        else if (!Array.isArray(entry) || !entry.length || entry.length !== parsed.handles + 1) {\n            throw new Error(\"noUiSlider: 'connect' option doesn't match handle count.\");\n        }\n        else {\n            connect = entry;\n        }\n        parsed.connect = connect;\n    }\n    function testOrientation(parsed, entry) {\n        // Set orientation to an a numerical value for easy\n        // array selection.\n        switch (entry) {\n            case \"horizontal\":\n                parsed.ort = 0;\n                break;\n            case \"vertical\":\n                parsed.ort = 1;\n                break;\n            default:\n                throw new Error(\"noUiSlider: 'orientation' option is invalid.\");\n        }\n    }\n    function testMargin(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'margin' option must be numeric.\");\n        }\n        // Issue #582\n        if (entry === 0) {\n            return;\n        }\n        parsed.margin = parsed.spectrum.getDistance(entry);\n    }\n    function testLimit(parsed, entry) {\n        if (!isNumeric(entry)) {\n            throw new Error(\"noUiSlider: 'limit' option must be numeric.\");\n        }\n        parsed.limit = parsed.spectrum.getDistance(entry);\n        if (!parsed.limit || parsed.handles < 2) {\n            throw new Error(\"noUiSlider: 'limit' option is only supported on linear sliders with 2 or more handles.\");\n        }\n    }\n    function testPadding(parsed, entry) {\n        var index;\n        if (!isNumeric(entry) && !Array.isArray(entry)) {\n            throw new Error(\"noUiSlider: 'padding' option must be numeric or array of exactly 2 numbers.\");\n        }\n        if (Array.isArray(entry) && !(entry.length === 2 || isNumeric(entry[0]) || isNumeric(entry[1]))) {\n            throw new Error(\"noUiSlider: 'padding' option must be numeric or array of exactly 2 numbers.\");\n        }\n        if (entry === 0) {\n            return;\n        }\n        if (!Array.isArray(entry)) {\n            entry = [entry, entry];\n        }\n        // 'getDistance' returns false for invalid values.\n        parsed.padding = [parsed.spectrum.getDistance(entry[0]), parsed.spectrum.getDistance(entry[1])];\n        for (index = 0; index < parsed.spectrum.xNumSteps.length - 1; index++) {\n            // last \"range\" can't contain step size as it is purely an endpoint.\n            if (parsed.padding[0][index] < 0 || parsed.padding[1][index] < 0) {\n                throw new Error(\"noUiSlider: 'padding' option must be a positive number(s).\");\n            }\n        }\n        var totalPadding = entry[0] + entry[1];\n        var firstValue = parsed.spectrum.xVal[0];\n        var lastValue = parsed.spectrum.xVal[parsed.spectrum.xVal.length - 1];\n        if (totalPadding / (lastValue - firstValue) > 1) {\n            throw new Error(\"noUiSlider: 'padding' option must not exceed 100% of the range.\");\n        }\n    }\n    function testDirection(parsed, entry) {\n        // Set direction as a numerical value for easy parsing.\n        // Invert connection for RTL sliders, so that the proper\n        // handles get the connect/background classes.\n        switch (entry) {\n            case \"ltr\":\n                parsed.dir = 0;\n                break;\n            case \"rtl\":\n                parsed.dir = 1;\n                break;\n            default:\n                throw new Error(\"noUiSlider: 'direction' option was not recognized.\");\n        }\n    }\n    function testBehaviour(parsed, entry) {\n        // Make sure the input is a string.\n        if (typeof entry !== \"string\") {\n            throw new Error(\"noUiSlider: 'behaviour' must be a string containing options.\");\n        }\n        // Check if the string contains any keywords.\n        // None are required.\n        var tap = entry.indexOf(\"tap\") >= 0;\n        var drag = entry.indexOf(\"drag\") >= 0;\n        var fixed = entry.indexOf(\"fixed\") >= 0;\n        var snap = entry.indexOf(\"snap\") >= 0;\n        var hover = entry.indexOf(\"hover\") >= 0;\n        var unconstrained = entry.indexOf(\"unconstrained\") >= 0;\n        var dragAll = entry.indexOf(\"drag-all\") >= 0;\n        if (fixed) {\n            if (parsed.handles !== 2) {\n                throw new Error(\"noUiSlider: 'fixed' behaviour must be used with 2 handles\");\n            }\n            // Use margin to enforce fixed state\n            testMargin(parsed, parsed.start[1] - parsed.start[0]);\n        }\n        if (unconstrained && (parsed.margin || parsed.limit)) {\n            throw new Error(\"noUiSlider: 'unconstrained' behaviour cannot be used with margin or limit\");\n        }\n        parsed.events = {\n            tap: tap || snap,\n            drag: drag,\n            dragAll: dragAll,\n            fixed: fixed,\n            snap: snap,\n            hover: hover,\n            unconstrained: unconstrained,\n        };\n    }\n    function testTooltips(parsed, entry) {\n        if (entry === false) {\n            return;\n        }\n        if (entry === true || isValidPartialFormatter(entry)) {\n            parsed.tooltips = [];\n            for (var i = 0; i < parsed.handles; i++) {\n                parsed.tooltips.push(entry);\n            }\n        }\n        else {\n            entry = asArray(entry);\n            if (entry.length !== parsed.handles) {\n                throw new Error(\"noUiSlider: must pass a formatter for all handles.\");\n            }\n            entry.forEach(function (formatter) {\n                if (typeof formatter !== \"boolean\" && !isValidPartialFormatter(formatter)) {\n                    throw new Error(\"noUiSlider: 'tooltips' must be passed a formatter or 'false'.\");\n                }\n            });\n            parsed.tooltips = entry;\n        }\n    }\n    function testHandleAttributes(parsed, entry) {\n        if (entry.length !== parsed.handles) {\n            throw new Error(\"noUiSlider: must pass a attributes for all handles.\");\n        }\n        parsed.handleAttributes = entry;\n    }\n    function testAriaFormat(parsed, entry) {\n        if (!isValidPartialFormatter(entry)) {\n            throw new Error(\"noUiSlider: 'ariaFormat' requires 'to' method.\");\n        }\n        parsed.ariaFormat = entry;\n    }\n    function testFormat(parsed, entry) {\n        if (!isValidFormatter(entry)) {\n            throw new Error(\"noUiSlider: 'format' requires 'to' and 'from' methods.\");\n        }\n        parsed.format = entry;\n    }\n    function testKeyboardSupport(parsed, entry) {\n        if (typeof entry !== \"boolean\") {\n            throw new Error(\"noUiSlider: 'keyboardSupport' option must be a boolean.\");\n        }\n        parsed.keyboardSupport = entry;\n    }\n    function testDocumentElement(parsed, entry) {\n        // This is an advanced option. Passed values are used without validation.\n        parsed.documentElement = entry;\n    }\n    function testCssPrefix(parsed, entry) {\n        if (typeof entry !== \"string\" && entry !== false) {\n            throw new Error(\"noUiSlider: 'cssPrefix' must be a string or `false`.\");\n        }\n        parsed.cssPrefix = entry;\n    }\n    function testCssClasses(parsed, entry) {\n        if (typeof entry !== \"object\") {\n            throw new Error(\"noUiSlider: 'cssClasses' must be an object.\");\n        }\n        if (typeof parsed.cssPrefix === \"string\") {\n            parsed.cssClasses = {};\n            Object.keys(entry).forEach(function (key) {\n                parsed.cssClasses[key] = parsed.cssPrefix + entry[key];\n            });\n        }\n        else {\n            parsed.cssClasses = entry;\n        }\n    }\n    // Test all developer settings and parse to assumption-safe values.\n    function testOptions(options) {\n        // To prove a fix for #537, freeze options here.\n        // If the object is modified, an error will be thrown.\n        // Object.freeze(options);\n        var parsed = {\n            margin: null,\n            limit: null,\n            padding: null,\n            animate: true,\n            animationDuration: 300,\n            ariaFormat: defaultFormatter,\n            format: defaultFormatter,\n        };\n        // Tests are executed in the order they are presented here.\n        var tests = {\n            step: { r: false, t: testStep },\n            keyboardPageMultiplier: { r: false, t: testKeyboardPageMultiplier },\n            keyboardMultiplier: { r: false, t: testKeyboardMultiplier },\n            keyboardDefaultStep: { r: false, t: testKeyboardDefaultStep },\n            start: { r: true, t: testStart },\n            connect: { r: true, t: testConnect },\n            direction: { r: true, t: testDirection },\n            snap: { r: false, t: testSnap },\n            animate: { r: false, t: testAnimate },\n            animationDuration: { r: false, t: testAnimationDuration },\n            range: { r: true, t: testRange },\n            orientation: { r: false, t: testOrientation },\n            margin: { r: false, t: testMargin },\n            limit: { r: false, t: testLimit },\n            padding: { r: false, t: testPadding },\n            behaviour: { r: true, t: testBehaviour },\n            ariaFormat: { r: false, t: testAriaFormat },\n            format: { r: false, t: testFormat },\n            tooltips: { r: false, t: testTooltips },\n            keyboardSupport: { r: true, t: testKeyboardSupport },\n            documentElement: { r: false, t: testDocumentElement },\n            cssPrefix: { r: true, t: testCssPrefix },\n            cssClasses: { r: true, t: testCssClasses },\n            handleAttributes: { r: false, t: testHandleAttributes },\n        };\n        var defaults = {\n            connect: false,\n            direction: \"ltr\",\n            behaviour: \"tap\",\n            orientation: \"horizontal\",\n            keyboardSupport: true,\n            cssPrefix: \"noUi-\",\n            cssClasses: cssClasses,\n            keyboardPageMultiplier: 5,\n            keyboardMultiplier: 1,\n            keyboardDefaultStep: 10,\n        };\n        // AriaFormat defaults to regular format, if any.\n        if (options.format && !options.ariaFormat) {\n            options.ariaFormat = options.format;\n        }\n        // Run all options through a testing mechanism to ensure correct\n        // input. It should be noted that options might get modified to\n        // be handled properly. E.g. wrapping integers in arrays.\n        Object.keys(tests).forEach(function (name) {\n            // If the option isn't set, but it is required, throw an error.\n            if (!isSet(options[name]) && defaults[name] === undefined) {\n                if (tests[name].r) {\n                    throw new Error(\"noUiSlider: '\" + name + \"' is required.\");\n                }\n                return;\n            }\n            tests[name].t(parsed, !isSet(options[name]) ? defaults[name] : options[name]);\n        });\n        // Forward pips options\n        parsed.pips = options.pips;\n        // All recent browsers accept unprefixed transform.\n        // We need -ms- for IE9 and -webkit- for older Android;\n        // Assume use of -webkit- if unprefixed and -ms- are not supported.\n        // https://caniuse.com/#feat=transforms2d\n        var d = document.createElement(\"div\");\n        var msPrefix = d.style.msTransform !== undefined;\n        var noPrefix = d.style.transform !== undefined;\n        parsed.transformRule = noPrefix ? \"transform\" : msPrefix ? \"msTransform\" : \"webkitTransform\";\n        // Pips don't move, so we can place them using left/top.\n        var styles = [\n            [\"left\", \"top\"],\n            [\"right\", \"bottom\"],\n        ];\n        parsed.style = styles[parsed.dir][parsed.ort];\n        return parsed;\n    }\n    //endregion\n    function scope(target, options, originalOptions) {\n        var actions = getActions();\n        var supportsTouchActionNone = getSupportsTouchActionNone();\n        var supportsPassive = supportsTouchActionNone && getSupportsPassive();\n        // All variables local to 'scope' are prefixed with 'scope_'\n        // Slider DOM Nodes\n        var scope_Target = target;\n        var scope_Base;\n        var scope_Handles;\n        var scope_Connects;\n        var scope_Pips;\n        var scope_Tooltips;\n        // Slider state values\n        var scope_Spectrum = options.spectrum;\n        var scope_Values = [];\n        var scope_Locations = [];\n        var scope_HandleNumbers = [];\n        var scope_ActiveHandlesCount = 0;\n        var scope_Events = {};\n        // Document Nodes\n        var scope_Document = target.ownerDocument;\n        var scope_DocumentElement = options.documentElement || scope_Document.documentElement;\n        var scope_Body = scope_Document.body;\n        // For horizontal sliders in standard ltr documents,\n        // make .noUi-origin overflow to the left so the document doesn't scroll.\n        var scope_DirOffset = scope_Document.dir === \"rtl\" || options.ort === 1 ? 0 : 100;\n        // Creates a node, adds it to target, returns the new node.\n        function addNodeTo(addTarget, className) {\n            var div = scope_Document.createElement(\"div\");\n            if (className) {\n                addClass(div, className);\n            }\n            addTarget.appendChild(div);\n            return div;\n        }\n        // Append a origin to the base\n        function addOrigin(base, handleNumber) {\n            var origin = addNodeTo(base, options.cssClasses.origin);\n            var handle = addNodeTo(origin, options.cssClasses.handle);\n            addNodeTo(handle, options.cssClasses.touchArea);\n            handle.setAttribute(\"data-handle\", String(handleNumber));\n            if (options.keyboardSupport) {\n                // https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\n                // 0 = focusable and reachable\n                handle.setAttribute(\"tabindex\", \"0\");\n                handle.addEventListener(\"keydown\", function (event) {\n                    return eventKeydown(event, handleNumber);\n                });\n            }\n            if (options.handleAttributes !== undefined) {\n                var attributes_1 = options.handleAttributes[handleNumber];\n                Object.keys(attributes_1).forEach(function (attribute) {\n                    handle.setAttribute(attribute, attributes_1[attribute]);\n                });\n            }\n            handle.setAttribute(\"role\", \"slider\");\n            handle.setAttribute(\"aria-orientation\", options.ort ? \"vertical\" : \"horizontal\");\n            if (handleNumber === 0) {\n                addClass(handle, options.cssClasses.handleLower);\n            }\n            else if (handleNumber === options.handles - 1) {\n                addClass(handle, options.cssClasses.handleUpper);\n            }\n            return origin;\n        }\n        // Insert nodes for connect elements\n        function addConnect(base, add) {\n            if (!add) {\n                return false;\n            }\n            return addNodeTo(base, options.cssClasses.connect);\n        }\n        // Add handles to the slider base.\n        function addElements(connectOptions, base) {\n            var connectBase = addNodeTo(base, options.cssClasses.connects);\n            scope_Handles = [];\n            scope_Connects = [];\n            scope_Connects.push(addConnect(connectBase, connectOptions[0]));\n            // [::::O====O====O====]\n            // connectOptions = [0, 1, 1, 1]\n            for (var i = 0; i < options.handles; i++) {\n                // Keep a list of all added handles.\n                scope_Handles.push(addOrigin(base, i));\n                scope_HandleNumbers[i] = i;\n                scope_Connects.push(addConnect(connectBase, connectOptions[i + 1]));\n            }\n        }\n        // Initialize a single slider.\n        function addSlider(addTarget) {\n            // Apply classes and data to the target.\n            addClass(addTarget, options.cssClasses.target);\n            if (options.dir === 0) {\n                addClass(addTarget, options.cssClasses.ltr);\n            }\n            else {\n                addClass(addTarget, options.cssClasses.rtl);\n            }\n            if (options.ort === 0) {\n                addClass(addTarget, options.cssClasses.horizontal);\n            }\n            else {\n                addClass(addTarget, options.cssClasses.vertical);\n            }\n            var textDirection = getComputedStyle(addTarget).direction;\n            if (textDirection === \"rtl\") {\n                addClass(addTarget, options.cssClasses.textDirectionRtl);\n            }\n            else {\n                addClass(addTarget, options.cssClasses.textDirectionLtr);\n            }\n            return addNodeTo(addTarget, options.cssClasses.base);\n        }\n        function addTooltip(handle, handleNumber) {\n            if (!options.tooltips || !options.tooltips[handleNumber]) {\n                return false;\n            }\n            return addNodeTo(handle.firstChild, options.cssClasses.tooltip);\n        }\n        function isSliderDisabled() {\n            return scope_Target.hasAttribute(\"disabled\");\n        }\n        // Disable the slider dragging if any handle is disabled\n        function isHandleDisabled(handleNumber) {\n            var handleOrigin = scope_Handles[handleNumber];\n            return handleOrigin.hasAttribute(\"disabled\");\n        }\n        function removeTooltips() {\n            if (scope_Tooltips) {\n                removeEvent(\"update\" + INTERNAL_EVENT_NS.tooltips);\n                scope_Tooltips.forEach(function (tooltip) {\n                    if (tooltip) {\n                        removeElement(tooltip);\n                    }\n                });\n                scope_Tooltips = null;\n            }\n        }\n        // The tooltips option is a shorthand for using the 'update' event.\n        function tooltips() {\n            removeTooltips();\n            // Tooltips are added with options.tooltips in original order.\n            scope_Tooltips = scope_Handles.map(addTooltip);\n            bindEvent(\"update\" + INTERNAL_EVENT_NS.tooltips, function (values, handleNumber, unencoded) {\n                if (!scope_Tooltips || !options.tooltips) {\n                    return;\n                }\n                if (scope_Tooltips[handleNumber] === false) {\n                    return;\n                }\n                var formattedValue = values[handleNumber];\n                if (options.tooltips[handleNumber] !== true) {\n                    formattedValue = options.tooltips[handleNumber].to(unencoded[handleNumber]);\n                }\n                scope_Tooltips[handleNumber].innerHTML = formattedValue;\n            });\n        }\n        function aria() {\n            removeEvent(\"update\" + INTERNAL_EVENT_NS.aria);\n            bindEvent(\"update\" + INTERNAL_EVENT_NS.aria, function (values, handleNumber, unencoded, tap, positions) {\n                // Update Aria Values for all handles, as a change in one changes min and max values for the next.\n                scope_HandleNumbers.forEach(function (index) {\n                    var handle = scope_Handles[index];\n                    var min = checkHandlePosition(scope_Locations, index, 0, true, true, true);\n                    var max = checkHandlePosition(scope_Locations, index, 100, true, true, true);\n                    var now = positions[index];\n                    // Formatted value for display\n                    var text = String(options.ariaFormat.to(unencoded[index]));\n                    // Map to slider range values\n                    min = scope_Spectrum.fromStepping(min).toFixed(1);\n                    max = scope_Spectrum.fromStepping(max).toFixed(1);\n                    now = scope_Spectrum.fromStepping(now).toFixed(1);\n                    handle.children[0].setAttribute(\"aria-valuemin\", min);\n                    handle.children[0].setAttribute(\"aria-valuemax\", max);\n                    handle.children[0].setAttribute(\"aria-valuenow\", now);\n                    handle.children[0].setAttribute(\"aria-valuetext\", text);\n                });\n            });\n        }\n        function getGroup(pips) {\n            // Use the range.\n            if (pips.mode === exports.PipsMode.Range || pips.mode === exports.PipsMode.Steps) {\n                return scope_Spectrum.xVal;\n            }\n            if (pips.mode === exports.PipsMode.Count) {\n                if (pips.values < 2) {\n                    throw new Error(\"noUiSlider: 'values' (>= 2) required for mode 'count'.\");\n                }\n                // Divide 0 - 100 in 'count' parts.\n                var interval = pips.values - 1;\n                var spread = 100 / interval;\n                var values = [];\n                // List these parts and have them handled as 'positions'.\n                while (interval--) {\n                    values[interval] = interval * spread;\n                }\n                values.push(100);\n                return mapToRange(values, pips.stepped);\n            }\n            if (pips.mode === exports.PipsMode.Positions) {\n                // Map all percentages to on-range values.\n                return mapToRange(pips.values, pips.stepped);\n            }\n            if (pips.mode === exports.PipsMode.Values) {\n                // If the value must be stepped, it needs to be converted to a percentage first.\n                if (pips.stepped) {\n                    return pips.values.map(function (value) {\n                        // Convert to percentage, apply step, return to value.\n                        return scope_Spectrum.fromStepping(scope_Spectrum.getStep(scope_Spectrum.toStepping(value)));\n                    });\n                }\n                // Otherwise, we can simply use the values.\n                return pips.values;\n            }\n            return []; // pips.mode = never\n        }\n        function mapToRange(values, stepped) {\n            return values.map(function (value) {\n                return scope_Spectrum.fromStepping(stepped ? scope_Spectrum.getStep(value) : value);\n            });\n        }\n        function generateSpread(pips) {\n            function safeIncrement(value, increment) {\n                // Avoid floating point variance by dropping the smallest decimal places.\n                return Number((value + increment).toFixed(7));\n            }\n            var group = getGroup(pips);\n            var indexes = {};\n            var firstInRange = scope_Spectrum.xVal[0];\n            var lastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length - 1];\n            var ignoreFirst = false;\n            var ignoreLast = false;\n            var prevPct = 0;\n            // Create a copy of the group, sort it and filter away all duplicates.\n            group = unique(group.slice().sort(function (a, b) {\n                return a - b;\n            }));\n            // Make sure the range starts with the first element.\n            if (group[0] !== firstInRange) {\n                group.unshift(firstInRange);\n                ignoreFirst = true;\n            }\n            // Likewise for the last one.\n            if (group[group.length - 1] !== lastInRange) {\n                group.push(lastInRange);\n                ignoreLast = true;\n            }\n            group.forEach(function (current, index) {\n                // Get the current step and the lower + upper positions.\n                var step;\n                var i;\n                var q;\n                var low = current;\n                var high = group[index + 1];\n                var newPct;\n                var pctDifference;\n                var pctPos;\n                var type;\n                var steps;\n                var realSteps;\n                var stepSize;\n                var isSteps = pips.mode === exports.PipsMode.Steps;\n                // When using 'steps' mode, use the provided steps.\n                // Otherwise, we'll step on to the next subrange.\n                if (isSteps) {\n                    step = scope_Spectrum.xNumSteps[index];\n                }\n                // Default to a 'full' step.\n                if (!step) {\n                    step = high - low;\n                }\n                // If high is undefined we are at the last subrange. Make sure it iterates once (#1088)\n                if (high === undefined) {\n                    high = low;\n                }\n                // Make sure step isn't 0, which would cause an infinite loop (#654)\n                step = Math.max(step, 0.0000001);\n                // Find all steps in the subrange.\n                for (i = low; i <= high; i = safeIncrement(i, step)) {\n                    // Get the percentage value for the current step,\n                    // calculate the size for the subrange.\n                    newPct = scope_Spectrum.toStepping(i);\n                    pctDifference = newPct - prevPct;\n                    steps = pctDifference / (pips.density || 1);\n                    realSteps = Math.round(steps);\n                    // This ratio represents the amount of percentage-space a point indicates.\n                    // For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-divided.\n                    // Round the percentage offset to an even number, then divide by two\n                    // to spread the offset on both sides of the range.\n                    stepSize = pctDifference / realSteps;\n                    // Divide all points evenly, adding the correct number to this subrange.\n                    // Run up to <= so that 100% gets a point, event if ignoreLast is set.\n                    for (q = 1; q <= realSteps; q += 1) {\n                        // The ratio between the rounded value and the actual size might be ~1% off.\n                        // Correct the percentage offset by the number of points\n                        // per subrange. density = 1 will result in 100 points on the\n                        // full range, 2 for 50, 4 for 25, etc.\n                        pctPos = prevPct + q * stepSize;\n                        indexes[pctPos.toFixed(5)] = [scope_Spectrum.fromStepping(pctPos), 0];\n                    }\n                    // Determine the point type.\n                    type = group.indexOf(i) > -1 ? exports.PipsType.LargeValue : isSteps ? exports.PipsType.SmallValue : exports.PipsType.NoValue;\n                    // Enforce the 'ignoreFirst' option by overwriting the type for 0.\n                    if (!index && ignoreFirst && i !== high) {\n                        type = 0;\n                    }\n                    if (!(i === high && ignoreLast)) {\n                        // Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.\n                        indexes[newPct.toFixed(5)] = [i, type];\n                    }\n                    // Update the percentage count.\n                    prevPct = newPct;\n                }\n            });\n            return indexes;\n        }\n        function addMarking(spread, filterFunc, formatter) {\n            var _a, _b;\n            var element = scope_Document.createElement(\"div\");\n            var valueSizeClasses = (_a = {},\n                _a[exports.PipsType.None] = \"\",\n                _a[exports.PipsType.NoValue] = options.cssClasses.valueNormal,\n                _a[exports.PipsType.LargeValue] = options.cssClasses.valueLarge,\n                _a[exports.PipsType.SmallValue] = options.cssClasses.valueSub,\n                _a);\n            var markerSizeClasses = (_b = {},\n                _b[exports.PipsType.None] = \"\",\n                _b[exports.PipsType.NoValue] = options.cssClasses.markerNormal,\n                _b[exports.PipsType.LargeValue] = options.cssClasses.markerLarge,\n                _b[exports.PipsType.SmallValue] = options.cssClasses.markerSub,\n                _b);\n            var valueOrientationClasses = [options.cssClasses.valueHorizontal, options.cssClasses.valueVertical];\n            var markerOrientationClasses = [options.cssClasses.markerHorizontal, options.cssClasses.markerVertical];\n            addClass(element, options.cssClasses.pips);\n            addClass(element, options.ort === 0 ? options.cssClasses.pipsHorizontal : options.cssClasses.pipsVertical);\n            function getClasses(type, source) {\n                var a = source === options.cssClasses.value;\n                var orientationClasses = a ? valueOrientationClasses : markerOrientationClasses;\n                var sizeClasses = a ? valueSizeClasses : markerSizeClasses;\n                return source + \" \" + orientationClasses[options.ort] + \" \" + sizeClasses[type];\n            }\n            function addSpread(offset, value, type) {\n                // Apply the filter function, if it is set.\n                type = filterFunc ? filterFunc(value, type) : type;\n                if (type === exports.PipsType.None) {\n                    return;\n                }\n                // Add a marker for every point\n                var node = addNodeTo(element, false);\n                node.className = getClasses(type, options.cssClasses.marker);\n                node.style[options.style] = offset + \"%\";\n                // Values are only appended for points marked '1' or '2'.\n                if (type > exports.PipsType.NoValue) {\n                    node = addNodeTo(element, false);\n                    node.className = getClasses(type, options.cssClasses.value);\n                    node.setAttribute(\"data-value\", String(value));\n                    node.style[options.style] = offset + \"%\";\n                    node.innerHTML = String(formatter.to(value));\n                }\n            }\n            // Append all points.\n            Object.keys(spread).forEach(function (offset) {\n                addSpread(offset, spread[offset][0], spread[offset][1]);\n            });\n            return element;\n        }\n        function removePips() {\n            if (scope_Pips) {\n                removeElement(scope_Pips);\n                scope_Pips = null;\n            }\n        }\n        function pips(pips) {\n            // Fix #669\n            removePips();\n            var spread = generateSpread(pips);\n            var filter = pips.filter;\n            var format = pips.format || {\n                to: function (value) {\n                    return String(Math.round(value));\n                },\n            };\n            scope_Pips = scope_Target.appendChild(addMarking(spread, filter, format));\n            return scope_Pips;\n        }\n        // Shorthand for base dimensions.\n        function baseSize() {\n            var rect = scope_Base.getBoundingClientRect();\n            var alt = (\"offset\" + [\"Width\", \"Height\"][options.ort]);\n            return options.ort === 0 ? rect.width || scope_Base[alt] : rect.height || scope_Base[alt];\n        }\n        // Handler for attaching events trough a proxy.\n        function attachEvent(events, element, callback, data) {\n            // This function can be used to 'filter' events to the slider.\n            // element is a node, not a nodeList\n            var method = function (event) {\n                var e = fixEvent(event, data.pageOffset, data.target || element);\n                // fixEvent returns false if this event has a different target\n                // when handling (multi-) touch events;\n                if (!e) {\n                    return false;\n                }\n                // doNotReject is passed by all end events to make sure released touches\n                // are not rejected, leaving the slider \"stuck\" to the cursor;\n                if (isSliderDisabled() && !data.doNotReject) {\n                    return false;\n                }\n                // Stop if an active 'tap' transition is taking place.\n                if (hasClass(scope_Target, options.cssClasses.tap) && !data.doNotReject) {\n                    return false;\n                }\n                // Ignore right or middle clicks on start #454\n                if (events === actions.start && e.buttons !== undefined && e.buttons > 1) {\n                    return false;\n                }\n                // Ignore right or middle clicks on start #454\n                if (data.hover && e.buttons) {\n                    return false;\n                }\n                // 'supportsPassive' is only true if a browser also supports touch-action: none in CSS.\n                // iOS safari does not, so it doesn't get to benefit from passive scrolling. iOS does support\n                // touch-action: manipulation, but that allows panning, which breaks\n                // sliders after zooming/on non-responsive pages.\n                // See: https://bugs.webkit.org/show_bug.cgi?id=133112\n                if (!supportsPassive) {\n                    e.preventDefault();\n                }\n                e.calcPoint = e.points[options.ort];\n                // Call the event handler with the event [ and additional data ].\n                callback(e, data);\n                return;\n            };\n            var methods = [];\n            // Bind a closure on the target for every event type.\n            events.split(\" \").forEach(function (eventName) {\n                element.addEventListener(eventName, method, supportsPassive ? { passive: true } : false);\n                methods.push([eventName, method]);\n            });\n            return methods;\n        }\n        // Provide a clean event with standardized offset values.\n        function fixEvent(e, pageOffset, eventTarget) {\n            // Filter the event to register the type, which can be\n            // touch, mouse or pointer. Offset changes need to be\n            // made on an event specific basis.\n            var touch = e.type.indexOf(\"touch\") === 0;\n            var mouse = e.type.indexOf(\"mouse\") === 0;\n            var pointer = e.type.indexOf(\"pointer\") === 0;\n            var x = 0;\n            var y = 0;\n            // IE10 implemented pointer events with a prefix;\n            if (e.type.indexOf(\"MSPointer\") === 0) {\n                pointer = true;\n            }\n            // Erroneous events seem to be passed in occasionally on iOS/iPadOS after user finishes interacting with\n            // the slider. They appear to be of type MouseEvent, yet they don't have usual properties set. Ignore\n            // events that have no touches or buttons associated with them. (#1057, #1079, #1095)\n            if (e.type === \"mousedown\" && !e.buttons && !e.touches) {\n                return false;\n            }\n            // The only thing one handle should be concerned about is the touches that originated on top of it.\n            if (touch) {\n                // Returns true if a touch originated on the target.\n                var isTouchOnTarget = function (checkTouch) {\n                    var target = checkTouch.target;\n                    return (target === eventTarget ||\n                        eventTarget.contains(target) ||\n                        (e.composed && e.composedPath().shift() === eventTarget));\n                };\n                // In the case of touchstart events, we need to make sure there is still no more than one\n                // touch on the target so we look amongst all touches.\n                if (e.type === \"touchstart\") {\n                    var targetTouches = Array.prototype.filter.call(e.touches, isTouchOnTarget);\n                    // Do not support more than one touch per handle.\n                    if (targetTouches.length > 1) {\n                        return false;\n                    }\n                    x = targetTouches[0].pageX;\n                    y = targetTouches[0].pageY;\n                }\n                else {\n                    // In the other cases, find on changedTouches is enough.\n                    var targetTouch = Array.prototype.find.call(e.changedTouches, isTouchOnTarget);\n                    // Cancel if the target touch has not moved.\n                    if (!targetTouch) {\n                        return false;\n                    }\n                    x = targetTouch.pageX;\n                    y = targetTouch.pageY;\n                }\n            }\n            pageOffset = pageOffset || getPageOffset(scope_Document);\n            if (mouse || pointer) {\n                x = e.clientX + pageOffset.x;\n                y = e.clientY + pageOffset.y;\n            }\n            e.pageOffset = pageOffset;\n            e.points = [x, y];\n            e.cursor = mouse || pointer; // Fix #435\n            return e;\n        }\n        // Translate a coordinate in the document to a percentage on the slider\n        function calcPointToPercentage(calcPoint) {\n            var location = calcPoint - offset(scope_Base, options.ort);\n            var proposal = (location * 100) / baseSize();\n            // Clamp proposal between 0% and 100%\n            // Out-of-bound coordinates may occur when .noUi-base pseudo-elements\n            // are used (e.g. contained handles feature)\n            proposal = limit(proposal);\n            return options.dir ? 100 - proposal : proposal;\n        }\n        // Find handle closest to a certain percentage on the slider\n        function getClosestHandle(clickedPosition) {\n            var smallestDifference = 100;\n            var handleNumber = false;\n            scope_Handles.forEach(function (handle, index) {\n                // Disabled handles are ignored\n                if (isHandleDisabled(index)) {\n                    return;\n                }\n                var handlePosition = scope_Locations[index];\n                var differenceWithThisHandle = Math.abs(handlePosition - clickedPosition);\n                // Initial state\n                var clickAtEdge = differenceWithThisHandle === 100 && smallestDifference === 100;\n                // Difference with this handle is smaller than the previously checked handle\n                var isCloser = differenceWithThisHandle < smallestDifference;\n                var isCloserAfter = differenceWithThisHandle <= smallestDifference && clickedPosition > handlePosition;\n                if (isCloser || isCloserAfter || clickAtEdge) {\n                    handleNumber = index;\n                    smallestDifference = differenceWithThisHandle;\n                }\n            });\n            return handleNumber;\n        }\n        // Fire 'end' when a mouse or pen leaves the document.\n        function documentLeave(event, data) {\n            if (event.type === \"mouseout\" &&\n                event.target.nodeName === \"HTML\" &&\n                event.relatedTarget === null) {\n                eventEnd(event, data);\n            }\n        }\n        // Handle movement on document for handle and range drag.\n        function eventMove(event, data) {\n            // Fix #498\n            // Check value of .buttons in 'start' to work around a bug in IE10 mobile (data.buttonsProperty).\n            // https://connect.microsoft.com/IE/feedback/details/927005/mobile-ie10-windows-phone-buttons-property-of-pointermove-event-always-zero\n            // IE9 has .buttons and .which zero on mousemove.\n            // Firefox breaks the spec MDN defines.\n            if (navigator.appVersion.indexOf(\"MSIE 9\") === -1 && event.buttons === 0 && data.buttonsProperty !== 0) {\n                return eventEnd(event, data);\n            }\n            // Check if we are moving up or down\n            var movement = (options.dir ? -1 : 1) * (event.calcPoint - data.startCalcPoint);\n            // Convert the movement into a percentage of the slider width/height\n            var proposal = (movement * 100) / data.baseSize;\n            moveHandles(movement > 0, proposal, data.locations, data.handleNumbers, data.connect);\n        }\n        // Unbind move events on document, call callbacks.\n        function eventEnd(event, data) {\n            // The handle is no longer active, so remove the class.\n            if (data.handle) {\n                removeClass(data.handle, options.cssClasses.active);\n                scope_ActiveHandlesCount -= 1;\n            }\n            // Unbind the move and end events, which are added on 'start'.\n            data.listeners.forEach(function (c) {\n                scope_DocumentElement.removeEventListener(c[0], c[1]);\n            });\n            if (scope_ActiveHandlesCount === 0) {\n                // Remove dragging class.\n                removeClass(scope_Target, options.cssClasses.drag);\n                setZindex();\n                // Remove cursor styles and text-selection events bound to the body.\n                if (event.cursor) {\n                    scope_Body.style.cursor = \"\";\n                    scope_Body.removeEventListener(\"selectstart\", preventDefault);\n                }\n            }\n            data.handleNumbers.forEach(function (handleNumber) {\n                fireEvent(\"change\", handleNumber);\n                fireEvent(\"set\", handleNumber);\n                fireEvent(\"end\", handleNumber);\n            });\n        }\n        // Bind move events on document.\n        function eventStart(event, data) {\n            // Ignore event if any handle is disabled\n            if (data.handleNumbers.some(isHandleDisabled)) {\n                return;\n            }\n            var handle;\n            if (data.handleNumbers.length === 1) {\n                var handleOrigin = scope_Handles[data.handleNumbers[0]];\n                handle = handleOrigin.children[0];\n                scope_ActiveHandlesCount += 1;\n                // Mark the handle as 'active' so it can be styled.\n                addClass(handle, options.cssClasses.active);\n            }\n            // A drag should never propagate up to the 'tap' event.\n            event.stopPropagation();\n            // Record the event listeners.\n            var listeners = [];\n            // Attach the move and end events.\n            var moveEvent = attachEvent(actions.move, scope_DocumentElement, eventMove, {\n                // The event target has changed so we need to propagate the original one so that we keep\n                // relying on it to extract target touches.\n                target: event.target,\n                handle: handle,\n                connect: data.connect,\n                listeners: listeners,\n                startCalcPoint: event.calcPoint,\n                baseSize: baseSize(),\n                pageOffset: event.pageOffset,\n                handleNumbers: data.handleNumbers,\n                buttonsProperty: event.buttons,\n                locations: scope_Locations.slice(),\n            });\n            var endEvent = attachEvent(actions.end, scope_DocumentElement, eventEnd, {\n                target: event.target,\n                handle: handle,\n                listeners: listeners,\n                doNotReject: true,\n                handleNumbers: data.handleNumbers,\n            });\n            var outEvent = attachEvent(\"mouseout\", scope_DocumentElement, documentLeave, {\n                target: event.target,\n                handle: handle,\n                listeners: listeners,\n                doNotReject: true,\n                handleNumbers: data.handleNumbers,\n            });\n            // We want to make sure we pushed the listeners in the listener list rather than creating\n            // a new one as it has already been passed to the event handlers.\n            listeners.push.apply(listeners, moveEvent.concat(endEvent, outEvent));\n            // Text selection isn't an issue on touch devices,\n            // so adding cursor styles can be skipped.\n            if (event.cursor) {\n                // Prevent the 'I' cursor and extend the range-drag cursor.\n                scope_Body.style.cursor = getComputedStyle(event.target).cursor;\n                // Mark the target with a dragging state.\n                if (scope_Handles.length > 1) {\n                    addClass(scope_Target, options.cssClasses.drag);\n                }\n                // Prevent text selection when dragging the handles.\n                // In noUiSlider <= 9.2.0, this was handled by calling preventDefault on mouse/touch start/move,\n                // which is scroll blocking. The selectstart event is supported by FireFox starting from version 52,\n                // meaning the only holdout is iOS Safari. This doesn't matter: text selection isn't triggered there.\n                // The 'cursor' flag is false.\n                // See: http://caniuse.com/#search=selectstart\n                scope_Body.addEventListener(\"selectstart\", preventDefault, false);\n            }\n            data.handleNumbers.forEach(function (handleNumber) {\n                fireEvent(\"start\", handleNumber);\n            });\n        }\n        // Move closest handle to tapped location.\n        function eventTap(event) {\n            // The tap event shouldn't propagate up\n            event.stopPropagation();\n            var proposal = calcPointToPercentage(event.calcPoint);\n            var handleNumber = getClosestHandle(proposal);\n            // Tackle the case that all handles are 'disabled'.\n            if (handleNumber === false) {\n                return;\n            }\n            // Flag the slider as it is now in a transitional state.\n            // Transition takes a configurable amount of ms (default 300). Re-enable the slider after that.\n            if (!options.events.snap) {\n                addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);\n            }\n            setHandle(handleNumber, proposal, true, true);\n            setZindex();\n            fireEvent(\"slide\", handleNumber, true);\n            fireEvent(\"update\", handleNumber, true);\n            if (!options.events.snap) {\n                fireEvent(\"change\", handleNumber, true);\n                fireEvent(\"set\", handleNumber, true);\n            }\n            else {\n                eventStart(event, { handleNumbers: [handleNumber] });\n            }\n        }\n        // Fires a 'hover' event for a hovered mouse/pen position.\n        function eventHover(event) {\n            var proposal = calcPointToPercentage(event.calcPoint);\n            var to = scope_Spectrum.getStep(proposal);\n            var value = scope_Spectrum.fromStepping(to);\n            Object.keys(scope_Events).forEach(function (targetEvent) {\n                if (\"hover\" === targetEvent.split(\".\")[0]) {\n                    scope_Events[targetEvent].forEach(function (callback) {\n                        callback.call(scope_Self, value);\n                    });\n                }\n            });\n        }\n        // Handles keydown on focused handles\n        // Don't move the document when pressing arrow keys on focused handles\n        function eventKeydown(event, handleNumber) {\n            if (isSliderDisabled() || isHandleDisabled(handleNumber)) {\n                return false;\n            }\n            var horizontalKeys = [\"Left\", \"Right\"];\n            var verticalKeys = [\"Down\", \"Up\"];\n            var largeStepKeys = [\"PageDown\", \"PageUp\"];\n            var edgeKeys = [\"Home\", \"End\"];\n            if (options.dir && !options.ort) {\n                // On an right-to-left slider, the left and right keys act inverted\n                horizontalKeys.reverse();\n            }\n            else if (options.ort && !options.dir) {\n                // On a top-to-bottom slider, the up and down keys act inverted\n                verticalKeys.reverse();\n                largeStepKeys.reverse();\n            }\n            // Strip \"Arrow\" for IE compatibility. https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n            var key = event.key.replace(\"Arrow\", \"\");\n            var isLargeDown = key === largeStepKeys[0];\n            var isLargeUp = key === largeStepKeys[1];\n            var isDown = key === verticalKeys[0] || key === horizontalKeys[0] || isLargeDown;\n            var isUp = key === verticalKeys[1] || key === horizontalKeys[1] || isLargeUp;\n            var isMin = key === edgeKeys[0];\n            var isMax = key === edgeKeys[1];\n            if (!isDown && !isUp && !isMin && !isMax) {\n                return true;\n            }\n            event.preventDefault();\n            var to;\n            if (isUp || isDown) {\n                var direction = isDown ? 0 : 1;\n                var steps = getNextStepsForHandle(handleNumber);\n                var step = steps[direction];\n                // At the edge of a slider, do nothing\n                if (step === null) {\n                    return false;\n                }\n                // No step set, use the default of 10% of the sub-range\n                if (step === false) {\n                    step = scope_Spectrum.getDefaultStep(scope_Locations[handleNumber], isDown, options.keyboardDefaultStep);\n                }\n                if (isLargeUp || isLargeDown) {\n                    step *= options.keyboardPageMultiplier;\n                }\n                else {\n                    step *= options.keyboardMultiplier;\n                }\n                // Step over zero-length ranges (#948);\n                step = Math.max(step, 0.0000001);\n                // Decrement for down steps\n                step = (isDown ? -1 : 1) * step;\n                to = scope_Values[handleNumber] + step;\n            }\n            else if (isMax) {\n                // End key\n                to = options.spectrum.xVal[options.spectrum.xVal.length - 1];\n            }\n            else {\n                // Home key\n                to = options.spectrum.xVal[0];\n            }\n            setHandle(handleNumber, scope_Spectrum.toStepping(to), true, true);\n            fireEvent(\"slide\", handleNumber);\n            fireEvent(\"update\", handleNumber);\n            fireEvent(\"change\", handleNumber);\n            fireEvent(\"set\", handleNumber);\n            return false;\n        }\n        // Attach events to several slider parts.\n        function bindSliderEvents(behaviour) {\n            // Attach the standard drag event to the handles.\n            if (!behaviour.fixed) {\n                scope_Handles.forEach(function (handle, index) {\n                    // These events are only bound to the visual handle\n                    // element, not the 'real' origin element.\n                    attachEvent(actions.start, handle.children[0], eventStart, {\n                        handleNumbers: [index],\n                    });\n                });\n            }\n            // Attach the tap event to the slider base.\n            if (behaviour.tap) {\n                attachEvent(actions.start, scope_Base, eventTap, {});\n            }\n            // Fire hover events\n            if (behaviour.hover) {\n                attachEvent(actions.move, scope_Base, eventHover, {\n                    hover: true,\n                });\n            }\n            // Make the range draggable.\n            if (behaviour.drag) {\n                scope_Connects.forEach(function (connect, index) {\n                    if (connect === false || index === 0 || index === scope_Connects.length - 1) {\n                        return;\n                    }\n                    var handleBefore = scope_Handles[index - 1];\n                    var handleAfter = scope_Handles[index];\n                    var eventHolders = [connect];\n                    var handlesToDrag = [handleBefore, handleAfter];\n                    var handleNumbersToDrag = [index - 1, index];\n                    addClass(connect, options.cssClasses.draggable);\n                    // When the range is fixed, the entire range can\n                    // be dragged by the handles. The handle in the first\n                    // origin will propagate the start event upward,\n                    // but it needs to be bound manually on the other.\n                    if (behaviour.fixed) {\n                        eventHolders.push(handleBefore.children[0]);\n                        eventHolders.push(handleAfter.children[0]);\n                    }\n                    if (behaviour.dragAll) {\n                        handlesToDrag = scope_Handles;\n                        handleNumbersToDrag = scope_HandleNumbers;\n                    }\n                    eventHolders.forEach(function (eventHolder) {\n                        attachEvent(actions.start, eventHolder, eventStart, {\n                            handles: handlesToDrag,\n                            handleNumbers: handleNumbersToDrag,\n                            connect: connect,\n                        });\n                    });\n                });\n            }\n        }\n        // Attach an event to this slider, possibly including a namespace\n        function bindEvent(namespacedEvent, callback) {\n            scope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];\n            scope_Events[namespacedEvent].push(callback);\n            // If the event bound is 'update,' fire it immediately for all handles.\n            if (namespacedEvent.split(\".\")[0] === \"update\") {\n                scope_Handles.forEach(function (a, index) {\n                    fireEvent(\"update\", index);\n                });\n            }\n        }\n        function isInternalNamespace(namespace) {\n            return namespace === INTERNAL_EVENT_NS.aria || namespace === INTERNAL_EVENT_NS.tooltips;\n        }\n        // Undo attachment of event\n        function removeEvent(namespacedEvent) {\n            var event = namespacedEvent && namespacedEvent.split(\".\")[0];\n            var namespace = event ? namespacedEvent.substring(event.length) : namespacedEvent;\n            Object.keys(scope_Events).forEach(function (bind) {\n                var tEvent = bind.split(\".\")[0];\n                var tNamespace = bind.substring(tEvent.length);\n                if ((!event || event === tEvent) && (!namespace || namespace === tNamespace)) {\n                    // only delete protected internal event if intentional\n                    if (!isInternalNamespace(tNamespace) || namespace === tNamespace) {\n                        delete scope_Events[bind];\n                    }\n                }\n            });\n        }\n        // External event handling\n        function fireEvent(eventName, handleNumber, tap) {\n            Object.keys(scope_Events).forEach(function (targetEvent) {\n                var eventType = targetEvent.split(\".\")[0];\n                if (eventName === eventType) {\n                    scope_Events[targetEvent].forEach(function (callback) {\n                        callback.call(\n                        // Use the slider public API as the scope ('this')\n                        scope_Self, \n                        // Return values as array, so arg_1[arg_2] is always valid.\n                        scope_Values.map(options.format.to), \n                        // Handle index, 0 or 1\n                        handleNumber, \n                        // Un-formatted slider values\n                        scope_Values.slice(), \n                        // Event is fired by tap, true or false\n                        tap || false, \n                        // Left offset of the handle, in relation to the slider\n                        scope_Locations.slice(), \n                        // add the slider public API to an accessible parameter when this is unavailable\n                        scope_Self);\n                    });\n                }\n            });\n        }\n        // Split out the handle positioning logic so the Move event can use it, too\n        function checkHandlePosition(reference, handleNumber, to, lookBackward, lookForward, getValue) {\n            var distance;\n            // For sliders with multiple handles, limit movement to the other handle.\n            // Apply the margin option by adding it to the handle positions.\n            if (scope_Handles.length > 1 && !options.events.unconstrained) {\n                if (lookBackward && handleNumber > 0) {\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber - 1], options.margin, false);\n                    to = Math.max(to, distance);\n                }\n                if (lookForward && handleNumber < scope_Handles.length - 1) {\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber + 1], options.margin, true);\n                    to = Math.min(to, distance);\n                }\n            }\n            // The limit option has the opposite effect, limiting handles to a\n            // maximum distance from another. Limit must be > 0, as otherwise\n            // handles would be unmovable.\n            if (scope_Handles.length > 1 && options.limit) {\n                if (lookBackward && handleNumber > 0) {\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber - 1], options.limit, false);\n                    to = Math.min(to, distance);\n                }\n                if (lookForward && handleNumber < scope_Handles.length - 1) {\n                    distance = scope_Spectrum.getAbsoluteDistance(reference[handleNumber + 1], options.limit, true);\n                    to = Math.max(to, distance);\n                }\n            }\n            // The padding option keeps the handles a certain distance from the\n            // edges of the slider. Padding must be > 0.\n            if (options.padding) {\n                if (handleNumber === 0) {\n                    distance = scope_Spectrum.getAbsoluteDistance(0, options.padding[0], false);\n                    to = Math.max(to, distance);\n                }\n                if (handleNumber === scope_Handles.length - 1) {\n                    distance = scope_Spectrum.getAbsoluteDistance(100, options.padding[1], true);\n                    to = Math.min(to, distance);\n                }\n            }\n            to = scope_Spectrum.getStep(to);\n            // Limit percentage to the 0 - 100 range\n            to = limit(to);\n            // Return false if handle can't move\n            if (to === reference[handleNumber] && !getValue) {\n                return false;\n            }\n            return to;\n        }\n        // Uses slider orientation to create CSS rules. a = base value;\n        function inRuleOrder(v, a) {\n            var o = options.ort;\n            return (o ? a : v) + \", \" + (o ? v : a);\n        }\n        // Moves handle(s) by a percentage\n        // (bool, % to move, [% where handle started, ...], [index in scope_Handles, ...])\n        function moveHandles(upward, proposal, locations, handleNumbers, connect) {\n            var proposals = locations.slice();\n            // Store first handle now, so we still have it in case handleNumbers is reversed\n            var firstHandle = handleNumbers[0];\n            var b = [!upward, upward];\n            var f = [upward, !upward];\n            // Copy handleNumbers so we don't change the dataset\n            handleNumbers = handleNumbers.slice();\n            // Check to see which handle is 'leading'.\n            // If that one can't move the second can't either.\n            if (upward) {\n                handleNumbers.reverse();\n            }\n            // Step 1: get the maximum percentage that any of the handles can move\n            if (handleNumbers.length > 1) {\n                handleNumbers.forEach(function (handleNumber, o) {\n                    var to = checkHandlePosition(proposals, handleNumber, proposals[handleNumber] + proposal, b[o], f[o], false);\n                    // Stop if one of the handles can't move.\n                    if (to === false) {\n                        proposal = 0;\n                    }\n                    else {\n                        proposal = to - proposals[handleNumber];\n                        proposals[handleNumber] = to;\n                    }\n                });\n            }\n            // If using one handle, check backward AND forward\n            else {\n                b = f = [true];\n            }\n            var state = false;\n            // Step 2: Try to set the handles with the found percentage\n            handleNumbers.forEach(function (handleNumber, o) {\n                state = setHandle(handleNumber, locations[handleNumber] + proposal, b[o], f[o]) || state;\n            });\n            // Step 3: If a handle moved, fire events\n            if (state) {\n                handleNumbers.forEach(function (handleNumber) {\n                    fireEvent(\"update\", handleNumber);\n                    fireEvent(\"slide\", handleNumber);\n                });\n                // If target is a connect, then fire drag event\n                if (connect != undefined) {\n                    fireEvent(\"drag\", firstHandle);\n                }\n            }\n        }\n        // Takes a base value and an offset. This offset is used for the connect bar size.\n        // In the initial design for this feature, the origin element was 1% wide.\n        // Unfortunately, a rounding bug in Chrome makes it impossible to implement this feature\n        // in this manner: https://bugs.chromium.org/p/chromium/issues/detail?id=798223\n        function transformDirection(a, b) {\n            return options.dir ? 100 - a - b : a;\n        }\n        // Updates scope_Locations and scope_Values, updates visual state\n        function updateHandlePosition(handleNumber, to) {\n            // Update locations.\n            scope_Locations[handleNumber] = to;\n            // Convert the value to the slider stepping/range.\n            scope_Values[handleNumber] = scope_Spectrum.fromStepping(to);\n            var translation = transformDirection(to, 0) - scope_DirOffset;\n            var translateRule = \"translate(\" + inRuleOrder(translation + \"%\", \"0\") + \")\";\n            scope_Handles[handleNumber].style[options.transformRule] = translateRule;\n            updateConnect(handleNumber);\n            updateConnect(handleNumber + 1);\n        }\n        // Handles before the slider middle are stacked later = higher,\n        // Handles after the middle later is lower\n        // [[7] [8] .......... | .......... [5] [4]\n        function setZindex() {\n            scope_HandleNumbers.forEach(function (handleNumber) {\n                var dir = scope_Locations[handleNumber] > 50 ? -1 : 1;\n                var zIndex = 3 + (scope_Handles.length + dir * handleNumber);\n                scope_Handles[handleNumber].style.zIndex = String(zIndex);\n            });\n        }\n        // Test suggested values and apply margin, step.\n        // if exactInput is true, don't run checkHandlePosition, then the handle can be placed in between steps (#436)\n        function setHandle(handleNumber, to, lookBackward, lookForward, exactInput) {\n            if (!exactInput) {\n                to = checkHandlePosition(scope_Locations, handleNumber, to, lookBackward, lookForward, false);\n            }\n            if (to === false) {\n                return false;\n            }\n            updateHandlePosition(handleNumber, to);\n            return true;\n        }\n        // Updates style attribute for connect nodes\n        function updateConnect(index) {\n            // Skip connects set to false\n            if (!scope_Connects[index]) {\n                return;\n            }\n            var l = 0;\n            var h = 100;\n            if (index !== 0) {\n                l = scope_Locations[index - 1];\n            }\n            if (index !== scope_Connects.length - 1) {\n                h = scope_Locations[index];\n            }\n            // We use two rules:\n            // 'translate' to change the left/top offset;\n            // 'scale' to change the width of the element;\n            // As the element has a width of 100%, a translation of 100% is equal to 100% of the parent (.noUi-base)\n            var connectWidth = h - l;\n            var translateRule = \"translate(\" + inRuleOrder(transformDirection(l, connectWidth) + \"%\", \"0\") + \")\";\n            var scaleRule = \"scale(\" + inRuleOrder(connectWidth / 100, \"1\") + \")\";\n            scope_Connects[index].style[options.transformRule] =\n                translateRule + \" \" + scaleRule;\n        }\n        // Parses value passed to .set method. Returns current value if not parse-able.\n        function resolveToValue(to, handleNumber) {\n            // Setting with null indicates an 'ignore'.\n            // Inputting 'false' is invalid.\n            if (to === null || to === false || to === undefined) {\n                return scope_Locations[handleNumber];\n            }\n            // If a formatted number was passed, attempt to decode it.\n            if (typeof to === \"number\") {\n                to = String(to);\n            }\n            to = options.format.from(to);\n            if (to !== false) {\n                to = scope_Spectrum.toStepping(to);\n            }\n            // If parsing the number failed, use the current value.\n            if (to === false || isNaN(to)) {\n                return scope_Locations[handleNumber];\n            }\n            return to;\n        }\n        // Set the slider value.\n        function valueSet(input, fireSetEvent, exactInput) {\n            var values = asArray(input);\n            var isInit = scope_Locations[0] === undefined;\n            // Event fires by default\n            fireSetEvent = fireSetEvent === undefined ? true : fireSetEvent;\n            // Animation is optional.\n            // Make sure the initial values were set before using animated placement.\n            if (options.animate && !isInit) {\n                addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);\n            }\n            // First pass, without lookAhead but with lookBackward. Values are set from left to right.\n            scope_HandleNumbers.forEach(function (handleNumber) {\n                setHandle(handleNumber, resolveToValue(values[handleNumber], handleNumber), true, false, exactInput);\n            });\n            var i = scope_HandleNumbers.length === 1 ? 0 : 1;\n            // Spread handles evenly across the slider if the range has no size (min=max)\n            if (isInit && scope_Spectrum.hasNoSize()) {\n                exactInput = true;\n                scope_Locations[0] = 0;\n                if (scope_HandleNumbers.length > 1) {\n                    var space_1 = 100 / (scope_HandleNumbers.length - 1);\n                    scope_HandleNumbers.forEach(function (handleNumber) {\n                        scope_Locations[handleNumber] = handleNumber * space_1;\n                    });\n                }\n            }\n            // Secondary passes. Now that all base values are set, apply constraints.\n            // Iterate all handles to ensure constraints are applied for the entire slider (Issue #1009)\n            for (; i < scope_HandleNumbers.length; ++i) {\n                scope_HandleNumbers.forEach(function (handleNumber) {\n                    setHandle(handleNumber, scope_Locations[handleNumber], true, true, exactInput);\n                });\n            }\n            setZindex();\n            scope_HandleNumbers.forEach(function (handleNumber) {\n                fireEvent(\"update\", handleNumber);\n                // Fire the event only for handles that received a new value, as per #579\n                if (values[handleNumber] !== null && fireSetEvent) {\n                    fireEvent(\"set\", handleNumber);\n                }\n            });\n        }\n        // Reset slider to initial values\n        function valueReset(fireSetEvent) {\n            valueSet(options.start, fireSetEvent);\n        }\n        // Set value for a single handle\n        function valueSetHandle(handleNumber, value, fireSetEvent, exactInput) {\n            // Ensure numeric input\n            handleNumber = Number(handleNumber);\n            if (!(handleNumber >= 0 && handleNumber < scope_HandleNumbers.length)) {\n                throw new Error(\"noUiSlider: invalid handle number, got: \" + handleNumber);\n            }\n            // Look both backward and forward, since we don't want this handle to \"push\" other handles (#960);\n            // The exactInput argument can be used to ignore slider stepping (#436)\n            setHandle(handleNumber, resolveToValue(value, handleNumber), true, true, exactInput);\n            fireEvent(\"update\", handleNumber);\n            if (fireSetEvent) {\n                fireEvent(\"set\", handleNumber);\n            }\n        }\n        // Get the slider value.\n        function valueGet(unencoded) {\n            if (unencoded === void 0) { unencoded = false; }\n            if (unencoded) {\n                // return a copy of the raw values\n                return scope_Values.length === 1 ? scope_Values[0] : scope_Values.slice(0);\n            }\n            var values = scope_Values.map(options.format.to);\n            // If only one handle is used, return a single value.\n            if (values.length === 1) {\n                return values[0];\n            }\n            return values;\n        }\n        // Removes classes from the root and empties it.\n        function destroy() {\n            // remove protected internal listeners\n            removeEvent(INTERNAL_EVENT_NS.aria);\n            removeEvent(INTERNAL_EVENT_NS.tooltips);\n            Object.keys(options.cssClasses).forEach(function (key) {\n                removeClass(scope_Target, options.cssClasses[key]);\n            });\n            while (scope_Target.firstChild) {\n                scope_Target.removeChild(scope_Target.firstChild);\n            }\n            delete scope_Target.noUiSlider;\n        }\n        function getNextStepsForHandle(handleNumber) {\n            var location = scope_Locations[handleNumber];\n            var nearbySteps = scope_Spectrum.getNearbySteps(location);\n            var value = scope_Values[handleNumber];\n            var increment = nearbySteps.thisStep.step;\n            var decrement = null;\n            // If snapped, directly use defined step value\n            if (options.snap) {\n                return [\n                    value - nearbySteps.stepBefore.startValue || null,\n                    nearbySteps.stepAfter.startValue - value || null,\n                ];\n            }\n            // If the next value in this step moves into the next step,\n            // the increment is the start of the next step - the current value\n            if (increment !== false) {\n                if (value + increment > nearbySteps.stepAfter.startValue) {\n                    increment = nearbySteps.stepAfter.startValue - value;\n                }\n            }\n            // If the value is beyond the starting point\n            if (value > nearbySteps.thisStep.startValue) {\n                decrement = nearbySteps.thisStep.step;\n            }\n            else if (nearbySteps.stepBefore.step === false) {\n                decrement = false;\n            }\n            // If a handle is at the start of a step, it always steps back into the previous step first\n            else {\n                decrement = value - nearbySteps.stepBefore.highestStep;\n            }\n            // Now, if at the slider edges, there is no in/decrement\n            if (location === 100) {\n                increment = null;\n            }\n            else if (location === 0) {\n                decrement = null;\n            }\n            // As per #391, the comparison for the decrement step can have some rounding issues.\n            var stepDecimals = scope_Spectrum.countStepDecimals();\n            // Round per #391\n            if (increment !== null && increment !== false) {\n                increment = Number(increment.toFixed(stepDecimals));\n            }\n            if (decrement !== null && decrement !== false) {\n                decrement = Number(decrement.toFixed(stepDecimals));\n            }\n            return [decrement, increment];\n        }\n        // Get the current step size for the slider.\n        function getNextSteps() {\n            return scope_HandleNumbers.map(getNextStepsForHandle);\n        }\n        // Updatable: margin, limit, padding, step, range, animate, snap\n        function updateOptions(optionsToUpdate, fireSetEvent) {\n            // Spectrum is created using the range, snap, direction and step options.\n            // 'snap' and 'step' can be updated.\n            // If 'snap' and 'step' are not passed, they should remain unchanged.\n            var v = valueGet();\n            var updateAble = [\n                \"margin\",\n                \"limit\",\n                \"padding\",\n                \"range\",\n                \"animate\",\n                \"snap\",\n                \"step\",\n                \"format\",\n                \"pips\",\n                \"tooltips\",\n            ];\n            // Only change options that we're actually passed to update.\n            updateAble.forEach(function (name) {\n                // Check for undefined. null removes the value.\n                if (optionsToUpdate[name] !== undefined) {\n                    originalOptions[name] = optionsToUpdate[name];\n                }\n            });\n            var newOptions = testOptions(originalOptions);\n            // Load new options into the slider state\n            updateAble.forEach(function (name) {\n                if (optionsToUpdate[name] !== undefined) {\n                    options[name] = newOptions[name];\n                }\n            });\n            scope_Spectrum = newOptions.spectrum;\n            // Limit, margin and padding depend on the spectrum but are stored outside of it. (#677)\n            options.margin = newOptions.margin;\n            options.limit = newOptions.limit;\n            options.padding = newOptions.padding;\n            // Update pips, removes existing.\n            if (options.pips) {\n                pips(options.pips);\n            }\n            else {\n                removePips();\n            }\n            // Update tooltips, removes existing.\n            if (options.tooltips) {\n                tooltips();\n            }\n            else {\n                removeTooltips();\n            }\n            // Invalidate the current positioning so valueSet forces an update.\n            scope_Locations = [];\n            valueSet(isSet(optionsToUpdate.start) ? optionsToUpdate.start : v, fireSetEvent);\n        }\n        // Initialization steps\n        function setupSlider() {\n            // Create the base element, initialize HTML and set classes.\n            // Add handles and connect elements.\n            scope_Base = addSlider(scope_Target);\n            addElements(options.connect, scope_Base);\n            // Attach user events.\n            bindSliderEvents(options.events);\n            // Use the public value method to set the start values.\n            valueSet(options.start);\n            if (options.pips) {\n                pips(options.pips);\n            }\n            if (options.tooltips) {\n                tooltips();\n            }\n            aria();\n        }\n        setupSlider();\n        var scope_Self = {\n            destroy: destroy,\n            steps: getNextSteps,\n            on: bindEvent,\n            off: removeEvent,\n            get: valueGet,\n            set: valueSet,\n            setHandle: valueSetHandle,\n            reset: valueReset,\n            // Exposed for unit testing, don't use this in your application.\n            __moveHandles: function (upward, proposal, handleNumbers) {\n                moveHandles(upward, proposal, scope_Locations, handleNumbers);\n            },\n            options: originalOptions,\n            updateOptions: updateOptions,\n            target: scope_Target,\n            removePips: removePips,\n            removeTooltips: removeTooltips,\n            getPositions: function () {\n                return scope_Locations.slice();\n            },\n            getTooltips: function () {\n                return scope_Tooltips;\n            },\n            getOrigins: function () {\n                return scope_Handles;\n            },\n            pips: pips, // Issue #594\n        };\n        return scope_Self;\n    }\n    // Run the standard initializer\n    function initialize(target, originalOptions) {\n        if (!target || !target.nodeName) {\n            throw new Error(\"noUiSlider: create requires a single element, got: \" + target);\n        }\n        // Throw an error if the slider was already initialized.\n        if (target.noUiSlider) {\n            throw new Error(\"noUiSlider: Slider was already initialized.\");\n        }\n        // Test the options and create the slider environment;\n        var options = testOptions(originalOptions);\n        var api = scope(target, options, originalOptions);\n        target.noUiSlider = api;\n        return api;\n    }\n    var nouislider = {\n        // Exposed for unit testing, don't use this in your application.\n        __spectrum: Spectrum,\n        // A reference to the default classes, allows global changes.\n        // Use the cssClasses option for changes to one slider.\n        cssClasses: cssClasses,\n        create: initialize,\n    };\n\n    exports.create = initialize;\n    exports.cssClasses = cssClasses;\n    exports[\"default\"] = nouislider;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","<script>\n  import { onMount } from 'svelte';\n  import Heart from '../svg/Heart.svelte';\n  import noUiSlider from 'nouislider';\n  import 'nouislider/dist/nouislider.css';\n\n  export let heartRange;\n  export let start;\n\n  onMount(() => {\n    const slider = document.getElementById('slider');\n    noUiSlider.create(slider, {\n        start: heartRange,\n        connect: [true, false, true],\n        step: 1,\n        margin: 10,\n        range: {\n          'min': 40,\n          'max': 220\n        }\n    });\n\n    slider.noUiSlider.on('update', (values) => {\n      heartRange[0] = parseInt(values[0]);\n      heartRange[1] = parseInt(values[1]);\n      localStorage.setItem('heartRange', heartRange.join(','));\n    });\n  });\n\n</script>\n\n<div class=\"content\">\n  <div class=\"header\">\n    <h1>Min <Heart size=64 /> Max</h1>\n  </div>\n\n  <div class=\"slider-group\">\n    <div class=\"label\">{heartRange[0]} - {heartRange[1]} BPM</div>\n    <div id=\"slider\"></div>\n  </div>\n\n  <button class=\"button\" on:click={start}>Start</button>\n</div>\n","<script>\n  export let isTooLow;\n  export let isTooHigh;\n  export let hearRateBeat;\n  export let heartRate;\n  export let stop;\n</script>\n\n<div class=\"content\">\n  <div class=\"header\">\n    <div class=\"heartrate\" class:heartrate-alert=\"{isTooLow || isTooHigh}\" class:heartrate-beat=\"{hearRateBeat}\">{heartRate} BPM</div>\n    {#if isTooLow}\n    <div>Too low!</div>\n    {:else if isTooHigh}\n    <div>Too high!</div>\n    {:else}\n    <div>Good</div>\n    {/if}\n  </div>\n  <button class=\"button\" on:click={stop}>Stop</button>\n</div>\n","<script>\n  import { HeartRateSensor } from './lib/heartRateSensor';\n  import { Howl, Howler } from 'howler';\n  import StepHome from './steps/Home.svelte';\n  import StepSetup from './steps/Setup.svelte';\n  import StepRun from './steps/Run.svelte';\n\n  Howler.autoUnlock = false;\n\n  let isConnecting = false;\n  let step = 'home';\n  let heartRange = [40, 220];\n  const cache = localStorage.getItem('heartRange');\n  if (cache) {\n    heartRange = cache.split(',');\n  }\n  let heartRate = 0;\n  let hearRateBeat = false;\n  let isTooLow = false;\n  let isTooHigh = false;\n\n  const heartRateSensor = new HeartRateSensor();\n\n  async function connect() {\n    try {\n      isConnecting = true;\n      await heartRateSensor.connect();\n      await heartRateSensor.enableMultiConnection();\n      step = 'setup';\n    } catch (err) {\n      alert(err);\n    }\n    isConnecting = false;\n\t}\n\n  async function start() {\n    heartRate = 0;\n    isTooLow = false;\n    isTooHigh = false;\n    step = 'run';\n\n    try {\n      await heartRateSensor.characteristicHeartRate.startNotifications();\n      heartRateSensor.characteristicHeartRate.addEventListener('characteristicvaluechanged', beat);\n      setInterval(() => {\n        beat();\n      }, 1000);\n    } catch (err) {\n      alert(err);\n      step = 'home';\n    }\n  }\n\n  async function stop() {\n    try {\n      await heartRateSensor.characteristicHeartRate.stopNotifications();\n      heartRateSensor.characteristicHeartRate.removeEventListener('characteristicvaluechanged', beat);\n    } catch (err) {\n      alert(err);\n    }\n    step = 'setup';\n  }\n\n  function beat(event) {\n    if (hearRateBeat) return;\n    hearRateBeat = true;\n\n    var heartRateMeasurement = heartRateSensor.parseHeartRate(event.target.value);\n    heartRate = heartRateMeasurement.heartRate;\n    const [min, max] = heartRange;\n\n    if (heartRate > max) {\n      const highBeep = new Howl({\n        src: ['sound/high_beep.mp3']\n      });\n      highBeep.play();\n      isTooHigh = true;\n    } else if (heartRate < min) {\n      const lowBeep = new Howl({\n        src: ['sound/low_beep.mp3']\n      });\n      lowBeep.play();\n      isTooLow = true;\n    } else {\n      isTooHigh = false;\n      isTooLow = false;\n    }\n\n    setTimeout(() => {\n      hearRateBeat = false;\n    }, 300);\n  }\n</script>\n\n<div class=\"container\">\n  {#if step === 'home'}\n  <StepHome connect={connect} />\n  {:else if step === 'setup'}\n  <StepSetup heartRange={heartRange} start={start} />\n  {:else if step === 'run'}\n  <StepRun isTooHigh={isTooHigh} isTooLow={isTooLow} hearRateBeat={hearRateBeat} heartRate={heartRate} stop={stop} />\n  {/if}\n</div>\n","import './main.scss'\nimport App from './App.svelte';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","SERVICE_HEART_RATE","SERVICE_CONFIGURATION","HeartRateSensor","constructor","device","server","serviceHeartRate","serviceConfiguration","characteristicConfiguration","_promises","async","navigator","bluetooth","requestDevice","filters","services","optionalServices","gatt","connect","getPrimaryService","getCharacteristic","characteristicHeartRate","startNotifications","getUint8","configuration","byteLength","reject","_getConfiguration","_setConfiguration","stopNotifications","id","writeValueWithoutResponse","Uint8Array","of","parseHeartRate","flags","buffer","DataView","result","heartRate","getUint16","contactDetected","energyExpended","rrIntervals","HowlerGlobal","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","masterGain","noAudio","usingWebAudio","autoSuspend","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","split","checkSafari","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","destination","start","noteOn","resume","onended","disconnect","_emit","_obtainHtml5Audio","testPlay","play","catch","console","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","apply","fade","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","remCache","cache","on","events","off","isId","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","atob","dataView","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","createPanner","button","div1","div0","svg","path0","path1","size","isValidFormatter","entry","isValidPartialFormatter","removeElement","el","parentElement","isSet","preventDefault","unique","array","closest","offset","elem","rect","getBoundingClientRect","doc","ownerDocument","docElem","documentElement","pageOffset","getPageOffset","top","clientTop","left","clientLeft","isNumeric","isFinite","addClassFor","className","addClass","removeClass","asArray","countDecimals","numStr","pieces","String","remove","RegExp","join","hasClass","contains","supportPageOffset","pageXOffset","isCSS1Compat","compatMode","scrollLeft","body","pageYOffset","scrollTop","getActions","pointerEnabled","move","msPointerEnabled","getSupportsPassive","supportsPassive","opts","defineProperty","get","getSupportsTouchActionNone","CSS","supports","subRangeRatio","pb","fromPercentage","range","startRange","toPercentage","isPercentage","getJ","arr","toStepping","xVal","xPct","va","vb","fromStepping","getStep","xSteps","snap","PipsType","PipsMode","Spectrum","singleStep","xNumSteps","xHighestCompleteStep","ordered","sort","handleEntryPoint","handleStepPoint","getDistance","distances","getAbsoluteDistance","direction","start_factor","xPct_index","rest_factor","rest_rel_distance","range_pct","rel_range_distance","abs_distance_counter","range_counter","getDefaultStep","isDown","getNearbySteps","stepBefore","startValue","step","highestStep","thisStep","stepAfter","countStepDecimals","stepDecimals","hasNoSize","convert","percentage","value1","Number","n","totalSteps","toFixed","defaultFormatter","cssClasses","base","origin","handle","handleLower","handleUpper","touchArea","horizontal","vertical","background","connects","ltr","rtl","textDirectionLtr","textDirectionRtl","draggable","drag","tap","active","tooltip","pips","pipsHorizontal","pipsVertical","marker","markerHorizontal","markerVertical","markerNormal","markerLarge","markerSub","valueHorizontal","valueVertical","valueNormal","valueLarge","valueSub","INTERNAL_EVENT_NS","tooltips","aria","testStep","parsed","testKeyboardPageMultiplier","keyboardPageMultiplier","testKeyboardMultiplier","keyboardMultiplier","testKeyboardDefaultStep","keyboardDefaultStep","testRange","spectrum","testStart","handles","testSnap","testAnimate","animate","testAnimationDuration","animationDuration","testConnect","testOrientation","ort","testMargin","margin","testLimit","testPadding","padding","totalPadding","firstValue","testDirection","dir","testBehaviour","fixed","hover","unconstrained","dragAll","testTooltips","formatter","testHandleAttributes","handleAttributes","testAriaFormat","ariaFormat","testFormat","testKeyboardSupport","keyboardSupport","testDocumentElement","testCssPrefix","cssPrefix","testCssClasses","testOptions","tests","r","t","behaviour","defaults","msPrefix","style","msTransform","noPrefix","transform","transformRule","styles","scope","originalOptions","scope_Base","scope_Handles","scope_Connects","scope_Pips","scope_Tooltips","actions","scope_Target","scope_Spectrum","scope_Values","scope_Locations","scope_HandleNumbers","scope_ActiveHandlesCount","scope_Events","scope_Document","scope_DocumentElement","scope_Body","scope_DirOffset","addNodeTo","addTarget","div","addOrigin","handleNumber","eventKeydown","attributes_1","addConnect","addElements","connectOptions","connectBase","addSlider","getComputedStyle","addTooltip","firstChild","isSliderDisabled","hasAttribute","isHandleDisabled","removeTooltips","removeEvent","bindEvent","values","unencoded","formattedValue","innerHTML","positions","checkHandlePosition","getGroup","mode","Range","Steps","Count","interval","spread","mapToRange","stepped","Positions","Values","generateSpread","safeIncrement","increment","group","indexes","firstInRange","lastInRange","ignoreFirst","ignoreLast","prevPct","unshift","current","q","newPct","pctDifference","pctPos","realSteps","stepSize","low","high","isSteps","density","LargeValue","SmallValue","NoValue","addMarking","filterFunc","_a","_b","valueSizeClasses","None","markerSizeClasses","valueOrientationClasses","markerOrientationClasses","getClasses","sizeClasses","addSpread","removePips","baseSize","alt","width","height","attachEvent","fixEvent","doNotReject","buttons","calcPoint","points","methods","eventName","passive","eventTarget","touch","mouse","pointer","touches","isTouchOnTarget","checkTouch","composed","composedPath","targetTouches","pageX","pageY","targetTouch","find","changedTouches","clientX","clientY","cursor","calcPointToPercentage","proposal","getClosestHandle","clickedPosition","smallestDifference","handlePosition","differenceWithThisHandle","documentLeave","nodeName","relatedTarget","eventEnd","eventMove","buttonsProperty","movement","startCalcPoint","moveHandles","locations","handleNumbers","listeners","setZindex","fireEvent","eventStart","some","stopPropagation","moveEvent","endEvent","outEvent","concat","eventTap","setHandle","eventHover","targetEvent","scope_Self","horizontalKeys","verticalKeys","largeStepKeys","edgeKeys","reverse","isLargeDown","isLargeUp","isUp","isMin","isMax","getNextStepsForHandle","bindSliderEvents","handleBefore","handleAfter","eventHolders","handlesToDrag","handleNumbersToDrag","eventHolder","namespacedEvent","isInternalNamespace","namespace","substring","tEvent","tNamespace","eventType","reference","lookBackward","lookForward","getValue","distance","inRuleOrder","v","upward","proposals","firstHandle","f","transformDirection","updateHandlePosition","translateRule","updateConnect","zIndex","exactInput","h","connectWidth","scaleRule","resolveToValue","valueSet","input","fireSetEvent","isInit","space_1","valueReset","valueSetHandle","valueGet","destroy","noUiSlider","nearbySteps","decrement","getNextSteps","updateOptions","optionsToUpdate","updateAble","newOptions","setupSlider","set","__moveHandles","getPositions","getTooltips","getOrigins","initialize","api","nouislider","__spectrum","factory","t3_value","t5_value","div4","h1","div3","div2","t3","t5","heartRange","slider","getElementById","$$invalidate","localStorage","setItem","create_if_block","create_if_block_1","isTooLow","isTooHigh","hearRateBeat","isConnecting","getItem","heartRateSensor","beat","heartRateMeasurement","enableMultiConnection","alert"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAsRhF,SAASE,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAiBlC,SAASG,EAAYH,GACjB,OAAOC,SAASG,gBAAgB,6BAA8BJ,GAElE,SAASK,EAAKC,GACV,OAAOL,SAASM,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAOlB,EAAMmB,EAAOC,EAASC,GAElC,OADArB,EAAKsB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMrB,EAAKuB,oBAAoBJ,EAAOC,EAASC,GA8B1D,SAASG,EAAKxB,EAAMyB,EAAWC,GACd,MAATA,EACA1B,EAAK2B,gBAAgBF,GAChBzB,EAAK4B,aAAaH,KAAeC,GACtC1B,EAAK6B,aAAaJ,EAAWC,GAqLrC,SAASI,EAAShB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKiB,YAAchB,IACnBD,EAAKC,KAAOA,GAiGpB,SAASiB,EAAaxB,EAASC,EAAMwB,GACjCzB,EAAQ0B,UAAUD,EAAS,MAAQ,UAAUxB,GAqNjD,IAAI0B,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAUxB,SAASC,EAAQpD,IARjB,WACI,IAAKiD,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,GAMPK,GAAwBC,GAAGC,SAASC,KAAKzD,GA6C7C,MAAM0D,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBlE,GACzB4D,EAAiBH,KAAKzD,GAuB1B,MAAMmE,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASC,IACL,MAAMC,EAAkBtB,EACxB,EAAG,CAGC,KAAOoB,EAAWX,EAAiBc,QAAQ,CACvC,MAAMrB,EAAYO,EAAiBW,GACnCA,IACAnB,EAAsBC,GACtBsB,EAAOtB,EAAUI,IAKrB,IAHAL,EAAsB,MACtBQ,EAAiBc,OAAS,EAC1BH,EAAW,EACJV,EAAkBa,QACrBb,EAAkBe,KAAlBf,GAIJ,IAAK,IAAIgB,EAAI,EAAGA,EAAIf,EAAiBY,OAAQG,GAAK,EAAG,CACjD,MAAMC,EAAWhB,EAAiBe,GAC7BR,EAAeU,IAAID,KAEpBT,EAAeW,IAAIF,GACnBA,KAGRhB,EAAiBY,OAAS,QACrBd,EAAiBc,QAC1B,KAAOX,EAAgBW,QACnBX,EAAgBa,KAAhBb,GAEJI,GAAmB,EACnBE,EAAeY,QACf7B,EAAsBqB,GAE1B,SAASE,EAAOlB,GACZ,GAAoB,OAAhBA,EAAGyB,SAAmB,CACtBzB,EAAGkB,SACHrE,EAAQmD,EAAG0B,eACX,MAAMC,EAAQ3B,EAAG2B,MACjB3B,EAAG2B,MAAQ,EAAE,GACb3B,EAAGyB,UAAYzB,EAAGyB,SAASG,EAAE5B,EAAG6B,IAAKF,GACrC3B,EAAG8B,aAAa/E,QAAQ4D,IAiBhC,MAAMoB,EAAW,IAAIlB,IACrB,IAAImB,EAcJ,SAASC,EAAcC,EAAOC,GACtBD,GAASA,EAAMd,IACfW,EAASK,OAAOF,GAChBA,EAAMd,EAAEe,IAGhB,SAASE,EAAeH,EAAOC,EAAOvE,EAAQyD,GAC1C,GAAIa,GAASA,EAAMI,EAAG,CAClB,GAAIP,EAAST,IAAIY,GACb,OACJH,EAASR,IAAIW,GACbF,EAAOO,EAAErC,MAAK,KACV6B,EAASK,OAAOF,GACZb,IACIzD,GACAsE,EAAMM,EAAE,GACZnB,QAGRa,EAAMI,EAAEH,IA6oBhB,SAASM,EAAiBP,GACtBA,GAASA,EAAMK,IAKnB,SAASG,EAAgB9C,EAAWtC,EAAQI,EAAQiF,GAChD,MAAMlB,SAAEA,EAAQxB,SAAEA,EAAQ2C,WAAEA,EAAUd,aAAEA,GAAiBlC,EAAUI,GACnEyB,GAAYA,EAASoB,EAAEvF,EAAQI,GAC1BiF,GAEDhC,GAAoB,KAChB,MAAMmC,EAAiB7C,EAAS8C,IAAIvG,GAAKwG,OAAOhG,GAC5C4F,EACAA,EAAW1C,QAAQ4C,GAKnBjG,EAAQiG,GAEZlD,EAAUI,GAAGC,SAAW,MAGhC6B,EAAa/E,QAAQ4D,GAEzB,SAASsC,EAAkBrD,EAAWsD,GAClC,MAAMlD,EAAKJ,EAAUI,GACD,OAAhBA,EAAGyB,WACH5E,EAAQmD,EAAG4C,YACX5C,EAAGyB,UAAYzB,EAAGyB,SAASe,EAAEU,GAG7BlD,EAAG4C,WAAa5C,EAAGyB,SAAW,KAC9BzB,EAAG6B,IAAM,IAGjB,SAASsB,EAAWvD,EAAWwB,IACI,IAA3BxB,EAAUI,GAAG2B,MAAM,KACnBxB,EAAiBD,KAAKN,GArzBrBc,IACDA,GAAmB,EACnBH,EAAiB6C,KAAKrC,IAqzBtBnB,EAAUI,GAAG2B,MAAM0B,KAAK,IAE5BzD,EAAUI,GAAG2B,MAAOP,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASkC,EAAK1D,EAAWhB,EAAS2E,EAAUC,EAAiBC,EAAWC,EAAOC,EAAehC,EAAQ,EAAE,IACpG,MAAMiC,EAAmBlE,EACzBC,EAAsBC,GACtB,MAAMI,EAAKJ,EAAUI,GAAK,CACtByB,SAAU,KACVI,IAAK,KAEL6B,MAAAA,EACAxC,OAAQ3E,EACRkH,UAAAA,EACAI,MAAOnH,IAEPuD,SAAU,GACV2C,WAAY,GACZkB,cAAe,GACfpC,cAAe,GACfI,aAAc,GACdiC,QAAS,IAAIC,IAAIpF,EAAQmF,UAAYH,EAAmBA,EAAiB5D,GAAG+D,QAAU,KAEtFE,UAAWvH,IACXiF,MAAAA,EACAuC,YAAY,EACZC,KAAMvF,EAAQtB,QAAUsG,EAAiB5D,GAAGmE,MAEhDR,GAAiBA,EAAc3D,EAAGmE,MAClC,IAAIC,GAAQ,EAkBZ,GAjBApE,EAAG6B,IAAM0B,EACHA,EAAS3D,EAAWhB,EAAQ8E,OAAS,IAAI,CAACtC,EAAGiD,KAAQC,KACnD,MAAMrF,EAAQqF,EAAKrD,OAASqD,EAAK,GAAKD,EAOtC,OANIrE,EAAG6B,KAAO4B,EAAUzD,EAAG6B,IAAIT,GAAIpB,EAAG6B,IAAIT,GAAKnC,MACtCe,EAAGkE,YAAclE,EAAG6D,MAAMzC,IAC3BpB,EAAG6D,MAAMzC,GAAGnC,GACZmF,GACAjB,EAAWvD,EAAWwB,IAEvBiD,KAET,GACNrE,EAAGkB,SACHkD,GAAQ,EACRvH,EAAQmD,EAAG0B,eAEX1B,EAAGyB,WAAW+B,GAAkBA,EAAgBxD,EAAG6B,KAC/CjD,EAAQtB,OAAQ,CAChB,GAAIsB,EAAQ2F,QAAS,CAEjB,MAAMC,EA91ClB,SAAkBzG,GACd,OAAO0G,MAAMC,KAAK3G,EAAQ4G,YA61CJC,CAAShG,EAAQtB,QAE/B0C,EAAGyB,UAAYzB,EAAGyB,SAASoD,EAAEL,GAC7BA,EAAMzH,QAAQa,QAIdoC,EAAGyB,UAAYzB,EAAGyB,SAASc,IAE3B3D,EAAQkG,OACR7C,EAAcrC,EAAUI,GAAGyB,UAC/BiB,EAAgB9C,EAAWhB,EAAQtB,OAAQsB,EAAQlB,OAAQkB,EAAQ+D,eAEnE5B,IAEJpB,EAAsBiE,GAkD1B,MAAMmB,EACFC,WACI/B,EAAkBgC,KAAM,GACxBA,KAAKD,SAAWzI,EAEpB2I,IAAIC,EAAM9D,GACN,MAAM4C,EAAagB,KAAKjF,GAAGiE,UAAUkB,KAAUF,KAAKjF,GAAGiE,UAAUkB,GAAQ,IAEzE,OADAlB,EAAU/D,KAAKmB,GACR,KACH,MAAM+D,EAAQnB,EAAUoB,QAAQhE,IACjB,IAAX+D,GACAnB,EAAUqB,OAAOF,EAAO,IAGpCG,KAAKC,GA73DT,IAAkBC,EA83DNR,KAAKS,QA93DCD,EA83DkBD,EA73DG,IAA5B7I,OAAOgJ,KAAKF,GAAKxE,UA83DhBgE,KAAKjF,GAAGkE,YAAa,EACrBe,KAAKS,MAAMF,GACXP,KAAKjF,GAAGkE,YAAa,IC36DjC,MAAM0B,EAAqB,aAErBC,EAAwB,uCAGvB,MAAMC,EACXC,cACEd,KAAKe,OAAS,KACdf,KAAKgB,OAAS,KACdhB,KAAKiB,iBAAmB,KACxBjB,KAAKkB,qBAAuB,KAC5BlB,KAAKmB,4BAA8B,KACnCnB,KAAKoB,UAAY,GAGnBC,gBACErB,KAAKe,aAAeO,UAAUC,UAAUC,cAAc,CACpDC,QAAS,CAAC,CAAEC,SAAU,CAAEf,KACxBgB,iBAAkB,CAAEf,KAEtBZ,KAAKgB,aAAehB,KAAKe,OAAOa,KAAKC,UACrC7B,KAAKiB,uBAAyBjB,KAAKgB,OAAOc,kBAAkBnB,GAC5DX,KAAKkB,2BAA6BlB,KAAKgB,OAAOc,kBAAkBlB,GAChEZ,KAAKmB,kCAAoCnB,KAAKkB,qBAAqBa,kBApBlC,wCAqBjC/B,KAAKgC,8BAAgChC,KAAKiB,iBAAiBc,kBAvB9B,0BA0B/BV,oCACQrB,KAAKmB,4BAA4Bc,qBACvCjC,KAAKmB,4BAA4BvH,iBAAiB,8BAA+BH,IAC/E,MAAMO,MAAEA,GAAUP,EAAMpB,OAET,IADA2B,EAAMkI,SAAS,GAE5BlC,KAAKoB,UAAUe,cAAc3G,QAA6B,IAArBxB,EAAMoI,YAAoBpI,EAAMkI,SAAS,IAE9ElC,KAAKoB,UAAUe,cAAcE,OAAO,IAAIxH,MAAM,aAI1B,UADMmF,KAAKsC,kBAAkB,UAE7CtC,KAAKuC,kBAAkB,EAAG,SAE5BvC,KAAKmB,4BAA4BqB,oBAGzCnB,wBAAwBoB,SAChBzC,KAAKmB,4BAA4BuB,0BAA0BC,WAAWC,GAAGH,IAI/E,OAHgB,IAAIlH,SAAQ,CAACC,EAAS6G,KACpCrC,KAAKoB,UAAUe,cAAgB,CAAE3G,QAAAA,EAAS6G,OAAAA,MAK9ChB,wBAAwBoB,EAAIzI,SACpBgG,KAAKmB,4BAA4BuB,0BAA0BC,WAAWC,GAAGH,EAAIzI,IAInF,OAHgB,IAAIuB,SAAQ,CAACC,EAAS6G,KACpCrC,KAAKoB,UAAUe,cAAgB,CAAE3G,QAAAA,EAAS6G,OAAAA,MAK9CQ,eAAe7I,GAGb,IAAI8I,GADJ9I,EAAQA,EAAM+I,OAAS/I,EAAQ,IAAIgJ,SAAShJ,IAC1BkI,SAAS,GAEvBe,EAAS,GACT9C,EAAQ,EAFa,EAAR2C,GAIfG,EAAOC,UAAYlJ,EAAMmJ,UAAUhD,GAAwB,GAC3DA,GAAS,IAET8C,EAAOC,UAAYlJ,EAAMkI,SAAS/B,GAClCA,GAAS,GAEX,IAAIiD,EAA0B,EAARN,EAWtB,GAVmC,EAARA,IAEzBG,EAAOG,kBAAoBA,GAED,EAARN,IAElBG,EAAOI,eAAiBrJ,EAAMmJ,UAAUhD,GAAwB,GAChEA,GAAS,GAEqB,GAAR2C,EACD,CACrB,IAAIQ,EAAc,GAClB,KAAOnD,EAAQ,EAAInG,EAAMoI,WAAYjC,GAAS,EAC5CmD,EAAYrI,KAAKjB,EAAMmJ,UAAUhD,GAAwB,IAE3D8C,EAAOK,YAAcA,EAEvB,OAAOL;;;;;;;;;gCCnFX,WAWE,IAAIM,EAAe,WACjBvD,KAAK3B,QAEPkF,EAAaC,UAAY,CAKvBnF,KAAM,WACJ,IAAIoF,EAAOzD,MAAQ0D,EA8BnB,OA3BAD,EAAKE,SAAW,IAGhBF,EAAKG,gBAAkB,GACvBH,EAAKI,cAAgB,GAGrBJ,EAAKK,QAAU,GACfL,EAAKM,OAAS,GACdN,EAAKO,QAAS,EACdP,EAAKQ,QAAU,EACfR,EAAKS,cAAgB,iBACrBT,EAAKU,WAAgC,oBAAXC,QAA0BA,OAAO9C,UAAa8C,OAAO9C,UAAY,KAG3FmC,EAAKY,WAAa,KAClBZ,EAAKa,SAAU,EACfb,EAAKc,eAAgB,EACrBd,EAAKe,aAAc,EACnBf,EAAK7G,IAAM,KAGX6G,EAAKgB,YAAa,EAGlBhB,EAAKiB,SAEEjB,GAQTkB,OAAQ,SAASC,GACf,IAAInB,EAAOzD,MAAQ0D,EAQnB,GAPAkB,EAAMC,WAAWD,GAGZnB,EAAK7G,KACRkI,SAGiB,IAARF,GAAuBA,GAAO,GAAKA,GAAO,EAAG,CAItD,GAHAnB,EAAKQ,QAAUW,EAGXnB,EAAKO,OACP,OAAOP,EAILA,EAAKc,eACPd,EAAKY,WAAWU,KAAKC,eAAeJ,EAAKlB,EAAO9G,IAAIqI,aAItD,IAAK,IAAI9I,EAAE,EAAGA,EAAEsH,EAAKM,OAAO/H,OAAQG,IAClC,IAAKsH,EAAKM,OAAO5H,GAAG+I,UAKlB,IAHA,IAAIC,EAAM1B,EAAKM,OAAO5H,GAAGiJ,eAGhBC,EAAE,EAAGA,EAAEF,EAAInJ,OAAQqJ,IAAK,CAC/B,IAAIC,EAAQ7B,EAAKM,OAAO5H,GAAGoJ,WAAWJ,EAAIE,IAEtCC,GAASA,EAAME,QACjBF,EAAME,MAAMb,OAASW,EAAMrB,QAAUW,GAM7C,OAAOnB,EAGT,OAAOA,EAAKQ,SAOdwB,KAAM,SAASC,GACb,IAAIjC,EAAOzD,MAAQ0D,EAGdD,EAAK7G,KACRkI,IAGFrB,EAAKO,OAAS0B,EAGVjC,EAAKc,eACPd,EAAKY,WAAWU,KAAKC,eAAeU,EAAQ,EAAIjC,EAAKQ,QAASP,EAAO9G,IAAIqI,aAI3E,IAAK,IAAI9I,EAAE,EAAGA,EAAEsH,EAAKM,OAAO/H,OAAQG,IAClC,IAAKsH,EAAKM,OAAO5H,GAAG+I,UAKlB,IAHA,IAAIC,EAAM1B,EAAKM,OAAO5H,GAAGiJ,eAGhBC,EAAE,EAAGA,EAAEF,EAAInJ,OAAQqJ,IAAK,CAC/B,IAAIC,EAAQ7B,EAAKM,OAAO5H,GAAGoJ,WAAWJ,EAAIE,IAEtCC,GAASA,EAAME,QACjBF,EAAME,MAAME,QAAQ,GAAiBJ,EAAMtB,QAMnD,OAAOP,GAMTkC,KAAM,WAIJ,IAHA,IAAIlC,EAAOzD,MAAQ0D,EAGVvH,EAAE,EAAGA,EAAEsH,EAAKM,OAAO/H,OAAQG,IAClCsH,EAAKM,OAAO5H,GAAGwJ,OAGjB,OAAOlC,GAOTmC,OAAQ,WAGN,IAFA,IAAInC,EAAOzD,MAAQ0D,EAEVvH,EAAEsH,EAAKM,OAAO/H,OAAO,EAAGG,GAAG,EAAGA,IACrCsH,EAAKM,OAAO5H,GAAGyJ,SAUjB,OANInC,EAAKc,eAAiBd,EAAK7G,UAAiC,IAAnB6G,EAAK7G,IAAIiJ,QACpDpC,EAAK7G,IAAIiJ,QACTpC,EAAK7G,IAAM,KACXkI,KAGKrB,GAQTqC,OAAQ,SAASC,GACf,OAAQ/F,MAAQ0D,GAAQI,QAAQiC,EAAIC,QAAQ,MAAO,MAOrDtB,OAAQ,WACN,IAAIjB,EAAOzD,MAAQ0D,EASnB,GANAD,EAAKwC,MAAQxC,EAAK7G,KAAM6G,EAAK7G,IAAIqJ,OAAuB,YAGxDxC,EAAKyC,gBAGAzC,EAAKc,cAER,GAAqB,oBAAV4B,MACT,SAIuC,KAH1B,IAAIA,OAGCC,mBACd3C,EAAKS,cAAgB,WAEvB,MAAMmC,GACN5C,EAAKa,SAAU,OAGjBb,EAAKa,SAAU,EAKnB,KACa,IAAI6B,OACNT,QACPjC,EAAKa,SAAU,GAEjB,MAAO+B,IAOT,OAJK5C,EAAKa,SACRb,EAAK6C,eAGA7C,GAOT6C,aAAc,WACZ,IAAI7C,EAAOzD,MAAQ0D,EACf6C,EAAY,KAGhB,IACEA,EAA8B,oBAAVJ,MAAyB,IAAIA,MAAU,KAC3D,MAAOK,GACP,OAAO/C,EAGT,IAAK8C,GAA8C,mBAA1BA,EAAUE,YACjC,OAAOhD,EAGT,IAAIiD,EAAWH,EAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAGhEW,EAAKlD,EAAKU,WAAaV,EAAKU,WAAWyC,UAAY,GACnDC,EAAaF,EAAGG,MAAM,kBACtBC,EAAcF,GAAcG,SAASH,EAAW,GAAGI,MAAM,KAAK,GAAI,IAAM,GACxEC,GAAwC,IAA1BP,EAAGvG,QAAQ,YAA8C,IAA1BuG,EAAGvG,QAAQ,UACxD+G,EAAgBR,EAAGG,MAAM,mBACzBM,EAAeF,GAAeC,GAAiBH,SAASG,EAAc,GAAI,IAAM,GAoBpF,OAlBA1D,EAAKK,QAAU,CACbuD,MAASN,IAAeL,IAAYH,EAAUE,YAAY,cAAcT,QAAQ,OAAQ,KACxFsB,OAAQZ,EACRa,OAAQhB,EAAUE,YAAY,4BAA4BT,QAAQ,OAAQ,IAC1EwB,MAAOjB,EAAUE,YAAY,8BAA8BT,QAAQ,OAAQ,IAC3EyB,MAAOlB,EAAUE,YAAY,8BAA8BT,QAAQ,OAAQ,IAC3E0B,OAAQnB,EAAUE,YAAY,0BAA4BF,EAAUE,YAAY,cAAcT,QAAQ,OAAQ,IAC9G2B,MAAOpB,EAAUE,YAAY,cAAcT,QAAQ,OAAQ,IAC3D4B,MAAOrB,EAAUE,YAAY,gBAAgBT,QAAQ,OAAQ,IAC7D6B,OAAQtB,EAAUE,YAAY,iBAAmBF,EAAUE,YAAY,eAAiBF,EAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAC7I8B,OAAQvB,EAAUE,YAAY,iBAAmBF,EAAUE,YAAY,eAAiBF,EAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAC7I+B,OAAQxB,EAAUE,YAAY,iBAAmBF,EAAUE,YAAY,eAAiBF,EAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAC7IgC,OAAUZ,IAAeb,EAAUE,YAAY,+BAA+BT,QAAQ,OAAQ,KAC9FiC,OAAUb,IAAeb,EAAUE,YAAY,+BAA+BT,QAAQ,OAAQ,KAC9FkC,QAAS3B,EAAUE,YAAY,4BAA4BT,QAAQ,OAAQ,IAC3EmC,QAAS5B,EAAUE,YAAY,kBAAoBF,EAAUE,YAAY,gBAAgBT,QAAQ,OAAQ,KAGpGvC,GAST2E,aAAc,WACZ,IAAI3E,EAAOzD,MAAQ0D,EAGnB,IAAID,EAAK4E,gBAAmB5E,EAAK7G,IAAjC,CAIA6G,EAAK4E,gBAAiB,EACtB5E,EAAKgB,YAAa,EAKbhB,EAAK6E,iBAA2C,QAAxB7E,EAAK7G,IAAI2L,aACpC9E,EAAK6E,iBAAkB,EACvB7E,EAAKmC,UAKPnC,EAAK+E,eAAiB/E,EAAK7G,IAAI6L,aAAa,EAAG,EAAG,OAKlD,IAAIC,EAAS,SAASrC,GAOpB,KAAO5C,EAAKG,gBAAgB5H,OAASyH,EAAKI,eACxC,IACE,IAAI8E,EAAY,IAAIxC,MAIpBwC,EAAUC,WAAY,EAGtBnF,EAAKoF,mBAAmBF,GACxB,MAAOtC,GACP5C,EAAKa,SAAU,EACf,MAKJ,IAAK,IAAInI,EAAE,EAAGA,EAAEsH,EAAKM,OAAO/H,OAAQG,IAClC,IAAKsH,EAAKM,OAAO5H,GAAG+I,UAKlB,IAHA,IAAIC,EAAM1B,EAAKM,OAAO5H,GAAGiJ,eAGhBC,EAAE,EAAGA,EAAEF,EAAInJ,OAAQqJ,IAAK,CAC/B,IAAIC,EAAQ7B,EAAKM,OAAO5H,GAAGoJ,WAAWJ,EAAIE,IAEtCC,GAASA,EAAME,QAAUF,EAAME,MAAMoD,YACvCtD,EAAME,MAAMoD,WAAY,EACxBtD,EAAME,MAAMsD,QAOpBrF,EAAKsF,cAGL,IAAIC,EAASvF,EAAK7G,IAAIqM,qBACtBD,EAAOjG,OAASU,EAAK+E,eACrBQ,EAAOnH,QAAQ4B,EAAK7G,IAAIsM,kBAGI,IAAjBF,EAAOG,MAChBH,EAAOI,OAAO,GAEdJ,EAAOG,MAAM,GAIgB,mBAApB1F,EAAK7G,IAAIyM,QAClB5F,EAAK7G,IAAIyM,SAIXL,EAAOM,QAAU,WACfN,EAAOO,WAAW,GAGlB9F,EAAK4E,gBAAiB,EAGtBrP,SAASa,oBAAoB,aAAc6O,GAAQ,GACnD1P,SAASa,oBAAoB,WAAY6O,GAAQ,GACjD1P,SAASa,oBAAoB,QAAS6O,GAAQ,GAC9C1P,SAASa,oBAAoB,UAAW6O,GAAQ,GAGhD,IAAK,IAAIvM,EAAE,EAAGA,EAAEsH,EAAKM,OAAO/H,OAAQG,IAClCsH,EAAKM,OAAO5H,GAAGqN,MAAM,YAW3B,OALAxQ,SAASY,iBAAiB,aAAc8O,GAAQ,GAChD1P,SAASY,iBAAiB,WAAY8O,GAAQ,GAC9C1P,SAASY,iBAAiB,QAAS8O,GAAQ,GAC3C1P,SAASY,iBAAiB,UAAW8O,GAAQ,GAEtCjF,IAQTgG,kBAAmB,WACjB,IAAIhG,EAAOzD,MAAQ0D,EAGnB,GAAID,EAAKG,gBAAgB5H,OACvB,OAAOyH,EAAKG,gBAAgB1H,MAI9B,IAAIwN,GAAW,IAAIvD,OAAQwD,OAO3B,OANID,GAA+B,oBAAZnO,UAA4BmO,aAAoBnO,SAAoC,mBAAlBmO,EAASvL,OAChGuL,EAASE,OAAM,WACbC,QAAQC,KAAK,6EAIV,IAAI3D,OAOb0C,mBAAoB,SAASkB,GAC3B,IAAItG,EAAOzD,MAAQ0D,EAOnB,OAJIqG,EAAMnB,WACRnF,EAAKG,gBAAgB3I,KAAK8O,GAGrBtG,GAQTyC,aAAc,WACZ,IAAIzC,EAAOzD,KAEX,GAAKyD,EAAKe,aAAgBf,EAAK7G,UAAmC,IAArB6G,EAAK7G,IAAIoN,SAA4BtG,EAAOa,cAAzF,CAKA,IAAK,IAAIpI,EAAE,EAAGA,EAAEsH,EAAKM,OAAO/H,OAAQG,IAClC,GAAIsH,EAAKM,OAAO5H,GAAG+I,UACjB,IAAK,IAAIG,EAAE,EAAGA,EAAE5B,EAAKM,OAAO5H,GAAG8N,QAAQjO,OAAQqJ,IAC7C,IAAK5B,EAAKM,OAAO5H,GAAG8N,QAAQ5E,GAAG6E,QAC7B,OAAOzG,EAkCf,OA5BIA,EAAK0G,eACPC,aAAa3G,EAAK0G,eAIpB1G,EAAK0G,cAAgBE,YAAW,WAC9B,GAAK5G,EAAKe,YAAV,CAIAf,EAAK0G,cAAgB,KACrB1G,EAAKwC,MAAQ,aAGb,IAAIqE,EAAmB,WACrB7G,EAAKwC,MAAQ,YAETxC,EAAK8G,6BACA9G,EAAK8G,oBACZ9G,EAAKsF,gBAMTtF,EAAK7G,IAAIoN,UAAU7L,KAAKmM,EAAkBA,MACzC,KAEI7G,IAOTsF,YAAa,WACX,IAAItF,EAAOzD,KAEX,GAAKyD,EAAK7G,UAAkC,IAApB6G,EAAK7G,IAAIyM,QAA2B3F,EAAOa,cAyBnE,MArBmB,YAAfd,EAAKwC,OAA0C,gBAAnBxC,EAAK7G,IAAIqJ,OAA2BxC,EAAK0G,eACvEC,aAAa3G,EAAK0G,eAClB1G,EAAK0G,cAAgB,MACG,cAAf1G,EAAKwC,OAAwC,YAAfxC,EAAKwC,OAA0C,gBAAnBxC,EAAK7G,IAAIqJ,OAC5ExC,EAAK7G,IAAIyM,SAASlL,MAAK,WACrBsF,EAAKwC,MAAQ,UAGb,IAAK,IAAI9J,EAAE,EAAGA,EAAEsH,EAAKM,OAAO/H,OAAQG,IAClCsH,EAAKM,OAAO5H,GAAGqN,MAAM,aAIrB/F,EAAK0G,gBACPC,aAAa3G,EAAK0G,eAClB1G,EAAK0G,cAAgB,OAEC,eAAf1G,EAAKwC,QACdxC,EAAK8G,qBAAsB,GAGtB9G,IAKX,IAAIC,EAAS,IAAIH,EASbiH,EAAO,SAASnN,GAIbA,EAAEoN,KAAwB,IAAjBpN,EAAEoN,IAAIzO,OAHTgE,KAQN3B,KAAKhB,GAJRwM,QAAQa,MAAM,+DAMlBF,EAAKhH,UAAY,CAMfnF,KAAM,SAAShB,GACb,IAAIoG,EAAOzD,KA2EX,OAxEK0D,EAAO9G,KACVkI,IAIFrB,EAAKkH,UAAYtN,EAAEuN,WAAY,EAC/BnH,EAAKoH,QAA+B,iBAAbxN,EAAEyN,OAAuBzN,EAAEyN,OAAS,CAACzN,EAAEyN,QAC9DrH,EAAKsH,OAAS1N,EAAE2N,QAAS,EACzBvH,EAAKO,OAAS3G,EAAEoI,OAAQ,EACxBhC,EAAKwH,MAAQ5N,EAAE6N,OAAQ,EACvBzH,EAAK0H,MAAQ9N,EAAE+N,MAAQ,EACvB3H,EAAK4H,SAAiC,kBAAdhO,EAAEiO,SAAuC,aAAdjO,EAAEiO,SAA0BjO,EAAEiO,QACjF7H,EAAK8H,MAAQlO,EAAEmO,MAAQ,EACvB/H,EAAKgI,QAAUpO,EAAEqO,QAAU,GAC3BjI,EAAKkI,KAAyB,iBAAVtO,EAAEoN,IAAoBpN,EAAEoN,IAAM,CAACpN,EAAEoN,KACrDhH,EAAKQ,aAAuB2H,IAAbvO,EAAEsH,OAAuBtH,EAAEsH,OAAS,EACnDlB,EAAKoI,KAAO,CACVC,OAAQzO,EAAE0O,KAAO1O,EAAE0O,IAAID,OAASzO,EAAE0O,IAAID,OAAS,MAC/CE,QAAS3O,EAAE0O,KAAO1O,EAAE0O,IAAIC,QAAU3O,EAAE0O,IAAIC,QAAU,KAClDC,mBAAiB5O,EAAE0O,MAAO1O,EAAE0O,IAAIE,kBAAkB5O,EAAE0O,IAAIE,iBAI1DxI,EAAKyI,UAAY,EACjBzI,EAAK0I,OAAS,WACd1I,EAAKwG,QAAU,GACfxG,EAAK2I,WAAa,GAClB3I,EAAK4I,OAAS,GACd5I,EAAK6I,WAAY,EAGjB7I,EAAK8I,OAASlP,EAAEmP,MAAQ,CAAC,CAAChV,GAAI6F,EAAEmP,QAAU,GAC1C/I,EAAKgJ,QAAUpP,EAAEqP,OAAS,CAAC,CAAClV,GAAI6F,EAAEqP,SAAW,GAC7CjJ,EAAKkJ,QAAUtP,EAAEuP,OAAS,CAAC,CAACpV,GAAI6F,EAAEuP,SAAW,GAC7CnJ,EAAKoJ,aAAexP,EAAEyP,YAAc,CAAC,CAACtV,GAAI6F,EAAEyP,cAAgB,GAC5DrJ,EAAKsJ,aAAe1P,EAAE2P,YAAc,CAAC,CAACxV,GAAI6F,EAAE2P,cAAgB,GAC5DvJ,EAAKwJ,SAAW5P,EAAE6P,QAAU,CAAC,CAAC1V,GAAI6F,EAAE6P,UAAY,GAChDzJ,EAAK0J,QAAU9P,EAAE+P,OAAS,CAAC,CAAC5V,GAAI6F,EAAE+P,SAAW,GAC7C3J,EAAK4J,QAAUhQ,EAAEiQ,OAAS,CAAC,CAAC9V,GAAI6F,EAAEiQ,SAAW,GAC7C7J,EAAK8J,QAAUlQ,EAAEmQ,OAAS,CAAC,CAAChW,GAAI6F,EAAEmQ,SAAW,GAC7C/J,EAAKgK,UAAYpQ,EAAEqQ,SAAW,CAAC,CAAClW,GAAI6F,EAAEqQ,WAAa,GACnDjK,EAAKkK,QAAUtQ,EAAEuQ,OAAS,CAAC,CAACpW,GAAI6F,EAAEuQ,SAAW,GAC7CnK,EAAKoK,QAAUxQ,EAAEyQ,OAAS,CAAC,CAACtW,GAAI6F,EAAEyQ,SAAW,GAC7CrK,EAAKsK,UAAY1Q,EAAE2Q,SAAW,CAAC,CAACxW,GAAI6F,EAAE2Q,WAAa,GACnDvK,EAAKwK,UAAY,GAGjBxK,EAAKyB,UAAYxB,EAAOa,gBAAkBd,EAAKsH,YAGrB,IAAfrH,EAAO9G,KAAuB8G,EAAO9G,KAAO8G,EAAOe,YAC5Df,EAAO0E,eAIT1E,EAAOK,OAAO9I,KAAKwI,GAGfA,EAAKkH,WACPlH,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,OACPyU,OAAQ,WACNzK,EAAKkG,UAMPlG,EAAK4H,UAA8B,SAAlB5H,EAAK4H,UACxB5H,EAAKqF,OAGArF,GAOTqF,KAAM,WACJ,IAAIrF,EAAOzD,KACPmO,EAAM,KAGV,GAAIzK,EAAOY,QACTb,EAAK+F,MAAM,YAAa,KAAM,yBADhC,CAMyB,iBAAd/F,EAAKkI,OACdlI,EAAKkI,KAAO,CAAClI,EAAKkI,OAIpB,IAAK,IAAIxP,EAAE,EAAGA,EAAEsH,EAAKkI,KAAK3P,OAAQG,IAAK,CACrC,IAAI4J,EAAKqI,EAET,GAAI3K,EAAKoH,SAAWpH,EAAKoH,QAAQ1O,GAE/B4J,EAAMtC,EAAKoH,QAAQ1O,OACd,CAGL,GAAmB,iBADnBiS,EAAM3K,EAAKkI,KAAKxP,IACa,CAC3BsH,EAAK+F,MAAM,YAAa,KAAM,0DAC9B,UAIFzD,EAAM,0BAA0BsI,KAAKD,MAEnCrI,EAAM,aAAasI,KAAKD,EAAInH,MAAM,IAAK,GAAG,KAGxClB,IACFA,EAAMA,EAAI,GAAGuI,eAUjB,GALKvI,GACH8D,QAAQC,KAAK,8FAIX/D,GAAOrC,EAAOoC,OAAOC,GAAM,CAC7BoI,EAAM1K,EAAKkI,KAAKxP,GAChB,OAIJ,GAAKgS,EAuBL,OAlBA1K,EAAKkI,KAAOwC,EACZ1K,EAAK0I,OAAS,UAImB,WAA7B/H,OAAOmK,SAASC,UAA6C,UAApBL,EAAIM,MAAM,EAAG,KACxDhL,EAAKsH,QAAS,EACdtH,EAAKyB,WAAY,GAInB,IAAIwJ,EAAMjL,GAGNA,EAAKyB,WACPyJ,EAAWlL,GAGNA,EAtBLA,EAAK+F,MAAM,YAAa,KAAM,kDA+BlCG,KAAM,SAAS+B,EAAQkD,GACrB,IAAInL,EAAOzD,KACPyC,EAAK,KAGT,GAAsB,iBAAXiJ,EACTjJ,EAAKiJ,EACLA,EAAS,SACJ,CAAA,GAAsB,iBAAXA,GAAuC,WAAhBjI,EAAK0I,SAAwB1I,EAAKgI,QAAQC,GAEjF,OAAO,KACF,QAAsB,IAAXA,IAEhBA,EAAS,aAIJjI,EAAK6I,WAAW,CAEnB,IADA,IAAIuC,EAAM,EACD1S,EAAE,EAAGA,EAAEsH,EAAKwG,QAAQjO,OAAQG,IAC/BsH,EAAKwG,QAAQ9N,GAAG+N,UAAYzG,EAAKwG,QAAQ9N,GAAG2S,SAC9CD,IACApM,EAAKgB,EAAKwG,QAAQ9N,GAAG4S,KAIb,IAARF,EACFnD,EAAS,KAETjJ,EAAK,MAMX,IAAI6C,EAAQ7C,EAAKgB,EAAK8B,WAAW9C,GAAMgB,EAAKuL,iBAG5C,IAAK1J,EACH,OAAO,KAWT,GAPI7C,IAAOiJ,IACTA,EAASpG,EAAMmG,SAAW,aAMR,WAAhBhI,EAAK0I,OAAqB,CAE5B7G,EAAMmG,QAAUC,EAGhBpG,EAAMwJ,QAAS,EAGf,IAAIG,EAAU3J,EAAMyJ,IAQpB,OAPAtL,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,OACPyU,OAAQ,WACNzK,EAAKkG,KAAKsF,MAIPA,EAIT,GAAIxM,IAAO6C,EAAM4E,QAMf,OAJK0E,GACHnL,EAAKyL,WAAW,QAGX5J,EAAMyJ,IAIXtL,EAAKyB,WACPxB,EAAOqF,cAIT,IAAIoG,EAAOC,KAAKC,IAAI,EAAG/J,EAAMgK,MAAQ,EAAIhK,EAAMgK,MAAQ7L,EAAKgI,QAAQC,GAAQ,GAAK,KAC7E6D,EAAWH,KAAKC,IAAI,GAAK5L,EAAKgI,QAAQC,GAAQ,GAAKjI,EAAKgI,QAAQC,GAAQ,IAAM,IAAQyD,GACtFK,EAAsB,IAAXD,EAAmBH,KAAKK,IAAInK,EAAMiG,OAC7CpC,EAAQ1F,EAAKgI,QAAQC,GAAQ,GAAK,IAClC/F,GAAQlC,EAAKgI,QAAQC,GAAQ,GAAKjI,EAAKgI,QAAQC,GAAQ,IAAM,IACjEpG,EAAMmG,QAAUC,EAIhBpG,EAAMwJ,QAAS,EAGf,IAAIY,EAAY,WACdpK,EAAM4E,SAAU,EAChB5E,EAAMgK,MAAQH,EACd7J,EAAMqK,OAASxG,EACf7D,EAAMsK,MAAQjK,EACdL,EAAM2F,SAAW3F,EAAM2F,QAASxH,EAAKgI,QAAQC,GAAQ,KAIvD,KAAIyD,GAAQxJ,GAAZ,CAMA,IAAIrN,EAAOgN,EAAME,MACjB,GAAI/B,EAAKyB,UAAW,CAElB,IAAI2K,EAAe,WACjBpM,EAAK6I,WAAY,EACjBoD,IACAjM,EAAKqM,eAAexK,GAGpB,IAAIV,EAAOU,EAAMtB,QAAUP,EAAKO,OAAU,EAAIsB,EAAMrB,QACpD3L,EAAKyM,KAAKC,eAAeJ,EAAKlB,EAAO9G,IAAIqI,aACzCK,EAAMyK,WAAarM,EAAO9G,IAAIqI,iBAGS,IAA5B3M,EAAK0X,aAAa7G,MAC3B7D,EAAM2F,MAAQ3S,EAAK0X,aAAaC,YAAY,EAAGd,EAAM,OAAS7W,EAAK0X,aAAaC,YAAY,EAAGd,EAAMI,GAErGjK,EAAM2F,MAAQ3S,EAAK0X,aAAa7G,MAAM,EAAGgG,EAAM,OAAS7W,EAAK0X,aAAa7G,MAAM,EAAGgG,EAAMI,GAIvFC,IAAYU,EAAAA,IACdzM,EAAK2I,WAAW9G,EAAMyJ,KAAO1E,WAAW5G,EAAKqL,OAAOqB,KAAK1M,EAAM6B,GAAQkK,IAGpEZ,GACHvE,YAAW,WACT5G,EAAK+F,MAAM,OAAQlE,EAAMyJ,KACzBtL,EAAKyL,eACJ,IAIc,YAAjBxL,EAAOuC,OAA4C,gBAArBvC,EAAO9G,IAAIqJ,MAC3C4J,KAEApM,EAAK6I,WAAY,EAGjB7I,EAAK2M,KAAK,SAAUP,GAGpBpM,EAAK4M,YAAY/K,EAAMyJ,UAEpB,CAEL,IAAIuB,EAAY,WACdhY,EAAK2M,YAAckK,EACnB7W,EAAKoN,MAAQJ,EAAMtB,QAAUP,EAAKO,QAAUN,EAAOM,QAAU1L,EAAKoN,MAClEpN,EAAKqM,OAASW,EAAMrB,QAAUP,EAAOiB,SACrCrM,EAAKiY,aAAejL,EAAMiG,MAG1B,IACE,IAAI5B,EAAOrR,EAAKqR,OAwChB,GArCIA,GAA2B,oBAAZpO,UAA4BoO,aAAgBpO,SAAgC,mBAAdoO,EAAKxL,OAEpFsF,EAAK6I,WAAY,EAGjBoD,IAGA/F,EACGxL,MAAK,WACJsF,EAAK6I,WAAY,EACjBhU,EAAKsQ,WAAY,EACZgG,EAGHnL,EAAKyL,aAFLzL,EAAK+F,MAAM,OAAQlE,EAAMyJ,QAK5BnF,OAAM,WACLnG,EAAK6I,WAAY,EACjB7I,EAAK+F,MAAM,YAAalE,EAAMyJ,IAAK,+IAInCzJ,EAAMwJ,QAAS,EACfxJ,EAAM4E,SAAU,MAEV0E,IACVnL,EAAK6I,WAAY,EACjBoD,IACAjM,EAAK+F,MAAM,OAAQlE,EAAMyJ,MAI3BzW,EAAKiY,aAAejL,EAAMiG,MAGtBjT,EAAKkY,OAGP,YAFA/M,EAAK+F,MAAM,YAAalE,EAAMyJ,IAAK,+IAMtB,cAAXrD,GAA0BpG,EAAM2F,MAClCxH,EAAK2I,WAAW9G,EAAMyJ,KAAO1E,WAAW5G,EAAKqL,OAAOqB,KAAK1M,EAAM6B,GAAQkK,IAEvE/L,EAAK2I,WAAW9G,EAAMyJ,KAAO,WAE3BtL,EAAKqL,OAAOxJ,GAGZhN,EAAKuB,oBAAoB,QAAS4J,EAAK2I,WAAW9G,EAAMyJ,MAAM,IAEhEzW,EAAKsB,iBAAiB,QAAS6J,EAAK2I,WAAW9G,EAAMyJ,MAAM,IAE7D,MAAOvI,GACP/C,EAAK+F,MAAM,YAAalE,EAAMyJ,IAAKvI,KAKtB,2FAAblO,EAAKmS,MACPnS,EAAKmS,IAAMhH,EAAKkI,KAChBrT,EAAKwQ,QAIP,IAAI2H,EAAsBrM,QAAUA,OAAOsM,SAAapY,EAAKqY,YAAcjN,EAAOS,WAAWyM,WAC7F,GAAItY,EAAKqY,YAAc,GAAKF,EAC1BH,QACK,CACL7M,EAAK6I,WAAY,EACjB7I,EAAK0I,OAAS,UAEd,IAAI0E,EAAW,WACbpN,EAAK0I,OAAS,SAGdmE,IAGAhY,EAAKuB,oBAAoB6J,EAAOQ,cAAe2M,GAAU,IAE3DvY,EAAKsB,iBAAiB8J,EAAOQ,cAAe2M,GAAU,GAGtDpN,EAAK4M,YAAY/K,EAAMyJ,MAI3B,OAAOzJ,EAAMyJ,IAzJXtL,EAAKqL,OAAOxJ,IAiKhBwL,MAAO,SAASrO,GACd,IAAIgB,EAAOzD,KAGX,GAAoB,WAAhByD,EAAK0I,QAAuB1I,EAAK6I,UAQnC,OAPA7I,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,QACPyU,OAAQ,WACNzK,EAAKqN,MAAMrO,MAIRgB,EAMT,IAFA,IAAI0B,EAAM1B,EAAK2B,aAAa3C,GAEnBtG,EAAE,EAAGA,EAAEgJ,EAAInJ,OAAQG,IAAK,CAE/BsH,EAAK4M,YAAYlL,EAAIhJ,IAGrB,IAAImJ,EAAQ7B,EAAK8B,WAAWJ,EAAIhJ,IAEhC,GAAImJ,IAAUA,EAAM4E,UAElB5E,EAAMgK,MAAQ7L,EAAK0L,KAAKhK,EAAIhJ,IAC5BmJ,EAAMyL,UAAY,EAClBzL,EAAM4E,SAAU,EAGhBzG,EAAKuN,UAAU7L,EAAIhJ,IAEfmJ,EAAME,OACR,GAAI/B,EAAKyB,UAAW,CAElB,IAAKI,EAAME,MAAMwK,aACf,cAG2C,IAAlC1K,EAAME,MAAMwK,aAAarK,KAClCL,EAAME,MAAMwK,aAAaiB,QAAQ,GAEjC3L,EAAME,MAAMwK,aAAarK,KAAK,GAIhClC,EAAKyN,aAAa5L,EAAME,YACd2L,MAAM7L,EAAME,MAAM+J,WAAajK,EAAME,MAAM+J,WAAaW,EAAAA,GAClE5K,EAAME,MAAMsL,QAMbM,UAAU,IACb3N,EAAK+F,MAAM,QAASlE,EAAQA,EAAMyJ,IAAM,MAI5C,OAAOtL,GASTkC,KAAM,SAASlD,EAAImM,GACjB,IAAInL,EAAOzD,KAGX,GAAoB,WAAhByD,EAAK0I,QAAuB1I,EAAK6I,UAQnC,OAPA7I,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,OACPyU,OAAQ,WACNzK,EAAKkC,KAAKlD,MAIPgB,EAMT,IAFA,IAAI0B,EAAM1B,EAAK2B,aAAa3C,GAEnBtG,EAAE,EAAGA,EAAEgJ,EAAInJ,OAAQG,IAAK,CAE/BsH,EAAK4M,YAAYlL,EAAIhJ,IAGrB,IAAImJ,EAAQ7B,EAAK8B,WAAWJ,EAAIhJ,IAE5BmJ,IAEFA,EAAMgK,MAAQhK,EAAMqK,QAAU,EAC9BrK,EAAMyL,UAAY,EAClBzL,EAAM4E,SAAU,EAChB5E,EAAMwJ,QAAS,EAGfrL,EAAKuN,UAAU7L,EAAIhJ,IAEfmJ,EAAME,QACJ/B,EAAKyB,UAEHI,EAAME,MAAMwK,oBAC+B,IAAlC1K,EAAME,MAAMwK,aAAarK,KAClCL,EAAME,MAAMwK,aAAaiB,QAAQ,GAEjC3L,EAAME,MAAMwK,aAAarK,KAAK,GAIhClC,EAAKyN,aAAa5L,EAAME,QAEhB2L,MAAM7L,EAAME,MAAM+J,WAAajK,EAAME,MAAM+J,WAAaW,EAAAA,IAClE5K,EAAME,MAAMP,YAAcK,EAAMqK,QAAU,EAC1CrK,EAAME,MAAMsL,QAGRxL,EAAME,MAAM+J,WAAaW,EAAAA,GAC3BzM,EAAK4N,YAAY/L,EAAME,SAKxBoJ,GACHnL,EAAK+F,MAAM,OAAQlE,EAAMyJ,MAK/B,OAAOtL,GASTgC,KAAM,SAASC,EAAOjD,GACpB,IAAIgB,EAAOzD,KAGX,GAAoB,WAAhByD,EAAK0I,QAAsB1I,EAAK6I,UAQlC,OAPA7I,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,OACPyU,OAAQ,WACNzK,EAAKgC,KAAKC,EAAOjD,MAIdgB,EAIT,QAAkB,IAAPhB,EAAoB,CAC7B,GAAqB,kBAAViD,EAGT,OAAOjC,EAAKO,OAFZP,EAAKO,OAAS0B,EASlB,IAFA,IAAIP,EAAM1B,EAAK2B,aAAa3C,GAEnBtG,EAAE,EAAGA,EAAEgJ,EAAInJ,OAAQG,IAAK,CAE/B,IAAImJ,EAAQ7B,EAAK8B,WAAWJ,EAAIhJ,IAE5BmJ,IACFA,EAAMtB,OAAS0B,EAGXJ,EAAMgM,WACR7N,EAAKuN,UAAU1L,EAAMyJ,KAGnBtL,EAAKyB,WAAaI,EAAME,MAC1BF,EAAME,MAAMT,KAAKC,eAAeU,EAAQ,EAAIJ,EAAMrB,QAASP,EAAO9G,IAAIqI,aAC7DK,EAAME,QACfF,EAAME,MAAME,QAAQhC,EAAOM,QAAgB0B,GAG7CjC,EAAK+F,MAAM,OAAQlE,EAAMyJ,MAI7B,OAAOtL,GAWTkB,OAAQ,WACN,IAEIC,EAAKnC,EAqBL6C,EAvBA7B,EAAOzD,KACPuR,EAAOH,UAIX,GAAoB,IAAhBG,EAAKvV,OAEP,OAAOyH,EAAKQ,QACP,GAAoB,IAAhBsN,EAAKvV,QAAgC,IAAhBuV,EAAKvV,aAAmC,IAAZuV,EAAK,GAAoB,CAEnF,IAAIpM,EAAM1B,EAAK2B,eACXjF,EAAQgF,EAAI/E,QAAQmR,EAAK,IACzBpR,GAAS,EACXsC,EAAKuE,SAASuK,EAAK,GAAI,IAEvB3M,EAAMC,WAAW0M,EAAK,SAEfA,EAAKvV,QAAU,IACxB4I,EAAMC,WAAW0M,EAAK,IACtB9O,EAAKuE,SAASuK,EAAK,GAAI,KAKzB,UAAmB,IAAR3M,GAAuBA,GAAO,GAAKA,GAAO,GA2CnD,OADAU,EAAQ7C,EAAKgB,EAAK8B,WAAW9C,GAAMgB,EAAKwG,QAAQ,IACjC3E,EAAMrB,QAAU,EAzC/B,GAAoB,WAAhBR,EAAK0I,QAAsB1I,EAAK6I,UAQlC,OAPA7I,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,SACPyU,OAAQ,WACNzK,EAAKkB,OAAO6M,MAAM/N,EAAM8N,MAIrB9N,OAIS,IAAPhB,IACTgB,EAAKQ,QAAUW,GAIjBnC,EAAKgB,EAAK2B,aAAa3C,GACvB,IAAK,IAAItG,EAAE,EAAGA,EAAEsG,EAAGzG,OAAQG,KAEzBmJ,EAAQ7B,EAAK8B,WAAW9C,EAAGtG,OAGzBmJ,EAAMrB,QAAUW,EAGX2M,EAAK,IACR9N,EAAKuN,UAAUvO,EAAGtG,IAGhBsH,EAAKyB,WAAaI,EAAME,QAAUF,EAAMtB,OAC1CsB,EAAME,MAAMT,KAAKC,eAAeJ,EAAKlB,EAAO9G,IAAIqI,aACvCK,EAAME,QAAUF,EAAMtB,SAC/BsB,EAAME,MAAMb,OAASC,EAAMlB,EAAOiB,UAGpClB,EAAK+F,MAAM,SAAUlE,EAAMyJ,MAQjC,OAAOtL,GAWTgO,KAAM,SAAShS,EAAMiS,EAAIC,EAAKlP,GAC5B,IAAIgB,EAAOzD,KAGX,GAAoB,WAAhByD,EAAK0I,QAAuB1I,EAAK6I,UAQnC,OAPA7I,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,OACPyU,OAAQ,WACNzK,EAAKgO,KAAKhS,EAAMiS,EAAIC,EAAKlP,MAItBgB,EAIThE,EAAO2P,KAAKwC,IAAIxC,KAAKC,IAAI,EAAGxK,WAAWpF,IAAQ,GAC/CiS,EAAKtC,KAAKwC,IAAIxC,KAAKC,IAAI,EAAGxK,WAAW6M,IAAM,GAC3CC,EAAM9M,WAAW8M,GAGjBlO,EAAKkB,OAAOlF,EAAMgD,GAIlB,IADA,IAAI0C,EAAM1B,EAAK2B,aAAa3C,GACnBtG,EAAE,EAAGA,EAAEgJ,EAAInJ,OAAQG,IAAK,CAE/B,IAAImJ,EAAQ7B,EAAK8B,WAAWJ,EAAIhJ,IAGhC,GAAImJ,EAAO,CAOT,GALK7C,GACHgB,EAAKuN,UAAU7L,EAAIhJ,IAIjBsH,EAAKyB,YAAcI,EAAMtB,OAAQ,CACnC,IAAIiB,EAAcvB,EAAO9G,IAAIqI,YACzB4M,EAAM5M,EAAe0M,EAAM,IAC/BrM,EAAMrB,QAAUxE,EAChB6F,EAAME,MAAMT,KAAKC,eAAevF,EAAMwF,GACtCK,EAAME,MAAMT,KAAK+M,wBAAwBJ,EAAIG,GAG/CpO,EAAKsO,mBAAmBzM,EAAO7F,EAAMiS,EAAIC,EAAKxM,EAAIhJ,QAAkB,IAAPsG,IAIjE,OAAOgB,GAYTsO,mBAAoB,SAASzM,EAAO7F,EAAMiS,EAAIC,EAAKlP,EAAIuP,GACrD,IAAIvO,EAAOzD,KACP4E,EAAMnF,EACNwS,EAAOP,EAAKjS,EACZyS,EAAQ9C,KAAKK,IAAIwC,EAAO,KACxBE,EAAU/C,KAAKC,IAAI,EAAI6C,EAAQ,EAAKP,EAAMO,EAAQP,GAClDS,EAAWC,KAAKC,MAGpBhN,EAAMiN,QAAUb,EAGhBpM,EAAMgM,UAAYkB,aAAY,WAE5B,IAAIC,GAAQJ,KAAKC,MAAQF,GAAYT,EACrCS,EAAWC,KAAKC,MAChB1N,GAAOqN,EAAOQ,EAGd7N,EAAMwK,KAAKsD,MAAY,IAAN9N,GAAa,IAI5BA,EADEqN,EAAO,EACH7C,KAAKC,IAAIqC,EAAI9M,GAEbwK,KAAKwC,IAAIF,EAAI9M,GAIjBnB,EAAKyB,UACPI,EAAMrB,QAAUW,EAEhBnB,EAAKkB,OAAOC,EAAKU,EAAMyJ,KAAK,GAI1BiD,IACFvO,EAAKQ,QAAUW,IAIZ8M,EAAKjS,GAAQmF,GAAO8M,GAAQA,EAAKjS,GAAQmF,GAAO8M,KACnDiB,cAAcrN,EAAMgM,WACpBhM,EAAMgM,UAAY,KAClBhM,EAAMiN,QAAU,KAChB9O,EAAKkB,OAAO+M,EAAIpM,EAAMyJ,KACtBtL,EAAK+F,MAAM,OAAQlE,EAAMyJ,QAE1BoD,IASLnB,UAAW,SAASvO,GAClB,IAAIgB,EAAOzD,KACPsF,EAAQ7B,EAAK8B,WAAW9C,GAc5B,OAZI6C,GAASA,EAAMgM,YACb7N,EAAKyB,WACPI,EAAME,MAAMT,KAAK6N,sBAAsBlP,EAAO9G,IAAIqI,aAGpD0N,cAAcrN,EAAMgM,WACpBhM,EAAMgM,UAAY,KAClB7N,EAAKkB,OAAOW,EAAMiN,QAAS9P,GAC3B6C,EAAMiN,QAAU,KAChB9O,EAAK+F,MAAM,OAAQ/G,IAGdgB,GAWTyH,KAAM,WACJ,IAEIA,EAAMzI,EAAI6C,EAFV7B,EAAOzD,KACPuR,EAAOH,UAIX,GAAoB,IAAhBG,EAAKvV,OAEP,OAAOyH,EAAKwH,MACP,GAAoB,IAAhBsG,EAAKvV,OAAc,CAC5B,GAAuB,kBAAZuV,EAAK,GAMd,SADAjM,EAAQ7B,EAAK8B,WAAWyB,SAASuK,EAAK,GAAI,OAC3BjM,EAAM2F,MALrBC,EAAOqG,EAAK,GACZ9N,EAAKwH,MAAQC,OAMU,IAAhBqG,EAAKvV,SACdkP,EAAOqG,EAAK,GACZ9O,EAAKuE,SAASuK,EAAK,GAAI,KAKzB,IADA,IAAIpM,EAAM1B,EAAK2B,aAAa3C,GACnBtG,EAAE,EAAGA,EAAEgJ,EAAInJ,OAAQG,KAC1BmJ,EAAQ7B,EAAK8B,WAAWJ,EAAIhJ,OAG1BmJ,EAAM2F,MAAQC,EACVzH,EAAKyB,WAAaI,EAAME,OAASF,EAAME,MAAMwK,eAC/C1K,EAAME,MAAMwK,aAAa9E,KAAOA,EAC5BA,IACF5F,EAAME,MAAMwK,aAAa6C,UAAYvN,EAAMqK,QAAU,EACrDrK,EAAME,MAAMwK,aAAa8C,QAAUxN,EAAMsK,MAGrCnM,EAAKsP,QAAQ5N,EAAIhJ,MACnBsH,EAAKqN,MAAM3L,EAAIhJ,IAAI,GACnBsH,EAAKkG,KAAKxE,EAAIhJ,IAAI,OAO5B,OAAOsH,GAWT+H,KAAM,WACJ,IAEIA,EAAM/I,EAqBN6C,EAvBA7B,EAAOzD,KACPuR,EAAOH,UAIX,GAAoB,IAAhBG,EAAKvV,OAEPyG,EAAKgB,EAAKwG,QAAQ,GAAG8E,SAChB,GAAoB,IAAhBwC,EAAKvV,OAAc,CAE5B,IAAImJ,EAAM1B,EAAK2B,eACXjF,EAAQgF,EAAI/E,QAAQmR,EAAK,IACzBpR,GAAS,EACXsC,EAAKuE,SAASuK,EAAK,GAAI,IAEvB/F,EAAO3G,WAAW0M,EAAK,SAEA,IAAhBA,EAAKvV,SACdwP,EAAO3G,WAAW0M,EAAK,IACvB9O,EAAKuE,SAASuK,EAAK,GAAI,KAKzB,GAAoB,iBAAT/F,EAwDT,OADAlG,EAAQ7B,EAAK8B,WAAW9C,IACT6C,EAAMiG,MAAQ9H,EAAK8H,MAtDlC,GAAoB,WAAhB9H,EAAK0I,QAAuB1I,EAAK6I,UAQnC,OAPA7I,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,OACPyU,OAAQ,WACNzK,EAAK+H,KAAKgG,MAAM/N,EAAM8N,MAInB9N,OAIS,IAAPhB,IACTgB,EAAK8H,MAAQC,GAIf/I,EAAKgB,EAAK2B,aAAa3C,GACvB,IAAK,IAAItG,EAAE,EAAGA,EAAEsG,EAAGzG,OAAQG,IAIzB,GAFAmJ,EAAQ7B,EAAK8B,WAAW9C,EAAGtG,IAEhB,CAGLsH,EAAKsP,QAAQtQ,EAAGtG,MAClBmJ,EAAMyL,UAAYtN,EAAK0L,KAAK1M,EAAGtG,IAC/BmJ,EAAMyK,WAAatM,EAAKyB,UAAYxB,EAAO9G,IAAIqI,YAAcK,EAAMyK,YAErEzK,EAAMiG,MAAQC,EAGV/H,EAAKyB,WAAaI,EAAME,OAASF,EAAME,MAAMwK,aAC/C1K,EAAME,MAAMwK,aAAaO,aAAavL,eAAewG,EAAM9H,EAAO9G,IAAIqI,aAC7DK,EAAME,QACfF,EAAME,MAAM+K,aAAe/E,GAI7B,IAAI2D,EAAO1L,EAAK0L,KAAK1M,EAAGtG,IACpBoT,GAAa9L,EAAKgI,QAAQnG,EAAMmG,SAAS,GAAKhI,EAAKgI,QAAQnG,EAAMmG,SAAS,IAAM,IAAQ0D,EACxFK,EAAsB,IAAXD,EAAmBH,KAAKK,IAAInK,EAAMiG,QAG7C9H,EAAK2I,WAAW3J,EAAGtG,KAAQmJ,EAAM4E,UACnCzG,EAAK4M,YAAY5N,EAAGtG,IACpBsH,EAAK2I,WAAW3J,EAAGtG,IAAMkO,WAAW5G,EAAKqL,OAAOqB,KAAK1M,EAAM6B,GAAQkK,IAGrE/L,EAAK+F,MAAM,OAAQlE,EAAMyJ,KAQ/B,OAAOtL,GAWT0L,KAAM,WACJ,IAEIA,EAAM1M,EAFNgB,EAAOzD,KACPuR,EAAOH,UAIX,GAAoB,IAAhBG,EAAKvV,OAEHyH,EAAKwG,QAAQjO,SACfyG,EAAKgB,EAAKwG,QAAQ,GAAG8E,UAElB,GAAoB,IAAhBwC,EAAKvV,OAAc,CAE5B,IAAImJ,EAAM1B,EAAK2B,eACXjF,EAAQgF,EAAI/E,QAAQmR,EAAK,IACzBpR,GAAS,EACXsC,EAAKuE,SAASuK,EAAK,GAAI,IACd9N,EAAKwG,QAAQjO,SACtByG,EAAKgB,EAAKwG,QAAQ,GAAG8E,IACrBI,EAAOtK,WAAW0M,EAAK,UAEA,IAAhBA,EAAKvV,SACdmT,EAAOtK,WAAW0M,EAAK,IACvB9O,EAAKuE,SAASuK,EAAK,GAAI,KAIzB,QAAkB,IAAP9O,EACT,OAAO,EAIT,GAAoB,iBAAT0M,IAAsC,WAAhB1L,EAAK0I,QAAuB1I,EAAK6I,WAQhE,OAPA7I,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,OACPyU,OAAQ,WACNzK,EAAK0L,KAAKqC,MAAM/N,EAAM8N,MAInB9N,EAIT,IAAI6B,EAAQ7B,EAAK8B,WAAW9C,GAE5B,GAAI6C,EAAO,CACT,KAAoB,iBAAT6J,GAAqBA,GAAQ,GAwCjC,CACL,GAAI1L,EAAKyB,UAAW,CAClB,IAAI8N,EAAWvP,EAAKsP,QAAQtQ,GAAMiB,EAAO9G,IAAIqI,YAAcK,EAAMyK,WAAa,EAC1EkD,EAAW3N,EAAMyL,UAAYzL,EAAMyL,UAAYzL,EAAMgK,MAAQ,EACjE,OAAOhK,EAAMgK,OAAS2D,EAAWD,EAAW5D,KAAKK,IAAInK,EAAMiG,QAE3D,OAAOjG,EAAME,MAAMP,YA5CrB,IAAI8N,EAAUtP,EAAKsP,QAAQtQ,GACvBsQ,GACFtP,EAAKqN,MAAMrO,GAAI,GAIjB6C,EAAMgK,MAAQH,EACd7J,EAAMwJ,QAAS,EACfrL,EAAK4M,YAAY5N,GAGZgB,EAAKyB,YAAaI,EAAME,OAAU2L,MAAM7L,EAAME,MAAM+J,YACvDjK,EAAME,MAAMP,YAAckK,GAI5B,IAAI+D,EAAc,WAEZH,GACFtP,EAAKkG,KAAKlH,GAAI,GAGhBgB,EAAK+F,MAAM,OAAQ/G,IAIrB,GAAIsQ,IAAYtP,EAAKyB,UAAW,CAC9B,IAAIiO,EAAW,WACR1P,EAAK6I,UAGRjC,WAAW8I,EAAU,GAFrBD,KAKJ7I,WAAW8I,EAAU,QAErBD,IAaN,OAAOzP,GAQTsP,QAAS,SAAStQ,GAChB,IAAIgB,EAAOzD,KAGX,GAAkB,iBAAPyC,EAAiB,CAC1B,IAAI6C,EAAQ7B,EAAK8B,WAAW9C,GAC5B,QAAO6C,IAASA,EAAM4E,QAIxB,IAAK,IAAI/N,EAAE,EAAGA,EAAEsH,EAAKwG,QAAQjO,OAAQG,IACnC,IAAKsH,EAAKwG,QAAQ9N,GAAG+N,QACnB,OAAO,EAIX,OAAO,GAQTqF,SAAU,SAAS9M,GACjB,IAAIgB,EAAOzD,KACPuP,EAAW9L,EAAKyI,UAGhB5G,EAAQ7B,EAAK8B,WAAW9C,GAK5B,OAJI6C,IACFiK,EAAW9L,EAAKgI,QAAQnG,EAAMmG,SAAS,GAAK,KAGvC8D,GAOTtJ,MAAO,WACL,OAAOjG,KAAKmM,QAOdvG,OAAQ,WAKN,IAJA,IAAInC,EAAOzD,KAGPoT,EAAS3P,EAAKwG,QACT9N,EAAE,EAAGA,EAAEiX,EAAOpX,OAAQG,IAExBiX,EAAOjX,GAAG+N,SACbzG,EAAKkC,KAAKyN,EAAOjX,GAAG4S,KAIjBtL,EAAKyB,YAERzB,EAAK4N,YAAY+B,EAAOjX,GAAGqJ,OAG3B4N,EAAOjX,GAAGqJ,MAAM3L,oBAAoB,QAASuZ,EAAOjX,GAAGkX,UAAU,GACjED,EAAOjX,GAAGqJ,MAAM3L,oBAAoB6J,EAAOQ,cAAekP,EAAOjX,GAAGmX,SAAS,GAC7EF,EAAOjX,GAAGqJ,MAAM3L,oBAAoB,QAASuZ,EAAOjX,GAAGoX,QAAQ,GAG/D7P,EAAOmF,mBAAmBuK,EAAOjX,GAAGqJ,eAI/B4N,EAAOjX,GAAGqJ,MAGjB/B,EAAK4M,YAAY+C,EAAOjX,GAAG4S,KAI7B,IAAI5O,EAAQuD,EAAOK,OAAO3D,QAAQqD,GAC9BtD,GAAS,GACXuD,EAAOK,OAAO1D,OAAOF,EAAO,GAI9B,IAAIqT,GAAW,EACf,IAAKrX,EAAE,EAAGA,EAAEuH,EAAOK,OAAO/H,OAAQG,IAChC,GAAIuH,EAAOK,OAAO5H,GAAGwP,OAASlI,EAAKkI,MAAQlI,EAAKkI,KAAKvL,QAAQsD,EAAOK,OAAO5H,GAAGwP,OAAS,EAAG,CACxF6H,GAAW,EACX,MAgBJ,OAZIC,GAASD,UACJC,EAAMhQ,EAAKkI,MAIpBjI,EAAOY,SAAU,EAGjBb,EAAK0I,OAAS,WACd1I,EAAKwG,QAAU,GACfxG,EAAO,KAEA,MAWTiQ,GAAI,SAASja,EAAOjC,EAAIiL,EAAI2N,GAC1B,IACIuD,EADO3T,KACO,MAAQvG,GAM1B,MAJkB,mBAAPjC,GACTmc,EAAO1Y,KAAKmV,EAAO,CAAC3N,GAAIA,EAAIjL,GAAIA,EAAI4Y,KAAMA,GAAQ,CAAC3N,GAAIA,EAAIjL,GAAIA,IAJtDwI,MAiBb4T,IAAK,SAASna,EAAOjC,EAAIiL,GACvB,IAAIgB,EAAOzD,KACP2T,EAASlQ,EAAK,MAAQhK,GACtB0C,EAAI,EAQR,GALkB,iBAAP3E,IACTiL,EAAKjL,EACLA,EAAK,MAGHA,GAAMiL,EAER,IAAKtG,EAAE,EAAGA,EAAEwX,EAAO3X,OAAQG,IAAK,CAC9B,IAAI0X,EAAQpR,IAAOkR,EAAOxX,GAAGsG,GAC7B,GAAIjL,IAAOmc,EAAOxX,GAAG3E,IAAMqc,IAASrc,GAAMqc,EAAM,CAC9CF,EAAOtT,OAAOlE,EAAG,GACjB,YAGC,GAAI1C,EAETgK,EAAK,MAAQhK,GAAS,OACjB,CAEL,IAAIiH,EAAOhJ,OAAOgJ,KAAK+C,GACvB,IAAKtH,EAAE,EAAGA,EAAEuE,EAAK1E,OAAQG,IACS,IAA3BuE,EAAKvE,GAAGiE,QAAQ,QAAiBZ,MAAMsU,QAAQrQ,EAAK/C,EAAKvE,OAC5DsH,EAAK/C,EAAKvE,IAAM,IAKtB,OAAOsH,GAUT2M,KAAM,SAAS3W,EAAOjC,EAAIiL,GAMxB,OALWzC,KAGN0T,GAAGja,EAAOjC,EAAIiL,EAAI,GAHZzC,MAebwJ,MAAO,SAAS/P,EAAOgJ,EAAIsR,GAKzB,IAJA,IAAItQ,EAAOzD,KACP2T,EAASlQ,EAAK,MAAQhK,GAGjB0C,EAAEwX,EAAO3X,OAAO,EAAGG,GAAG,EAAGA,IAE3BwX,EAAOxX,GAAGsG,IAAMkR,EAAOxX,GAAGsG,KAAOA,GAAgB,SAAVhJ,IAC1C4Q,WAAW,SAAS7S,GAClBA,EAAGwc,KAAKhU,KAAMyC,EAAIsR,IAClB5D,KAAK1M,EAAMkQ,EAAOxX,GAAG3E,IAAK,GAGxBmc,EAAOxX,GAAGiU,MACZ3M,EAAKmQ,IAAIna,EAAOka,EAAOxX,GAAG3E,GAAImc,EAAOxX,GAAGsG,KAQ9C,OAFAgB,EAAKyL,WAAWzV,GAETgK,GASTyL,WAAY,SAASzV,GACnB,IAAIgK,EAAOzD,KAEX,GAAIyD,EAAK4I,OAAOrQ,OAAS,EAAG,CAC1B,IAAIiY,EAAOxQ,EAAK4I,OAAO,GAGnB4H,EAAKxa,QAAUA,IACjBgK,EAAK4I,OAAO6H,QACZzQ,EAAKyL,cAIFzV,GACHwa,EAAK/F,SAIT,OAAOzK,GAQTqL,OAAQ,SAASxJ,GACf,IAAI7B,EAAOzD,KACP0L,EAASpG,EAAMmG,QAKnB,IAAKhI,EAAKyB,WAAaI,EAAME,QAAUF,EAAME,MAAMgL,SAAWlL,EAAME,MAAM2O,OAAS7O,EAAME,MAAMP,YAAcK,EAAMsK,MAEjH,OADAvF,WAAW5G,EAAKqL,OAAOqB,KAAK1M,EAAM6B,GAAQ,KACnC7B,EAIT,IAAIyH,KAAU5F,EAAM2F,QAASxH,EAAKgI,QAAQC,GAAQ,IAWlD,GARAjI,EAAK+F,MAAM,MAAOlE,EAAMyJ,MAGnBtL,EAAKyB,WAAagG,GACrBzH,EAAKkC,KAAKL,EAAMyJ,KAAK,GAAMpF,KAAKrE,EAAMyJ,KAIpCtL,EAAKyB,WAAagG,EAAM,CAC1BzH,EAAK+F,MAAM,OAAQlE,EAAMyJ,KACzBzJ,EAAMgK,MAAQhK,EAAMqK,QAAU,EAC9BrK,EAAMyL,UAAY,EAClBzL,EAAMyK,WAAarM,EAAO9G,IAAIqI,YAE9B,IAAIuK,EAA0C,KAA9BlK,EAAMsK,MAAQtK,EAAMqK,QAAkBP,KAAKK,IAAInK,EAAMiG,OACrE9H,EAAK2I,WAAW9G,EAAMyJ,KAAO1E,WAAW5G,EAAKqL,OAAOqB,KAAK1M,EAAM6B,GAAQkK,GAuBzE,OAnBI/L,EAAKyB,YAAcgG,IACrB5F,EAAM4E,SAAU,EAChB5E,EAAMwJ,QAAS,EACfxJ,EAAMgK,MAAQhK,EAAMqK,QAAU,EAC9BrK,EAAMyL,UAAY,EAClBtN,EAAK4M,YAAY/K,EAAMyJ,KAGvBtL,EAAKyN,aAAa5L,EAAME,OAGxB9B,EAAOwC,gBAIJzC,EAAKyB,WAAcgG,GACtBzH,EAAKkC,KAAKL,EAAMyJ,KAAK,GAGhBtL,GAQT4M,YAAa,SAAS5N,GACpB,IAAIgB,EAAOzD,KAEX,GAAIyD,EAAK2I,WAAW3J,GAAK,CAEvB,GAAmC,mBAAxBgB,EAAK2I,WAAW3J,GACzB2H,aAAa3G,EAAK2I,WAAW3J,QACxB,CACL,IAAI6C,EAAQ7B,EAAK8B,WAAW9C,GACxB6C,GAASA,EAAME,OACjBF,EAAME,MAAM3L,oBAAoB,QAAS4J,EAAK2I,WAAW3J,IAAK,UAI3DgB,EAAK2I,WAAW3J,GAGzB,OAAOgB,GAQT8B,WAAY,SAAS9C,GAInB,IAHA,IAAIgB,EAAOzD,KAGF7D,EAAE,EAAGA,EAAEsH,EAAKwG,QAAQjO,OAAQG,IACnC,GAAIsG,IAAOgB,EAAKwG,QAAQ9N,GAAG4S,IACzB,OAAOtL,EAAKwG,QAAQ9N,GAIxB,OAAO,MAOT6S,eAAgB,WACd,IAAIvL,EAAOzD,KAEXyD,EAAK2Q,SAGL,IAAK,IAAIjY,EAAE,EAAGA,EAAEsH,EAAKwG,QAAQjO,OAAQG,IACnC,GAAIsH,EAAKwG,QAAQ9N,GAAG2S,OAClB,OAAOrL,EAAKwG,QAAQ9N,GAAGkY,QAK3B,OAAO,IAAI3F,EAAMjL,IAMnB2Q,OAAQ,WACN,IAAI3Q,EAAOzD,KACPsU,EAAQ7Q,EAAK0H,MACboJ,EAAM,EACNpY,EAAI,EAGR,KAAIsH,EAAKwG,QAAQjO,OAASsY,GAA1B,CAKA,IAAKnY,EAAE,EAAGA,EAAEsH,EAAKwG,QAAQjO,OAAQG,IAC3BsH,EAAKwG,QAAQ9N,GAAG2S,QAClByF,IAKJ,IAAKpY,EAAEsH,EAAKwG,QAAQjO,OAAS,EAAGG,GAAG,EAAGA,IAAK,CACzC,GAAIoY,GAAOD,EACT,OAGE7Q,EAAKwG,QAAQ9N,GAAG2S,SAEdrL,EAAKyB,WAAazB,EAAKwG,QAAQ9N,GAAGqJ,OACpC/B,EAAKwG,QAAQ9N,GAAGqJ,MAAM+D,WAAW,GAInC9F,EAAKwG,QAAQ5J,OAAOlE,EAAG,GACvBoY,QAUNnP,aAAc,SAAS3C,GAGrB,QAAkB,IAAPA,EAAoB,CAE7B,IADA,IAAI0C,EAAM,GACDhJ,EAAE,EAAGA,EAJL6D,KAIYiK,QAAQjO,OAAQG,IACnCgJ,EAAIlK,KALG+E,KAKOiK,QAAQ9N,GAAG4S,KAG3B,OAAO5J,EAEP,MAAO,CAAC1C,IASZqN,eAAgB,SAASxK,GAsBvB,OAlBAA,EAAME,MAAMwK,aAAetM,EAAO9G,IAAIqM,qBACtC3D,EAAME,MAAMwK,aAAajN,OAAS0Q,EAJvBzT,KAIkC2L,MAGzCrG,EAAMkP,QACRlP,EAAME,MAAMwK,aAAanO,QAAQyD,EAAMkP,SAEvClP,EAAME,MAAMwK,aAAanO,QAAQyD,EAAME,OAIzCF,EAAME,MAAMwK,aAAa9E,KAAO5F,EAAM2F,MAClC3F,EAAM2F,QACR3F,EAAME,MAAMwK,aAAa6C,UAAYvN,EAAMqK,QAAU,EACrDrK,EAAME,MAAMwK,aAAa8C,QAAUxN,EAAMsK,OAAS,GAEpDtK,EAAME,MAAMwK,aAAaO,aAAavL,eAAeM,EAAMiG,MAAO7H,EAAO9G,IAAIqI,aAnBlEjF,MA6BbkR,aAAc,SAAS5Y,GACrB,IACImc,EAAQ/Q,EAAOS,YAAcT,EAAOS,WAAWuQ,OAAOtU,QAAQ,UAAY,EAE9E,GAAIsD,EAAO8E,gBAAkBlQ,EAAK0X,eAChC1X,EAAK0X,aAAa1G,QAAU,KAC5BhR,EAAK0X,aAAazG,WAAW,GACzBkL,GACF,IAAMnc,EAAK0X,aAAajN,OAASW,EAAO8E,eAAkB,MAAMnC,IAKpE,OAFA/N,EAAK0X,aAAe,KAVThQ,MAmBbqR,YAAa,SAAS/Y,GACN,kBAAkBqc,KAAKjR,EAAOS,YAAcT,EAAOS,WAAWyC,aAE1EtO,EAAKmS,IAAM,4FAYjB,IAAIiE,EAAQ,SAASkG,GACnB5U,KAAK6U,QAAUD,EACf5U,KAAK3B,QAEPqQ,EAAMlL,UAAY,CAKhBnF,KAAM,WACJ,IAAIoF,EAAOzD,KACP8U,EAASrR,EAAKoR,QAqBlB,OAlBApR,EAAKO,OAAS8Q,EAAO9Q,OACrBP,EAAKwH,MAAQ6J,EAAO7J,MACpBxH,EAAKQ,QAAU6Q,EAAO7Q,QACtBR,EAAK8H,MAAQuJ,EAAOvJ,MACpB9H,EAAK6L,MAAQ,EACb7L,EAAKyG,SAAU,EACfzG,EAAKqL,QAAS,EACdrL,EAAKgI,QAAU,YAGfhI,EAAKsL,MAAQrL,EAAOC,SAGpBmR,EAAO7K,QAAQhP,KAAKwI,GAGpBA,EAAK9L,SAEE8L,GAOT9L,OAAQ,WACN,IAAI8L,EAAOzD,KACP8U,EAASrR,EAAKoR,QACdlQ,EAAUjB,EAAOM,QAAUP,EAAKO,QAAUP,EAAKoR,QAAQ7Q,OAAU,EAAIP,EAAKQ,QAkC9E,OAhCI6Q,EAAO5P,WAETzB,EAAK+B,WAA0C,IAA1B9B,EAAO9G,IAAImY,WAA8BrR,EAAO9G,IAAIoY,iBAAmBtR,EAAO9G,IAAImY,aACvGtR,EAAK+B,MAAMT,KAAKC,eAAeL,EAAQjB,EAAO9G,IAAIqI,aAClDxB,EAAK+B,MAAMgL,QAAS,EACpB/M,EAAK+B,MAAM3D,QAAQ6B,EAAOW,aAChBX,EAAOY,UAEjBb,EAAK+B,MAAQ9B,EAAO+F,oBAGpBhG,EAAK4P,SAAW5P,EAAKwR,eAAe9E,KAAK1M,GACzCA,EAAK+B,MAAM5L,iBAAiB,QAAS6J,EAAK4P,UAAU,GAGpD5P,EAAK6P,QAAU7P,EAAKyR,cAAc/E,KAAK1M,GACvCA,EAAK+B,MAAM5L,iBAAiB8J,EAAOQ,cAAeT,EAAK6P,SAAS,GAIhE7P,EAAK8P,OAAS9P,EAAK0R,aAAahF,KAAK1M,GACrCA,EAAK+B,MAAM5L,iBAAiB,QAAS6J,EAAK8P,QAAQ,GAGlD9P,EAAK+B,MAAMiF,IAAMqK,EAAOnJ,KACxBlI,EAAK+B,MAAM8F,SAA8B,IAApBwJ,EAAOzJ,SAAoB,OAASyJ,EAAOzJ,SAChE5H,EAAK+B,MAAMb,OAASA,EAASjB,EAAOiB,SAGpClB,EAAK+B,MAAMsD,QAGNrF,GAOT4Q,MAAO,WACL,IAAI5Q,EAAOzD,KACP8U,EAASrR,EAAKoR,QAgBlB,OAbApR,EAAKO,OAAS8Q,EAAO9Q,OACrBP,EAAKwH,MAAQ6J,EAAO7J,MACpBxH,EAAKQ,QAAU6Q,EAAO7Q,QACtBR,EAAK8H,MAAQuJ,EAAOvJ,MACpB9H,EAAK6L,MAAQ,EACb7L,EAAKsN,UAAY,EACjBtN,EAAKyG,SAAU,EACfzG,EAAKqL,QAAS,EACdrL,EAAKgI,QAAU,YAGfhI,EAAKsL,MAAQrL,EAAOC,SAEbF,GAMTwR,eAAgB,WACd,IAAIxR,EAAOzD,KAGXyD,EAAKoR,QAAQrL,MAAM,YAAa/F,EAAKsL,IAAKtL,EAAK+B,MAAMkF,MAAQjH,EAAK+B,MAAMkF,MAAM0K,KAAO,GAGrF3R,EAAK+B,MAAM3L,oBAAoB,QAAS4J,EAAK4P,UAAU,IAMzD6B,cAAe,WACb,IAAIzR,EAAOzD,KACP8U,EAASrR,EAAKoR,QAGlBC,EAAO5I,UAAYkD,KAAKiG,KAA2B,GAAtB5R,EAAK+B,MAAM+J,UAAiB,GAGd,IAAvC7X,OAAOgJ,KAAKoU,EAAOrJ,SAASzP,SAC9B8Y,EAAOrJ,QAAU,CAAC6J,UAAW,CAAC,EAAsB,IAAnBR,EAAO5I,aAGpB,WAAlB4I,EAAO3I,SACT2I,EAAO3I,OAAS,SAChB2I,EAAOtL,MAAM,QACbsL,EAAO5F,cAITzL,EAAK+B,MAAM3L,oBAAoB6J,EAAOQ,cAAeT,EAAK6P,SAAS,IAMrE6B,aAAc,WACZ,IAAI1R,EAAOzD,KACP8U,EAASrR,EAAKoR,QAGdC,EAAO5I,YAAcgE,EAAAA,IAGvB4E,EAAO5I,UAAYkD,KAAKiG,KAA2B,GAAtB5R,EAAK+B,MAAM+J,UAAiB,GAGrDuF,EAAOrJ,QAAQ6J,UAAU,KAAOpF,EAAAA,IAClC4E,EAAOrJ,QAAQ6J,UAAU,GAAwB,IAAnBR,EAAO5I,WAIvC4I,EAAOhG,OAAOrL,IAIhBA,EAAK+B,MAAM3L,oBAAoB,QAAS4J,EAAK8P,QAAQ,KAOzD,IAAIE,EAAQ,GAMR9E,EAAa,SAASlL,GACxB,IAAI0K,EAAM1K,EAAKkI,KAGf,GAAI8H,EAAMtF,GAOR,OALA1K,EAAKyI,UAAYuH,EAAMtF,GAAKoB,cAG5BgG,EAAU9R,GAKZ,GAAI,sBAAsBkR,KAAKxG,GAAM,CAInC,IAFA,IAAI9U,EAAOmc,KAAKrH,EAAIlH,MAAM,KAAK,IAC3BwO,EAAW,IAAI9S,WAAWtJ,EAAK2C,QAC1BG,EAAE,EAAGA,EAAE9C,EAAK2C,SAAUG,EAC7BsZ,EAAStZ,GAAK9C,EAAKqc,WAAWvZ,GAGhCwZ,EAAgBF,EAAS1S,OAAQU,OAC5B,CAEL,IAAIsI,EAAM,IAAI6J,eACd7J,EAAI8J,KAAKpS,EAAKoI,KAAKC,OAAQqC,GAAK,GAChCpC,EAAIE,gBAAkBxI,EAAKoI,KAAKI,gBAChCF,EAAI+J,aAAe,cAGfrS,EAAKoI,KAAKG,SACZtU,OAAOgJ,KAAK+C,EAAKoI,KAAKG,SAASlU,SAAQ,SAASie,GAC9ChK,EAAIiK,iBAAiBD,EAAKtS,EAAKoI,KAAKG,QAAQ+J,OAIhDhK,EAAIa,OAAS,WAEX,IAAIwI,GAAQrJ,EAAIkK,OAAS,IAAI,GAChB,MAATb,GAAyB,MAATA,GAAyB,MAATA,EAKpCO,EAAgB5J,EAAImK,SAAUzS,GAJ5BA,EAAK+F,MAAM,YAAa,KAAM,0CAA4CuC,EAAIkK,OAAS,MAM3FlK,EAAIoK,QAAU,WAER1S,EAAKyB,YACPzB,EAAKsH,QAAS,EACdtH,EAAKyB,WAAY,EACjBzB,EAAKwG,QAAU,UACRwJ,EAAMtF,GACb1K,EAAKqF,SAGTsN,EAAYrK,KAQZqK,EAAc,SAASrK,GACzB,IACEA,EAAIsK,OACJ,MAAOhQ,GACP0F,EAAIoK,YASJR,EAAkB,SAASW,EAAa7S,GAE1C,IAAIiH,EAAQ,WACVjH,EAAK+F,MAAM,YAAa,KAAM,gCAI5B+M,EAAU,SAASxT,GACjBA,GAAUU,EAAKwG,QAAQjO,OAAS,GAClCyX,EAAMhQ,EAAKkI,MAAQ5I,EACnBwS,EAAU9R,EAAMV,IAEhB2H,KAKmB,oBAAZnP,SAAiE,IAAtCmI,EAAO9G,IAAI+Y,gBAAgB3Z,OAC/D0H,EAAO9G,IAAI+Y,gBAAgBW,GAAanY,KAAKoY,GAAS3M,MAAMc,GAE5DhH,EAAO9G,IAAI+Y,gBAAgBW,EAAaC,EAAS7L,IASjD6K,EAAY,SAAS9R,EAAMV,GAEzBA,IAAWU,EAAKyI,YAClBzI,EAAKyI,UAAYnJ,EAAOwM,UAIe,IAArC7X,OAAOgJ,KAAK+C,EAAKgI,SAASzP,SAC5ByH,EAAKgI,QAAU,CAAC6J,UAAW,CAAC,EAAoB,IAAjB7R,EAAKyI,aAIlB,WAAhBzI,EAAK0I,SACP1I,EAAK0I,OAAS,SACd1I,EAAK+F,MAAM,QACX/F,EAAKyL,eAOLpK,EAAoB,WAEtB,GAAKpB,EAAOa,cAAZ,CAKA,IAC8B,oBAAjBiS,aACT9S,EAAO9G,IAAM,IAAI4Z,aACsB,oBAAvBC,mBAChB/S,EAAO9G,IAAM,IAAI6Z,mBAEjB/S,EAAOa,eAAgB,EAEzB,MAAM8B,GACN3C,EAAOa,eAAgB,EAIpBb,EAAO9G,MACV8G,EAAOa,eAAgB,GAKzB,IAAImS,EAAO,iBAAiB/B,KAAKjR,EAAOS,YAAcT,EAAOS,WAAWwS,UACpEC,EAAalT,EAAOS,YAAcT,EAAOS,WAAWyS,WAAW9P,MAAM,0BACrE+P,EAAUD,EAAa5P,SAAS4P,EAAW,GAAI,IAAM,KACzD,GAAIF,GAAOG,GAAWA,EAAU,EAAG,CACjC,IAAIC,EAAS,SAASnC,KAAKjR,EAAOS,YAAcT,EAAOS,WAAWyC,UAAU0H,eACxE5K,EAAOS,aAAe2S,IACxBpT,EAAOa,eAAgB,GAKvBb,EAAOa,gBACTb,EAAOW,gBAA+C,IAA1BX,EAAO9G,IAAImY,WAA8BrR,EAAO9G,IAAIoY,iBAAmBtR,EAAO9G,IAAImY,aAC9GrR,EAAOW,WAAWU,KAAKC,eAAetB,EAAOM,OAAS,EAAIN,EAAOO,QAASP,EAAO9G,IAAIqI,aACrFvB,EAAOW,WAAWxC,QAAQ6B,EAAO9G,IAAIsM,cAIvCxF,EAAOgB,WAePqS,EAAArT,OAAiBA,EACjBqT,EAAAvM,KAAeA,OAIK,IAAXwM,GACTA,EAAOzT,aAAeA,EACtByT,EAAOtT,OAASA,EAChBsT,EAAOxM,KAAOA,EACdwM,EAAOtI,MAAQA,GACY,oBAAXtK,SAChBA,OAAOb,aAAeA,EACtBa,OAAOV,OAASA,EAChBU,OAAOoG,KAAOA,EACdpG,OAAOsK,MAAQA,GA1gFnB;;;;;;;;;;;;AA2hFA,WAgIwB,IAAUuI,EA3HhC1T,aAAaC,UAAU0T,KAAO,CAAC,EAAG,EAAG,GACrC3T,aAAaC,UAAU2T,aAAe,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAWvD5T,aAAaC,UAAU4T,OAAS,SAASC,GACvC,IAAI5T,EAAOzD,KAGX,IAAKyD,EAAK7G,MAAQ6G,EAAK7G,IAAIiU,SACzB,OAAOpN,EAIT,IAAK,IAAItH,EAAEsH,EAAKM,OAAO/H,OAAO,EAAGG,GAAG,EAAGA,IACrCsH,EAAKM,OAAO5H,GAAGib,OAAOC,GAGxB,OAAO5T,GAWTF,aAAaC,UAAU8T,IAAM,SAASC,EAAGC,EAAGC,GAC1C,IAAIhU,EAAOzD,KAGX,OAAKyD,EAAK7G,KAAQ6G,EAAK7G,IAAIiU,UAK3B2G,EAAkB,iBAANA,EAAkB/T,EAAKyT,KAAK,GAAKM,EAC7CC,EAAkB,iBAANA,EAAkBhU,EAAKyT,KAAK,GAAKO,EAE5B,iBAANF,EAWF9T,EAAKyT,MAVZzT,EAAKyT,KAAO,CAACK,EAAGC,EAAGC,QAEwB,IAAhChU,EAAK7G,IAAIiU,SAAS6G,WAC3BjU,EAAK7G,IAAIiU,SAAS6G,UAAUC,gBAAgBlU,EAAKyT,KAAK,GAAIxT,OAAO9G,IAAIqI,YAAa,IAClFxB,EAAK7G,IAAIiU,SAAS+G,UAAUD,gBAAgBlU,EAAKyT,KAAK,GAAIxT,OAAO9G,IAAIqI,YAAa,IAClFxB,EAAK7G,IAAIiU,SAASgH,UAAUF,gBAAgBlU,EAAKyT,KAAK,GAAIxT,OAAO9G,IAAIqI,YAAa,KAElFxB,EAAK7G,IAAIiU,SAASiH,YAAYrU,EAAKyT,KAAK,GAAIzT,EAAKyT,KAAK,GAAIzT,EAAKyT,KAAK,IAMjEzT,IArBEA,GAsCXF,aAAaC,UAAUuU,YAAc,SAASR,EAAGC,EAAGC,EAAGO,EAAKC,EAAKC,GAC/D,IAAIzU,EAAOzD,KAGX,IAAKyD,EAAK7G,MAAQ6G,EAAK7G,IAAIiU,SACzB,OAAOpN,EAIT,IAAI0U,EAAK1U,EAAK0T,aAOd,OANAK,EAAkB,iBAANA,EAAkBW,EAAG,GAAKX,EACtCC,EAAkB,iBAANA,EAAkBU,EAAG,GAAKV,EACtCO,EAAsB,iBAARA,EAAoBG,EAAG,GAAKH,EAC1CC,EAAsB,iBAARA,EAAoBE,EAAG,GAAKF,EAC1CC,EAAsB,iBAARA,EAAoBC,EAAG,GAAKD,EAEzB,iBAANX,EAcFY,GAbP1U,EAAK0T,aAAe,CAACI,EAAGC,EAAGC,EAAGO,EAAKC,EAAKC,QAEE,IAA/BzU,EAAK7G,IAAIiU,SAASuH,UAC3B3U,EAAK7G,IAAIiU,SAASuH,SAAST,gBAAgBJ,EAAG7T,OAAO9G,IAAIqI,YAAa,IACtExB,EAAK7G,IAAIiU,SAASwH,SAASV,gBAAgBH,EAAG9T,OAAO9G,IAAIqI,YAAa,IACtExB,EAAK7G,IAAIiU,SAASyH,SAASX,gBAAgBF,EAAG/T,OAAO9G,IAAIqI,YAAa,IACtExB,EAAK7G,IAAIiU,SAAS0H,IAAIZ,gBAAgBK,EAAKtU,OAAO9G,IAAIqI,YAAa,IACnExB,EAAK7G,IAAIiU,SAAS2H,IAAIb,gBAAgBM,EAAKvU,OAAO9G,IAAIqI,YAAa,IACnExB,EAAK7G,IAAIiU,SAAS4H,IAAId,gBAAgBO,EAAKxU,OAAO9G,IAAIqI,YAAa,KAEnExB,EAAK7G,IAAIiU,SAAS6H,eAAenB,EAAGC,EAAGC,EAAGO,EAAKC,EAAKC,GAMjDzU,IAWT+G,KAAKhH,UAAUnF,MAAiB4Y,EA2B7BzM,KAAKhH,UAAUnF,KA1BT,SAAShB,GACd,IAAIoG,EAAOzD,KAuBX,OApBAyD,EAAK0T,aAAe9Z,EAAE0a,aAAe,CAAC,EAAG,EAAG,GAC5CtU,EAAKkV,QAAUtb,EAAE+Z,QAAU,KAC3B3T,EAAKyT,KAAO7Z,EAAEia,KAAO,KACrB7T,EAAKmV,YAAc,CACjBC,oBAA4C,IAArBxb,EAAEwb,eAAiCxb,EAAEwb,eAAiB,IAC7EC,oBAA4C,IAArBzb,EAAEyb,eAAiCzb,EAAEyb,eAAiB,IAC7EC,mBAA0C,IAApB1b,EAAE0b,cAAgC1b,EAAE0b,cAAgB,EAC1EC,mBAA0C,IAApB3b,EAAE2b,cAAgC3b,EAAE2b,cAAgB,UAC1EC,iBAAsC,IAAlB5b,EAAE4b,YAA8B5b,EAAE4b,YAAc,IACpEC,kBAAwC,IAAnB7b,EAAE6b,aAA+B7b,EAAE6b,aAAe,OACvEC,iBAAsC,IAAlB9b,EAAE8b,YAA8B9b,EAAE8b,YAAc,EACpEC,mBAA0C,IAApB/b,EAAE+b,cAAgC/b,EAAE+b,cAAgB,GAI5E3V,EAAK4V,UAAYhc,EAAEic,SAAW,CAAC,CAAC9hB,GAAI6F,EAAEic,WAAa,GACnD7V,EAAK8V,OAASlc,EAAEmc,MAAQ,CAAC,CAAChiB,GAAI6F,EAAEmc,QAAU,GAC1C/V,EAAKgW,eAAiBpc,EAAEqc,cAAgB,CAAC,CAACliB,GAAI6F,EAAEqc,gBAAkB,GAG3DzC,EAAOjD,KAAKhU,KAAM3C,KAU7BmN,KAAKhH,UAAU4T,OAAS,SAASC,EAAK5U,GACpC,IAAIgB,EAAOzD,KAGX,IAAKyD,EAAKyB,UACR,OAAOzB,EAIT,GAAoB,WAAhBA,EAAK0I,OAQP,OAPA1I,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,SACPyU,OAAQ,WACNzK,EAAK2T,OAAOC,EAAK5U,MAIdgB,EAIT,IAAIkW,OAAuD,IAAlCjW,OAAO9G,IAAIgd,mBAAsC,UAAY,SAGtF,QAAkB,IAAPnX,EAAoB,CAE7B,GAAmB,iBAAR4U,EAIT,OAAO5T,EAAKkV,QAHZlV,EAAKkV,QAAUtB,EACf5T,EAAKyT,KAAO,CAACG,EAAK,EAAG,GAQzB,IADA,IAAIlS,EAAM1B,EAAK2B,aAAa3C,GACnBtG,EAAE,EAAGA,EAAEgJ,EAAInJ,OAAQG,IAAK,CAE/B,IAAImJ,EAAQ7B,EAAK8B,WAAWJ,EAAIhJ,IAEhC,GAAImJ,EAAO,CACT,GAAmB,iBAAR+R,EA4BT,OAAO/R,EAAMqT,QA3BbrT,EAAMqT,QAAUtB,EAChB/R,EAAM4R,KAAO,CAACG,EAAK,EAAG,GAElB/R,EAAME,QAERF,EAAMsT,YAAYM,aAAe,aAG5B5T,EAAMkP,SAAYlP,EAAMkP,QAAQ6C,KACnCwC,EAAYvU,EAAOqU,GAGF,YAAfA,OACqC,IAA5BrU,EAAMkP,QAAQkD,WACvBpS,EAAMkP,QAAQkD,UAAU1S,eAAeqS,EAAK3T,OAAO9G,IAAIqI,aACvDK,EAAMkP,QAAQoD,UAAU5S,eAAe,EAAGtB,OAAO9G,IAAIqI,aACrDK,EAAMkP,QAAQqD,UAAU7S,eAAe,EAAGtB,OAAO9G,IAAIqI,cAErDK,EAAMkP,QAAQsD,YAAYT,EAAK,EAAG,GAGpC/R,EAAMkP,QAAQ6C,IAAIrS,eAAeqS,EAAK3T,OAAO9G,IAAIqI,cAIrDxB,EAAK+F,MAAM,SAAUlE,EAAMyJ,MAOjC,OAAOtL,GAWT+G,KAAKhH,UAAU8T,IAAM,SAASC,EAAGC,EAAGC,EAAGhV,GACrC,IAAIgB,EAAOzD,KAGX,IAAKyD,EAAKyB,UACR,OAAOzB,EAIT,GAAoB,WAAhBA,EAAK0I,OAQP,OAPA1I,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,MACPyU,OAAQ,WACNzK,EAAK6T,IAAIC,EAAGC,EAAGC,EAAGhV,MAIfgB,EAQT,GAJA+T,EAAkB,iBAANA,EAAkB,EAAIA,EAClCC,EAAkB,iBAANA,GAAmB,GAAMA,OAGnB,IAAPhV,EAAoB,CAE7B,GAAiB,iBAAN8U,EAGT,OAAO9T,EAAKyT,KAFZzT,EAAKyT,KAAO,CAACK,EAAGC,EAAGC,GAQvB,IADA,IAAItS,EAAM1B,EAAK2B,aAAa3C,GACnBtG,EAAE,EAAGA,EAAEgJ,EAAInJ,OAAQG,IAAK,CAE/B,IAAImJ,EAAQ7B,EAAK8B,WAAWJ,EAAIhJ,IAEhC,GAAImJ,EAAO,CACT,GAAiB,iBAANiS,EAoBT,OAAOjS,EAAM4R,KAnBb5R,EAAM4R,KAAO,CAACK,EAAGC,EAAGC,GAEhBnS,EAAME,QAEHF,EAAMkP,UAAWlP,EAAMkP,QAAQ6C,KAClCwC,EAAYvU,EAAO,gBAGkB,IAA5BA,EAAMkP,QAAQkD,WACvBpS,EAAMkP,QAAQkD,UAAU1S,eAAeuS,EAAG7T,OAAO9G,IAAIqI,aACrDK,EAAMkP,QAAQoD,UAAU5S,eAAewS,EAAG9T,OAAO9G,IAAIqI,aACrDK,EAAMkP,QAAQqD,UAAU7S,eAAeyS,EAAG/T,OAAO9G,IAAIqI,cAErDK,EAAMkP,QAAQsD,YAAYP,EAAGC,EAAGC,IAIpChU,EAAK+F,MAAM,MAAOlE,EAAMyJ,MAO9B,OAAOtL,GAaT+G,KAAKhH,UAAUuU,YAAc,SAASR,EAAGC,EAAGC,EAAGhV,GAC7C,IAAIgB,EAAOzD,KAGX,IAAKyD,EAAKyB,UACR,OAAOzB,EAIT,GAAoB,WAAhBA,EAAK0I,OAQP,OAPA1I,EAAK4I,OAAOpR,KAAK,CACfxB,MAAO,cACPyU,OAAQ,WACNzK,EAAKsU,YAAYR,EAAGC,EAAGC,EAAGhV,MAIvBgB,EAQT,GAJA+T,EAAkB,iBAANA,EAAkB/T,EAAK0T,aAAa,GAAKK,EACrDC,EAAkB,iBAANA,EAAkBhU,EAAK0T,aAAa,GAAKM,OAGnC,IAAPhV,EAAoB,CAE7B,GAAiB,iBAAN8U,EAGT,OAAO9T,EAAK0T,aAFZ1T,EAAK0T,aAAe,CAACI,EAAGC,EAAGC,GAQ/B,IADA,IAAItS,EAAM1B,EAAK2B,aAAa3C,GACnBtG,EAAE,EAAGA,EAAEgJ,EAAInJ,OAAQG,IAAK,CAE/B,IAAImJ,EAAQ7B,EAAK8B,WAAWJ,EAAIhJ,IAEhC,GAAImJ,EAAO,CACT,GAAiB,iBAANiS,EAyBT,OAAOjS,EAAM6R,aAxBb7R,EAAM6R,aAAe,CAACI,EAAGC,EAAGC,GAExBnS,EAAME,QAEHF,EAAMkP,UAEJlP,EAAM4R,OACT5R,EAAM4R,KAAOzT,EAAKyT,MAAQ,CAAC,EAAG,GAAI,KAGpC2C,EAAYvU,EAAO,iBAGqB,IAA/BA,EAAMkP,QAAQsF,cACvBxU,EAAMkP,QAAQsF,aAAa9U,eAAeuS,EAAG7T,OAAO9G,IAAIqI,aACxDK,EAAMkP,QAAQuF,aAAa/U,eAAewS,EAAG9T,OAAO9G,IAAIqI,aACxDK,EAAMkP,QAAQwF,aAAahV,eAAeyS,EAAG/T,OAAO9G,IAAIqI,cAExDK,EAAMkP,QAAQkE,eAAenB,EAAGC,EAAGC,IAIvChU,EAAK+F,MAAM,cAAelE,EAAMyJ,MAOtC,OAAOtL,GAiCT+G,KAAKhH,UAAUyW,WAAa,WAC1B,IAEI5c,EAAGoF,EAAI6C,EAFP7B,EAAOzD,KACPuR,EAAOH,UAIX,IAAK3N,EAAKyB,UACR,OAAOzB,EAIT,GAAoB,IAAhB8N,EAAKvV,OAEP,OAAOyH,EAAKmV,YACP,GAAoB,IAAhBrH,EAAKvV,OAAc,CAC5B,GAAuB,iBAAZuV,EAAK,GAgCd,OADAjM,EAAQ7B,EAAK8B,WAAWyB,SAASuK,EAAK,GAAI,MAC3BjM,EAAMsT,YAAcnV,EAAKmV,YA/BxCvb,EAAIkU,EAAK,QAGS,IAAP9O,IACJpF,EAAE4c,aACL5c,EAAE4c,WAAa,CACbpB,eAAgBxb,EAAEwb,eAClBC,eAAgBzb,EAAEyb,eAClBC,cAAe1b,EAAE0b,cACjBC,cAAe3b,EAAE2b,cACjBC,YAAa5b,EAAE4b,YACfE,YAAa9b,EAAE8b,YACfC,cAAe/b,EAAE+b,cACjBF,aAAc7b,EAAE6b,eAIpBzV,EAAKmV,YAAc,CACjBC,oBAAuD,IAAhCxb,EAAE4c,WAAWpB,eAAiCxb,EAAE4c,WAAWpB,eAAiBpV,EAAKyW,gBACxGpB,oBAAuD,IAAhCzb,EAAE4c,WAAWnB,eAAiCzb,EAAE4c,WAAWnB,eAAiBrV,EAAK0W,gBACxGpB,mBAAqD,IAA/B1b,EAAE4c,WAAWlB,cAAgC1b,EAAE4c,WAAWlB,cAAgBtV,EAAK2W,eACrGpB,mBAAqD,IAA/B3b,EAAE4c,WAAWjB,cAAgC3b,EAAE4c,WAAWjB,cAAgBvV,EAAK4W,eACrGpB,iBAAiD,IAA7B5b,EAAE4c,WAAWhB,YAA8B5b,EAAE4c,WAAWhB,YAAcxV,EAAK6W,aAC/FnB,iBAAiD,IAA7B9b,EAAE4c,WAAWd,YAA8B9b,EAAE4c,WAAWd,YAAc1V,EAAK8W,aAC/FnB,mBAAqD,IAA/B/b,EAAE4c,WAAWb,cAAgC/b,EAAE4c,WAAWb,cAAgB3V,EAAK+W,eACrGtB,kBAAmD,IAA9B7b,EAAE4c,WAAWf,aAA+B7b,EAAE4c,WAAWf,aAAezV,EAAKgX,qBAQ/E,IAAhBlJ,EAAKvV,SACdqB,EAAIkU,EAAK,GACT9O,EAAKuE,SAASuK,EAAK,GAAI,KAKzB,IADA,IAAIpM,EAAM1B,EAAK2B,aAAa3C,GACnBtG,EAAE,EAAGA,EAAEgJ,EAAInJ,OAAQG,IAG1B,GAFAmJ,EAAQ7B,EAAK8B,WAAWJ,EAAIhJ,IAEjB,CAET,IAAIue,EAAKpV,EAAMsT,YACf8B,EAAK,CACH7B,oBAA4C,IAArBxb,EAAEwb,eAAiCxb,EAAEwb,eAAiB6B,EAAG7B,eAChFC,oBAA4C,IAArBzb,EAAEyb,eAAiCzb,EAAEyb,eAAiB4B,EAAG5B,eAChFC,mBAA0C,IAApB1b,EAAE0b,cAAgC1b,EAAE0b,cAAgB2B,EAAG3B,cAC7EC,mBAA0C,IAApB3b,EAAE2b,cAAgC3b,EAAE2b,cAAgB0B,EAAG1B,cAC7EC,iBAAsC,IAAlB5b,EAAE4b,YAA8B5b,EAAE4b,YAAcyB,EAAGzB,YACvEE,iBAAsC,IAAlB9b,EAAE8b,YAA8B9b,EAAE8b,YAAcuB,EAAGvB,YACvEC,mBAA0C,IAApB/b,EAAE+b,cAAgC/b,EAAE+b,cAAgBsB,EAAGtB,cAC7EF,kBAAwC,IAAnB7b,EAAE6b,aAA+B7b,EAAE6b,aAAewB,EAAGxB,cAI5E,IAAIyB,EAASrV,EAAMkP,QACfmG,GACFA,EAAO9B,eAAiB6B,EAAG7B,eAC3B8B,EAAO7B,eAAiB4B,EAAG5B,eAC3B6B,EAAO5B,cAAgB2B,EAAG3B,cAC1B4B,EAAO3B,cAAgB0B,EAAG1B,cAC1B2B,EAAO1B,YAAcyB,EAAGzB,YACxB0B,EAAOxB,YAAcuB,EAAGvB,YACxBwB,EAAOvB,cAAgBsB,EAAGtB,cAC1BuB,EAAOzB,aAAewB,EAAGxB,eAGpB5T,EAAM4R,OACT5R,EAAM4R,KAAOzT,EAAKyT,MAAQ,CAAC,EAAG,GAAI,KAIpC2C,EAAYvU,EAAO,YAKzB,OAAO7B,GAWTiL,MAAMlL,UAAUnF,KAAO,SAAU4Y,GAC/B,OAAO,WACL,IAAIxT,EAAOzD,KACP8U,EAASrR,EAAKoR,QAGlBpR,EAAK0T,aAAerC,EAAOqC,aAC3B1T,EAAKkV,QAAU7D,EAAO6D,QACtBlV,EAAKyT,KAAOpC,EAAOoC,KACnBzT,EAAKmV,YAAc9D,EAAO8D,YAG1B3B,EAAOjD,KAAKhU,MAGRyD,EAAKkV,QACP7D,EAAOsC,OAAO3T,EAAKkV,SACVlV,EAAKyT,MACdpC,EAAOwC,IAAI7T,EAAKyT,KAAK,GAAIzT,EAAKyT,KAAK,GAAIzT,EAAKyT,KAAK,GAAIzT,EAAKsL,MAlBzC,CAqBpBL,MAAMlL,UAAUnF,MAOnBqQ,MAAMlL,UAAU6Q,MAAQ,SAAU4C,GAChC,OAAO,WACL,IAAIxT,EAAOzD,KACP8U,EAASrR,EAAKoR,QAqBlB,OAlBApR,EAAK0T,aAAerC,EAAOqC,aAC3B1T,EAAKkV,QAAU7D,EAAO6D,QACtBlV,EAAKyT,KAAOpC,EAAOoC,KACnBzT,EAAKmV,YAAc9D,EAAO8D,YAGtBnV,EAAKkV,QACP7D,EAAOsC,OAAO3T,EAAKkV,SACVlV,EAAKyT,KACdpC,EAAOwC,IAAI7T,EAAKyT,KAAK,GAAIzT,EAAKyT,KAAK,GAAIzT,EAAKyT,KAAK,GAAIzT,EAAKsL,KACjDtL,EAAK+Q,UAEd/Q,EAAK+Q,QAAQjL,WAAW,GACxB9F,EAAK+Q,aAAU5I,EACfkJ,EAAOhF,eAAerM,IAIjBwT,EAAOjD,KAAKhU,OAxBC,CA0BrB0O,MAAMlL,UAAU6Q,OAUnB,IAAIwF,EAAc,SAASvU,EAAOpF,GAInB,aAHbA,EAAOA,GAAQ,YAIboF,EAAMkP,QAAU9Q,OAAO9G,IAAIge,eAC3BtV,EAAMkP,QAAQqE,eAAiBvT,EAAMsT,YAAYC,eACjDvT,EAAMkP,QAAQsE,eAAiBxT,EAAMsT,YAAYE,eACjDxT,EAAMkP,QAAQuE,cAAgBzT,EAAMsT,YAAYG,cAChDzT,EAAMkP,QAAQwE,cAAgB1T,EAAMsT,YAAYI,cAChD1T,EAAMkP,QAAQyE,YAAc3T,EAAMsT,YAAYK,YAC9C3T,EAAMkP,QAAQ2E,YAAc7T,EAAMsT,YAAYO,YAC9C7T,EAAMkP,QAAQ4E,cAAgB9T,EAAMsT,YAAYQ,cAChD9T,EAAMkP,QAAQ0E,aAAe5T,EAAMsT,YAAYM,kBAER,IAA5B5T,EAAMkP,QAAQkD,WACvBpS,EAAMkP,QAAQkD,UAAU1S,eAAeM,EAAM4R,KAAK,GAAIxT,OAAO9G,IAAIqI,aACjEK,EAAMkP,QAAQoD,UAAU5S,eAAeM,EAAM4R,KAAK,GAAIxT,OAAO9G,IAAIqI,aACjEK,EAAMkP,QAAQqD,UAAU7S,eAAeM,EAAM4R,KAAK,GAAIxT,OAAO9G,IAAIqI,cAEjEK,EAAMkP,QAAQsD,YAAYxS,EAAM4R,KAAK,GAAI5R,EAAM4R,KAAK,GAAI5R,EAAM4R,KAAK,SAG3B,IAA/B5R,EAAMkP,QAAQsF,cACvBxU,EAAMkP,QAAQsF,aAAa9U,eAAeM,EAAM6R,aAAa,GAAIzT,OAAO9G,IAAIqI,aAC5EK,EAAMkP,QAAQuF,aAAa/U,eAAeM,EAAM6R,aAAa,GAAIzT,OAAO9G,IAAIqI,aAC5EK,EAAMkP,QAAQwF,aAAahV,eAAeM,EAAM6R,aAAa,GAAIzT,OAAO9G,IAAIqI,cAE5EK,EAAMkP,QAAQkE,eAAepT,EAAM6R,aAAa,GAAI7R,EAAM6R,aAAa,GAAI7R,EAAM6R,aAAa,MAGhG7R,EAAMkP,QAAU9Q,OAAO9G,IAAIgd,qBAC3BtU,EAAMkP,QAAQ6C,IAAIrS,eAAeM,EAAMqT,QAASjV,OAAO9G,IAAIqI,cAG7DK,EAAMkP,QAAQ3S,QAAQyD,EAAME,OAGvBF,EAAM4E,SACT5E,EAAMuP,QAAQ/D,MAAMxL,EAAMyJ,KAAK,GAAMpF,KAAKrE,EAAMyJ,KAAK,IAjoB3D,6GCzhFIvW,EAA0DH,EAAAwiB,EAAApiB,iCAAzBV,EAAA6E,OAAAA,EAAO,GAAA4U,MAAAxR,KAAAoR,qOAP5C5Y,EASMH,EAAAyiB,EAAAriB,GARJL,EAEM0iB,EAAAC,qGAPKlZ,GAAOtB,igBCG6B3D,EAAI,GAAA,+CAAiCA,EAAI,GAAA,4CAA1FpE,EAGMH,EAAA2iB,EAAAviB,GAFJL,EAAuC4iB,EAAAC,GACvC7iB,EAAyM4iB,EAAAE,yBAF1Jte,EAAI,GAAA,mCAAiCA,EAAI,GAAA,gEAH9E,IAAAue,KAAAA,EAAO,IAAE5a,iJCGd,SAAawW,GAkBhB,SAASqE,EAAiBC,GACtB,OAAOC,EAAwBD,IAAgC,mBAAfA,EAAM5b,KAE1D,SAAS6b,EAAwBD,GAE7B,MAAwB,iBAAVA,GAA0C,mBAAbA,EAAM3J,GAErD,SAAS6J,EAAcC,GACnBA,EAAGC,cAAc5iB,YAAY2iB,GAEjC,SAASE,EAAM1hB,GACX,OAAOA,MAAAA,EAGX,SAAS2hB,EAAetV,GACpBA,EAAEsV,iBAGN,SAASC,EAAOC,GACZ,OAAOA,EAAM9d,QAAO,SAAU7F,GAC1B,OAAQ8H,KAAK9H,KAAM8H,KAAK9H,IAAK,KAC9B,IAGP,SAAS4jB,EAAQ9hB,EAAO0X,GACpB,OAAOtC,KAAKsD,MAAM1Y,EAAQ0X,GAAMA,EAGpC,SAASqK,EAAOC,EAAMjE,GAClB,IAAIkE,EAAOD,EAAKE,wBACZC,EAAMH,EAAKI,cACXC,EAAUF,EAAIG,gBACdC,EAAaC,EAAcL,GAO/B,MAHI,0BAA0BxH,KAAKrT,UAAUsF,aACzC2V,EAAWhF,EAAI,GAEZQ,EAAckE,EAAKQ,IAAMF,EAAW/E,EAAI6E,EAAQK,UAAYT,EAAKU,KAAOJ,EAAWhF,EAAI8E,EAAQO,WAG1G,SAASC,EAAU3kB,GACf,MAAoB,iBAANA,IAAmBiZ,MAAMjZ,IAAM4kB,SAAS5kB,GAG1D,SAAS6kB,EAAYjkB,EAASkkB,EAAWzN,GACjCA,EAAW,IACX0N,EAASnkB,EAASkkB,GAClB3S,YAAW,WACP6S,EAAYpkB,EAASkkB,KACtBzN,IAIX,SAAS+E,EAAMpc,GACX,OAAOkX,KAAKC,IAAID,KAAKwC,IAAI1Z,EAAG,KAAM,GAItC,SAASilB,EAAQjlB,GACb,OAAOsH,MAAMsU,QAAQ5b,GAAKA,EAAI,CAACA,GAGnC,SAASklB,EAAcC,GAEnB,IAAIC,GADJD,EAASE,OAAOF,IACIpW,MAAM,KAC1B,OAAOqW,EAAOthB,OAAS,EAAIshB,EAAO,GAAGthB,OAAS,EAGlD,SAASihB,EAASzB,EAAIwB,GACdxB,EAAGhhB,YAAc,KAAKma,KAAKqI,GAC3BxB,EAAGhhB,UAAU8B,IAAI0gB,GAGjBxB,EAAGwB,WAAa,IAAMA,EAI9B,SAASE,EAAY1B,EAAIwB,GACjBxB,EAAGhhB,YAAc,KAAKma,KAAKqI,GAC3BxB,EAAGhhB,UAAUgjB,OAAOR,GAGpBxB,EAAGwB,UAAYxB,EAAGwB,UAAUhX,QAAQ,IAAIyX,OAAO,UAAYT,EAAU/V,MAAM,KAAKyW,KAAK,KAAO,UAAW,MAAO,KAItH,SAASC,EAASnC,EAAIwB,GAClB,OAAOxB,EAAGhhB,UAAYghB,EAAGhhB,UAAUojB,SAASZ,GAAa,IAAIS,OAAO,MAAQT,EAAY,OAAOrI,KAAK6G,EAAGwB,WAG3G,SAASR,EAAcL,GACnB,IAAI0B,OAA2CjS,IAAvBxH,OAAO0Z,YAC3BC,EAA0C,gBAA1B5B,EAAI6B,YAAc,IAWtC,MAAO,CACHzG,EAXIsG,EACFzZ,OAAO0Z,YACPC,EACI5B,EAAIG,gBAAgB2B,WACpB9B,EAAI+B,KAAKD,WAQfzG,EAPIqG,EACFzZ,OAAO+Z,YACPJ,EACI5B,EAAIG,gBAAgB8B,UACpBjC,EAAI+B,KAAKE,WASvB,SAASC,IAGL,OAAOja,OAAO9C,UAAUgd,eAClB,CACEnV,MAAO,cACPoV,KAAM,cACN1M,IAAK,aAEPzN,OAAO9C,UAAUkd,iBACb,CACErV,MAAO,gBACPoV,KAAM,gBACN1M,IAAK,eAEP,CACE1I,MAAO,uBACPoV,KAAM,sBACN1M,IAAK,oBAKrB,SAAS4M,IACL,IAAIC,GAAkB,EAEtB,IACI,IAAIC,EAAOjnB,OAAOknB,eAAe,GAAI,UAAW,CAC5CC,IAAK,WACDH,GAAkB,KAI1Bta,OAAOxK,iBAAiB,OAAQ,KAAM+kB,GAE1C,MAAOtY,IAEP,OAAOqY,EAEX,SAASI,IACL,OAAO1a,OAAO2a,KAAOA,IAAIC,UAAYD,IAAIC,SAAS,eAAgB,QAKtE,SAASC,EAAcvE,EAAIwE,GACvB,OAAO,KAAOA,EAAKxE,GAGvB,SAASyE,EAAeC,EAAOplB,EAAOqlB,GAClC,OAAgB,IAARrlB,GAAgBolB,EAAMC,EAAa,GAAKD,EAAMC,IAG1D,SAASC,EAAaF,EAAOplB,GACzB,OAAOmlB,EAAeC,EAAOA,EAAM,GAAK,EAAIplB,EAAQoV,KAAKK,IAAI2P,EAAM,IAAMplB,EAAQolB,EAAM,GAAI,GAG/F,SAASG,EAAaH,EAAOplB,GACzB,OAAQA,GAASolB,EAAM,GAAKA,EAAM,IAAO,IAAMA,EAAM,GAEzD,SAASI,EAAKxlB,EAAOylB,GAEjB,IADA,IAAIpa,EAAI,EACDrL,GAASylB,EAAIpa,IAChBA,GAAK,EAET,OAAOA,EAGX,SAASqa,EAAWC,EAAMC,EAAM5lB,GAC5B,GAAIA,GAAS2lB,EAAKlR,OAAO,GAAG,GACxB,OAAO,IAEX,IAAIpJ,EAAIma,EAAKxlB,EAAO2lB,GAChBE,EAAKF,EAAKta,EAAI,GACdya,EAAKH,EAAKta,GACVqV,EAAKkF,EAAKva,EAAI,GACd6Z,EAAKU,EAAKva,GACd,OAAOqV,EAAK4E,EAAa,CAACO,EAAIC,GAAK9lB,GAASilB,EAAcvE,EAAIwE,GAGlE,SAASa,EAAaJ,EAAMC,EAAM5lB,GAE9B,GAAIA,GAAS,IACT,OAAO2lB,EAAKlR,OAAO,GAAG,GAE1B,IAAIpJ,EAAIma,EAAKxlB,EAAO4lB,GAChBC,EAAKF,EAAKta,EAAI,GACdya,EAAKH,EAAKta,GACVqV,EAAKkF,EAAKva,EAAI,GAElB,OAAOka,EAAa,CAACM,EAAIC,IAAM9lB,EAAQ0gB,GAAMuE,EAAcvE,EADlDkF,EAAKva,KAIlB,SAAS2a,EAAQJ,EAAMK,EAAQC,EAAMlmB,GACjC,GAAc,MAAVA,EACA,OAAOA,EAEX,IAAIqL,EAAIma,EAAKxlB,EAAO4lB,GAChB1nB,EAAI0nB,EAAKva,EAAI,GACblN,EAAIynB,EAAKva,GAEb,OAAI6a,EAEIlmB,EAAQ9B,GAAKC,EAAID,GAAK,EACfC,EAEJD,EAEN+nB,EAAO5a,EAAI,GAGTua,EAAKva,EAAI,GAAKyW,EAAQ9hB,EAAQ4lB,EAAKva,EAAI,GAAI4a,EAAO5a,EAAI,IAFlDrL,EArOf,IAAWmmB,EARAC,EADXrJ,EAAQqJ,cAAW,GACRA,EAMRrJ,EAAQqJ,WAAarJ,EAAQqJ,SAAW,KALvB,MAAI,QACpBA,EAAgB,MAAI,QACpBA,EAAoB,UAAI,YACxBA,EAAgB,MAAI,QACpBA,EAAiB,OAAI,SAEzBrJ,EAAQoJ,cAAW,GACRA,EAKRpJ,EAAQoJ,WAAapJ,EAAQoJ,SAAW,KAJ9BA,EAAe,MAAK,GAAK,OAClCA,EAASA,EAAkB,QAAI,GAAK,UACpCA,EAASA,EAAqB,WAAI,GAAK,aACvCA,EAASA,EAAqB,WAAI,GAAK,aAuO3C,IAAIE,EAA0B,WAC1B,SAASA,EAAShF,EAAO6E,EAAMI,GAS3B,IAAIngB,EARJH,KAAK4f,KAAO,GACZ5f,KAAK2f,KAAO,GACZ3f,KAAKigB,OAAS,GACdjgB,KAAKugB,UAAY,GACjBvgB,KAAKwgB,qBAAuB,GAC5BxgB,KAAKigB,OAAS,CAACK,IAAc,GAC7BtgB,KAAKugB,UAAY,EAAC,GAClBvgB,KAAKkgB,KAAOA,EAEZ,IAAIO,EAAU,GAUd,IARA/oB,OAAOgJ,KAAK2a,GAAOvjB,SAAQ,SAAUqI,GACjCsgB,EAAQxlB,KAAK,CAACkiB,EAAQ9B,EAAMlb,IAASA,OAGzCsgB,EAAQC,MAAK,SAAUxoB,EAAGC,GACtB,OAAOD,EAAE,GAAG,GAAKC,EAAE,GAAG,MAGrBgI,EAAQ,EAAGA,EAAQsgB,EAAQzkB,OAAQmE,IACpCH,KAAK2gB,iBAAiBF,EAAQtgB,GAAO,GAAIsgB,EAAQtgB,GAAO,IAM5D,IAFAH,KAAKugB,UAAYvgB,KAAKigB,OAAOxR,MAAM,GAE9BtO,EAAQ,EAAGA,EAAQH,KAAKugB,UAAUvkB,OAAQmE,IAC3CH,KAAK4gB,gBAAgBzgB,EAAOH,KAAKugB,UAAUpgB,IAuLnD,OApLAkgB,EAAS7c,UAAUqd,YAAc,SAAU7mB,GAEvC,IADA,IAAI8mB,EAAY,GACP3gB,EAAQ,EAAGA,EAAQH,KAAKugB,UAAUvkB,OAAS,EAAGmE,IACnD2gB,EAAU3gB,GAASgf,EAAenf,KAAK2f,KAAM3lB,EAAOmG,GAExD,OAAO2gB,GAIXT,EAAS7c,UAAUud,oBAAsB,SAAU/mB,EAAO8mB,EAAWE,GACjE,IAiBIC,EAjBAC,EAAa,EAEjB,GAAIlnB,EAAQgG,KAAK4f,KAAK5f,KAAK4f,KAAK5jB,OAAS,GACrC,KAAOhC,EAAQgG,KAAK4f,KAAKsB,EAAa,IAClCA,SAGClnB,IAAUgG,KAAK4f,KAAK5f,KAAK4f,KAAK5jB,OAAS,KAC5CklB,EAAalhB,KAAK4f,KAAK5jB,OAAS,GAG/BglB,GAAahnB,IAAUgG,KAAK4f,KAAKsB,EAAa,IAC/CA,IAEc,OAAdJ,IACAA,EAAY,IAGhB,IAAIK,EAAc,EACdC,EAAoBN,EAAUI,GAC9BG,EAAY,EACZC,EAAqB,EACrBC,EAAuB,EACvBC,EAAgB,EASpB,IANIP,EADAD,GACgBhnB,EAAQgG,KAAK4f,KAAKsB,KAAgBlhB,KAAK4f,KAAKsB,EAAa,GAAKlhB,KAAK4f,KAAKsB,KAGxElhB,KAAK4f,KAAKsB,EAAa,GAAKlnB,IAAUgG,KAAK4f,KAAKsB,EAAa,GAAKlhB,KAAK4f,KAAKsB,IAGzFE,EAAoB,GAEvBC,EAAYrhB,KAAK4f,KAAKsB,EAAa,EAAIM,GAAiBxhB,KAAK4f,KAAKsB,EAAaM,GAE3EV,EAAUI,EAAaM,GAAiBL,EAAc,IAAqB,IAAfF,EAAqB,KAEjFK,EAAqBD,EAAYJ,EAEjCE,GAAeC,EAAoB,IAAMH,GAAgBH,EAAUI,EAAaM,GAEhFP,EAAe,IAIfK,EAAuBR,EAAUI,EAAaM,GAAiBH,EAAa,IAAOF,EAEnFA,EAAc,GAEdH,GACAO,GAA8CD,EAE1CthB,KAAK4f,KAAK5jB,OAASwlB,GAAiB,GACpCA,MAIJD,GAA8CD,EAE1CthB,KAAK4f,KAAK5jB,OAASwlB,GAAiB,GACpCA,KAIRJ,EAAoBN,EAAUI,EAAaM,GAAiBL,EAEhE,OAAOnnB,EAAQunB,GAEnBlB,EAAS7c,UAAUkc,WAAa,SAAU1lB,GAEtC,OADAA,EAAQ0lB,EAAW1f,KAAK2f,KAAM3f,KAAK4f,KAAM5lB,IAG7CqmB,EAAS7c,UAAUuc,aAAe,SAAU/lB,GACxC,OAAO+lB,EAAa/f,KAAK2f,KAAM3f,KAAK4f,KAAM5lB,IAE9CqmB,EAAS7c,UAAUwc,QAAU,SAAUhmB,GAEnC,OADAA,EAAQgmB,EAAQhgB,KAAK4f,KAAM5f,KAAKigB,OAAQjgB,KAAKkgB,KAAMlmB,IAGvDqmB,EAAS7c,UAAUie,eAAiB,SAAUznB,EAAO0nB,EAAQvG,GACzD,IAAI9V,EAAIma,EAAKxlB,EAAOgG,KAAK4f,MAKzB,OAHc,MAAV5lB,GAAkB0nB,GAAU1nB,IAAUgG,KAAK4f,KAAKva,EAAI,MACpDA,EAAI+J,KAAKC,IAAIhK,EAAI,EAAG,KAEhBrF,KAAK2f,KAAKta,GAAKrF,KAAK2f,KAAKta,EAAI,IAAM8V,GAE/CkF,EAAS7c,UAAUme,eAAiB,SAAU3nB,GAC1C,IAAIqL,EAAIma,EAAKxlB,EAAOgG,KAAK4f,MACzB,MAAO,CACHgC,WAAY,CACRC,WAAY7hB,KAAK2f,KAAKta,EAAI,GAC1Byc,KAAM9hB,KAAKugB,UAAUlb,EAAI,GACzB0c,YAAa/hB,KAAKwgB,qBAAqBnb,EAAI,IAE/C2c,SAAU,CACNH,WAAY7hB,KAAK2f,KAAKta,EAAI,GAC1Byc,KAAM9hB,KAAKugB,UAAUlb,EAAI,GACzB0c,YAAa/hB,KAAKwgB,qBAAqBnb,EAAI,IAE/C4c,UAAW,CACPJ,WAAY7hB,KAAK2f,KAAKta,GACtByc,KAAM9hB,KAAKugB,UAAUlb,GACrB0c,YAAa/hB,KAAKwgB,qBAAqBnb,MAInDgb,EAAS7c,UAAU0e,kBAAoB,WACnC,IAAIC,EAAeniB,KAAKugB,UAAUziB,IAAIsf,GACtC,OAAOhO,KAAKC,IAAImC,MAAM,KAAM2Q,IAEhC9B,EAAS7c,UAAU4e,UAAY,WAC3B,OAAOpiB,KAAK2f,KAAK,KAAO3f,KAAK2f,KAAK3f,KAAK2f,KAAK3jB,OAAS,IAGzDqkB,EAAS7c,UAAU6e,QAAU,SAAUroB,GACnC,OAAOgG,KAAKggB,QAAQhgB,KAAK0f,WAAW1lB,KAExCqmB,EAAS7c,UAAUmd,iBAAmB,SAAUxgB,EAAOnG,GACnD,IAAIsoB,EAYJ,IAAKzF,EATDyF,EADU,QAAVniB,EACa,EAEE,QAAVA,EACQ,IAGA0E,WAAW1E,MAGG0c,EAAU7iB,EAAM,IAC3C,MAAM,IAAIa,MAAM,4CAGpBmF,KAAK4f,KAAK3kB,KAAKqnB,GACftiB,KAAK2f,KAAK1kB,KAAKjB,EAAM,IACrB,IAAIuoB,EAASC,OAAOxoB,EAAM,IAIrBsoB,EAMDtiB,KAAKigB,OAAOhlB,MAAKkW,MAAMoR,IAAkBA,GALpCpR,MAAMoR,KACPviB,KAAKigB,OAAO,GAAKsC,GAMzBviB,KAAKwgB,qBAAqBvlB,KAAK,IAEnColB,EAAS7c,UAAUod,gBAAkB,SAAUzkB,EAAGsmB,GAE9C,GAAKA,EAIL,GAAIziB,KAAK2f,KAAKxjB,KAAO6D,KAAK2f,KAAKxjB,EAAI,GAAnC,CAKA6D,KAAKigB,OAAO9jB,GACRgjB,EAAe,CAACnf,KAAK2f,KAAKxjB,GAAI6D,KAAK2f,KAAKxjB,EAAI,IAAKsmB,EAAG,GAAKxD,EAAcjf,KAAK4f,KAAKzjB,GAAI6D,KAAK4f,KAAKzjB,EAAI,IACvG,IAAIumB,GAAc1iB,KAAK2f,KAAKxjB,EAAI,GAAK6D,KAAK2f,KAAKxjB,IAAM6D,KAAKugB,UAAUpkB,GAChE4lB,EAAc3S,KAAKiG,KAAKmN,OAAOE,EAAWC,QAAQ,IAAM,GACxDb,EAAO9hB,KAAK2f,KAAKxjB,GAAK6D,KAAKugB,UAAUpkB,GAAK4lB,EAC9C/hB,KAAKwgB,qBAAqBrkB,GAAK2lB,OAT3B9hB,KAAKigB,OAAO9jB,GAAK6D,KAAKwgB,qBAAqBrkB,GAAK6D,KAAK2f,KAAKxjB,IAW3DkkB,EApNC,GAqORuC,EAAmB,CACnBlR,GAAI,SAAU1X,GACV,YAAiB4R,IAAV5R,EAAsB,GAAKA,EAAM2oB,QAAQ,IAEpDljB,KAAM+iB,QAENK,EAAa,CACbxqB,OAAQ,SACRyqB,KAAM,OACNC,OAAQ,SACRC,OAAQ,SACRC,YAAa,eACbC,YAAa,eACbC,UAAW,aACXC,WAAY,aACZC,SAAU,WACVC,WAAY,aACZzhB,QAAS,UACT0hB,SAAU,WACVC,IAAK,MACLC,IAAK,MACLC,iBAAkB,cAClBC,iBAAkB,cAClBC,UAAW,YACXC,KAAM,aACNC,IAAK,YACLC,OAAQ,SACRC,QAAS,UACTC,KAAM,OACNC,eAAgB,kBAChBC,aAAc,gBACdC,OAAQ,SACRC,iBAAkB,oBAClBC,eAAgB,kBAChBC,aAAc,gBACdC,YAAa,eACbC,UAAW,aACXzqB,MAAO,QACP0qB,gBAAiB,mBACjBC,cAAe,iBACfC,YAAa,eACbC,WAAY,cACZC,SAAU,aAGVC,EAAoB,CACpBC,SAAU,cACVC,KAAM,WAGV,SAASC,EAASC,EAAQ9J,GACtB,IAAKwB,EAAUxB,GACX,MAAM,IAAIxgB,MAAM,sCAIpBsqB,EAAO7E,WAAajF,EAExB,SAAS+J,EAA2BD,EAAQ9J,GACxC,IAAKwB,EAAUxB,GACX,MAAM,IAAIxgB,MAAM,wDAEpBsqB,EAAOE,uBAAyBhK,EAEpC,SAASiK,EAAuBH,EAAQ9J,GACpC,IAAKwB,EAAUxB,GACX,MAAM,IAAIxgB,MAAM,oDAEpBsqB,EAAOI,mBAAqBlK,EAEhC,SAASmK,EAAwBL,EAAQ9J,GACrC,IAAKwB,EAAUxB,GACX,MAAM,IAAIxgB,MAAM,qDAEpBsqB,EAAOM,oBAAsBpK,EAEjC,SAASqK,EAAUP,EAAQ9J,GAEvB,GAAqB,iBAAVA,GAAsB7b,MAAMsU,QAAQuH,GAC3C,MAAM,IAAIxgB,MAAM,yCAGpB,QAAkB+Q,IAAdyP,EAAMzJ,UAAmChG,IAAdyP,EAAMhM,IACjC,MAAM,IAAIxU,MAAM,kDAEpBsqB,EAAOQ,SAAW,IAAItF,EAAShF,EAAO8J,EAAOjF,OAAQ,EAAOiF,EAAO7E,YAEvE,SAASsF,EAAUT,EAAQ9J,GAIvB,GAHAA,EAAQ8B,EAAQ9B,IAGX7b,MAAMsU,QAAQuH,KAAWA,EAAMrf,OAChC,MAAM,IAAInB,MAAM,4CAGpBsqB,EAAOU,QAAUxK,EAAMrf,OAGvBmpB,EAAOhc,MAAQkS,EAEnB,SAASyK,EAASX,EAAQ9J,GACtB,GAAqB,kBAAVA,EACP,MAAM,IAAIxgB,MAAM,gDAGpBsqB,EAAOjF,KAAO7E,EAElB,SAAS0K,EAAYZ,EAAQ9J,GACzB,GAAqB,kBAAVA,EACP,MAAM,IAAIxgB,MAAM,mDAGpBsqB,EAAOa,QAAU3K,EAErB,SAAS4K,EAAsBd,EAAQ9J,GACnC,GAAqB,iBAAVA,EACP,MAAM,IAAIxgB,MAAM,4DAEpBsqB,EAAOe,kBAAoB7K,EAE/B,SAAS8K,EAAYhB,EAAQ9J,GACzB,IACIlf,EADA0F,EAAU,EAAC,GAUf,GAPc,UAAVwZ,EACAA,EAAQ,EAAC,GAAM,GAEA,UAAVA,IACLA,EAAQ,EAAC,GAAO,KAGN,IAAVA,IAA4B,IAAVA,EAAiB,CACnC,IAAKlf,EAAI,EAAGA,EAAIgpB,EAAOU,QAAS1pB,IAC5B0F,EAAQ5G,KAAKogB,GAEjBxZ,EAAQ5G,MAAK,OAGZ,CAAA,IAAKuE,MAAMsU,QAAQuH,KAAWA,EAAMrf,QAAUqf,EAAMrf,SAAWmpB,EAAOU,QAAU,EACjF,MAAM,IAAIhrB,MAAM,4DAGhBgH,EAAUwZ,EAEd8J,EAAOtjB,QAAUA,EAErB,SAASukB,EAAgBjB,EAAQ9J,GAG7B,OAAQA,GACJ,IAAK,aACD8J,EAAOkB,IAAM,EACb,MACJ,IAAK,WACDlB,EAAOkB,IAAM,EACb,MACJ,QACI,MAAM,IAAIxrB,MAAM,iDAG5B,SAASyrB,EAAWnB,EAAQ9J,GACxB,IAAKwB,EAAUxB,GACX,MAAM,IAAIxgB,MAAM,gDAGN,IAAVwgB,IAGJ8J,EAAOoB,OAASpB,EAAOQ,SAAS9E,YAAYxF,IAEhD,SAASmL,EAAUrB,EAAQ9J,GACvB,IAAKwB,EAAUxB,GACX,MAAM,IAAIxgB,MAAM,+CAGpB,GADAsqB,EAAO7Q,MAAQ6Q,EAAOQ,SAAS9E,YAAYxF,IACtC8J,EAAO7Q,OAAS6Q,EAAOU,QAAU,EAClC,MAAM,IAAIhrB,MAAM,0FAGxB,SAAS4rB,EAAYtB,EAAQ9J,GACzB,IAAIlb,EACJ,IAAK0c,EAAUxB,KAAW7b,MAAMsU,QAAQuH,GACpC,MAAM,IAAIxgB,MAAM,+EAEpB,GAAI2E,MAAMsU,QAAQuH,IAA6B,IAAjBA,EAAMrf,SAAgB6gB,EAAUxB,EAAM,MAAOwB,EAAUxB,EAAM,IACvF,MAAM,IAAIxgB,MAAM,+EAEpB,GAAc,IAAVwgB,EAAJ,CAQA,IALK7b,MAAMsU,QAAQuH,KACfA,EAAQ,CAACA,EAAOA,IAGpB8J,EAAOuB,QAAU,CAACvB,EAAOQ,SAAS9E,YAAYxF,EAAM,IAAK8J,EAAOQ,SAAS9E,YAAYxF,EAAM,KACtFlb,EAAQ,EAAGA,EAAQglB,EAAOQ,SAASpF,UAAUvkB,OAAS,EAAGmE,IAE1D,GAAIglB,EAAOuB,QAAQ,GAAGvmB,GAAS,GAAKglB,EAAOuB,QAAQ,GAAGvmB,GAAS,EAC3D,MAAM,IAAItF,MAAM,8DAGxB,IAAI8rB,EAAetL,EAAM,GAAKA,EAAM,GAChCuL,EAAazB,EAAOQ,SAAShG,KAAK,GAEtC,GAAIgH,GADYxB,EAAOQ,SAAShG,KAAKwF,EAAOQ,SAAShG,KAAK3jB,OAAS,GACnC4qB,GAAc,EAC1C,MAAM,IAAI/rB,MAAM,oEAGxB,SAASgsB,EAAc1B,EAAQ9J,GAI3B,OAAQA,GACJ,IAAK,MACD8J,EAAO2B,IAAM,EACb,MACJ,IAAK,MACD3B,EAAO2B,IAAM,EACb,MACJ,QACI,MAAM,IAAIjsB,MAAM,uDAG5B,SAASksB,EAAc5B,EAAQ9J,GAE3B,GAAqB,iBAAVA,EACP,MAAM,IAAIxgB,MAAM,gEAIpB,IAAIipB,EAAMzI,EAAMjb,QAAQ,QAAU,EAC9ByjB,EAAOxI,EAAMjb,QAAQ,SAAW,EAChC4mB,EAAQ3L,EAAMjb,QAAQ,UAAY,EAClC8f,EAAO7E,EAAMjb,QAAQ,SAAW,EAChC6mB,EAAQ5L,EAAMjb,QAAQ,UAAY,EAClC8mB,EAAgB7L,EAAMjb,QAAQ,kBAAoB,EAClD+mB,EAAU9L,EAAMjb,QAAQ,aAAe,EAC3C,GAAI4mB,EAAO,CACP,GAAuB,IAAnB7B,EAAOU,QACP,MAAM,IAAIhrB,MAAM,6DAGpByrB,EAAWnB,EAAQA,EAAOhc,MAAM,GAAKgc,EAAOhc,MAAM,IAEtD,GAAI+d,IAAkB/B,EAAOoB,QAAUpB,EAAO7Q,OAC1C,MAAM,IAAIzZ,MAAM,6EAEpBsqB,EAAOxR,OAAS,CACZmQ,IAAKA,GAAO5D,EACZ2D,KAAMA,EACNsD,QAASA,EACTH,MAAOA,EACP9G,KAAMA,EACN+G,MAAOA,EACPC,cAAeA,GAGvB,SAASE,EAAajC,EAAQ9J,GAC1B,IAAc,IAAVA,EAGJ,IAAc,IAAVA,GAAkBC,EAAwBD,GAAQ,CAClD8J,EAAOH,SAAW,GAClB,IAAK,IAAI7oB,EAAI,EAAGA,EAAIgpB,EAAOU,QAAS1pB,IAChCgpB,EAAOH,SAAS/pB,KAAKogB,OAGxB,CAED,IADAA,EAAQ8B,EAAQ9B,IACNrf,SAAWmpB,EAAOU,QACxB,MAAM,IAAIhrB,MAAM,sDAEpBwgB,EAAMvjB,SAAQ,SAAUuvB,GACpB,GAAyB,kBAAdA,IAA4B/L,EAAwB+L,GAC3D,MAAM,IAAIxsB,MAAM,oEAGxBsqB,EAAOH,SAAW3J,GAG1B,SAASiM,EAAqBnC,EAAQ9J,GAClC,GAAIA,EAAMrf,SAAWmpB,EAAOU,QACxB,MAAM,IAAIhrB,MAAM,uDAEpBsqB,EAAOoC,iBAAmBlM,EAE9B,SAASmM,EAAerC,EAAQ9J,GAC5B,IAAKC,EAAwBD,GACzB,MAAM,IAAIxgB,MAAM,kDAEpBsqB,EAAOsC,WAAapM,EAExB,SAASqM,GAAWvC,EAAQ9J,GACxB,IAAKD,EAAiBC,GAClB,MAAM,IAAIxgB,MAAM,0DAEpBsqB,EAAOra,OAASuQ,EAEpB,SAASsM,GAAoBxC,EAAQ9J,GACjC,GAAqB,kBAAVA,EACP,MAAM,IAAIxgB,MAAM,2DAEpBsqB,EAAOyC,gBAAkBvM,EAE7B,SAASwM,GAAoB1C,EAAQ9J,GAEjC8J,EAAO7I,gBAAkBjB,EAE7B,SAASyM,GAAc3C,EAAQ9J,GAC3B,GAAqB,iBAAVA,IAAgC,IAAVA,EAC7B,MAAM,IAAIxgB,MAAM,wDAEpBsqB,EAAO4C,UAAY1M,EAEvB,SAAS2M,GAAe7C,EAAQ9J,GAC5B,GAAqB,iBAAVA,EACP,MAAM,IAAIxgB,MAAM,+CAEY,iBAArBsqB,EAAO4C,WACd5C,EAAOtC,WAAa,GACpBnrB,OAAOgJ,KAAK2a,GAAOvjB,SAAQ,SAAUie,GACjCoP,EAAOtC,WAAW9M,GAAOoP,EAAO4C,UAAY1M,EAAMtF,OAItDoP,EAAOtC,WAAaxH,EAI5B,SAAS4M,GAAYtuB,GAIjB,IAAIwrB,EAAS,CACToB,OAAQ,KACRjS,MAAO,KACPoS,QAAS,KACTV,SAAS,EACTE,kBAAmB,IACnBuB,WAAY7E,EACZ9X,OAAQ8X,GAGRsF,EAAQ,CACRpG,KAAM,CAAEqG,GAAG,EAAOC,EAAGlD,GACrBG,uBAAwB,CAAE8C,GAAG,EAAOC,EAAGhD,GACvCG,mBAAoB,CAAE4C,GAAG,EAAOC,EAAG9C,GACnCG,oBAAqB,CAAE0C,GAAG,EAAOC,EAAG5C,GACpCrc,MAAO,CAAEgf,GAAG,EAAMC,EAAGxC,GACrB/jB,QAAS,CAAEsmB,GAAG,EAAMC,EAAGjC,GACvBnF,UAAW,CAAEmH,GAAG,EAAMC,EAAGvB,GACzB3G,KAAM,CAAEiI,GAAG,EAAOC,EAAGtC,GACrBE,QAAS,CAAEmC,GAAG,EAAOC,EAAGrC,GACxBG,kBAAmB,CAAEiC,GAAG,EAAOC,EAAGnC,GAClC7G,MAAO,CAAE+I,GAAG,EAAMC,EAAG1C,GACrB3N,YAAa,CAAEoQ,GAAG,EAAOC,EAAGhC,GAC5BG,OAAQ,CAAE4B,GAAG,EAAOC,EAAG9B,GACvBhS,MAAO,CAAE6T,GAAG,EAAOC,EAAG5B,GACtBE,QAAS,CAAEyB,GAAG,EAAOC,EAAG3B,GACxB4B,UAAW,CAAEF,GAAG,EAAMC,EAAGrB,GACzBU,WAAY,CAAEU,GAAG,EAAOC,EAAGZ,GAC3B1c,OAAQ,CAAEqd,GAAG,EAAOC,EAAGV,IACvB1C,SAAU,CAAEmD,GAAG,EAAOC,EAAGhB,GACzBQ,gBAAiB,CAAEO,GAAG,EAAMC,EAAGT,IAC/BrL,gBAAiB,CAAE6L,GAAG,EAAOC,EAAGP,IAChCE,UAAW,CAAEI,GAAG,EAAMC,EAAGN,IACzBjF,WAAY,CAAEsF,GAAG,EAAMC,EAAGJ,IAC1BT,iBAAkB,CAAEY,GAAG,EAAOC,EAAGd,IAEjCgB,EAAW,CACXzmB,SAAS,EACTmf,UAAW,MACXqH,UAAW,MACXtQ,YAAa,aACb6P,iBAAiB,EACjBG,UAAW,QACXlF,WAAYA,EACZwC,uBAAwB,EACxBE,mBAAoB,EACpBE,oBAAqB,IAGrB9rB,EAAQmR,SAAWnR,EAAQ8tB,aAC3B9tB,EAAQ8tB,WAAa9tB,EAAQmR,QAKjCpT,OAAOgJ,KAAKwnB,GAAOpwB,SAAQ,SAAUiB,GAEjC,GAAK2iB,EAAM/hB,EAAQZ,UAA6B6S,IAAnB0c,EAASvvB,GAMtCmvB,EAAMnvB,GAAMqvB,EAAEjD,EAASzJ,EAAM/hB,EAAQZ,IAA0BY,EAAQZ,GAAzBuvB,EAASvvB,SALnD,GAAImvB,EAAMnvB,GAAMovB,EACZ,MAAM,IAAIttB,MAAM,gBAAkB9B,EAAO,qBAOrDosB,EAAOlB,KAAOtqB,EAAQsqB,KAKtB,IAAI1mB,EAAIvE,SAASC,cAAc,OAC3BsvB,OAAmC3c,IAAxBrO,EAAEirB,MAAMC,YACnBC,OAAiC9c,IAAtBrO,EAAEirB,MAAMG,UACvBxD,EAAOyD,cAAgBF,EAAW,YAAcH,EAAW,cAAgB,kBAE3E,IAAIM,EAAS,CACT,CAAC,OAAQ,OACT,CAAC,QAAS,WAGd,OADA1D,EAAOqD,MAAQK,EAAO1D,EAAO2B,KAAK3B,EAAOkB,KAClClB,EAGX,SAAS2D,GAAMzwB,EAAQsB,EAASovB,GAC5B,IAMIC,EACAC,EACAC,EACAC,EACAC,EAVAC,EAAUhL,IAEVK,EAD0BI,KACmBL,IAG7C6K,EAAejxB,EAOfkxB,EAAiB5vB,EAAQgsB,SACzB6D,EAAe,GACfC,EAAkB,GAClBC,EAAsB,GACtBC,EAA2B,EAC3BC,EAAe,GAEfC,EAAiBxxB,EAAO+jB,cACxB0N,EAAwBnwB,EAAQ2iB,iBAAmBuN,EAAevN,gBAClEyN,EAAaF,EAAe3L,KAG5B8L,EAAyC,QAAvBH,EAAe/C,KAAiC,IAAhBntB,EAAQ0sB,IAAY,EAAI,IAE9E,SAAS4D,EAAUC,EAAWlN,GAC1B,IAAImN,EAAMN,EAAe5wB,cAAc,OAKvC,OAJI+jB,GACAC,EAASkN,EAAKnN,GAElBkN,EAAU3xB,YAAY4xB,GACfA,EAGX,SAASC,EAAUtH,EAAMuH,GACrB,IAAItH,EAASkH,EAAUnH,EAAMnpB,EAAQkpB,WAAWE,QAC5CC,EAASiH,EAAUlH,EAAQppB,EAAQkpB,WAAWG,QAWlD,GAVAiH,EAAUjH,EAAQrpB,EAAQkpB,WAAWM,WACrCH,EAAO7oB,aAAa,cAAeojB,OAAO8M,IACtC1wB,EAAQiuB,kBAGR5E,EAAO7oB,aAAa,WAAY,KAChC6oB,EAAOppB,iBAAiB,WAAW,SAAUH,GACzC,OAAO6wB,GAAa7wB,EAAO4wB,YAGFze,IAA7BjS,EAAQ4tB,iBAAgC,CACxC,IAAIgD,EAAe5wB,EAAQ4tB,iBAAiB8C,GAC5C3yB,OAAOgJ,KAAK6pB,GAAczyB,SAAQ,SAAUiC,GACxCipB,EAAO7oB,aAAaJ,EAAWwwB,EAAaxwB,OAWpD,OARAipB,EAAO7oB,aAAa,OAAQ,UAC5B6oB,EAAO7oB,aAAa,mBAAoBR,EAAQ0sB,IAAM,WAAa,cAC9C,IAAjBgE,EACApN,EAAS+F,EAAQrpB,EAAQkpB,WAAWI,aAE/BoH,IAAiB1wB,EAAQksB,QAAU,GACxC5I,EAAS+F,EAAQrpB,EAAQkpB,WAAWK,aAEjCH,EAGX,SAASyH,EAAW1H,EAAMxmB,GACtB,QAAKA,GAGE2tB,EAAUnH,EAAMnpB,EAAQkpB,WAAWhhB,SAG9C,SAAS4oB,EAAYC,EAAgB5H,GACjC,IAAI6H,EAAcV,EAAUnH,EAAMnpB,EAAQkpB,WAAWU,UACrD0F,EAAgB,IAChBC,EAAiB,IACFjuB,KAAKuvB,EAAWG,EAAaD,EAAe,KAG3D,IAAK,IAAIvuB,EAAI,EAAGA,EAAIxC,EAAQksB,QAAS1pB,IAEjC8sB,EAAchuB,KAAKmvB,EAAUtH,EAAM3mB,IACnCutB,EAAoBvtB,GAAKA,EACzB+sB,EAAejuB,KAAKuvB,EAAWG,EAAaD,EAAevuB,EAAI,KAIvE,SAASyuB,EAAUV,GAsBf,OApBAjN,EAASiN,EAAWvwB,EAAQkpB,WAAWxqB,QACnB,IAAhBsB,EAAQmtB,IACR7J,EAASiN,EAAWvwB,EAAQkpB,WAAWW,KAGvCvG,EAASiN,EAAWvwB,EAAQkpB,WAAWY,KAEvB,IAAhB9pB,EAAQ0sB,IACRpJ,EAASiN,EAAWvwB,EAAQkpB,WAAWO,YAGvCnG,EAASiN,EAAWvwB,EAAQkpB,WAAWQ,UAIvCpG,EAASiN,EADS,QADFW,iBAAiBX,GAAWlJ,UAExBrnB,EAAQkpB,WAAWc,iBAGnBhqB,EAAQkpB,WAAWa,kBAEpCuG,EAAUC,EAAWvwB,EAAQkpB,WAAWC,MAEnD,SAASgI,EAAW9H,EAAQqH,GACxB,SAAK1wB,EAAQqrB,WAAarrB,EAAQqrB,SAASqF,KAGpCJ,EAAUjH,EAAO+H,WAAYpxB,EAAQkpB,WAAWmB,SAE3D,SAASgH,IACL,OAAO1B,EAAa2B,aAAa,YAGrC,SAASC,EAAiBb,GAEtB,OADmBpB,EAAcoB,GACbY,aAAa,YAErC,SAASE,IACD/B,IACAgC,GAAY,SAAWrG,EAAkBC,UACzCoE,EAAetxB,SAAQ,SAAUksB,GACzBA,GACAzI,EAAcyI,MAGtBoF,EAAiB,MAIzB,SAASpE,IACLmG,IAEA/B,EAAiBH,EAAcnrB,IAAIgtB,GACnCO,GAAU,SAAWtG,EAAkBC,UAAU,SAAUsG,EAAQjB,EAAckB,GAC7E,GAAKnC,GAAmBzvB,EAAQqrB,WAGK,IAAjCoE,EAAeiB,GAAnB,CAGA,IAAImB,EAAiBF,EAAOjB,IACW,IAAnC1wB,EAAQqrB,SAASqF,KACjBmB,EAAiB7xB,EAAQqrB,SAASqF,GAAc3Y,GAAG6Z,EAAUlB,KAEjEjB,EAAeiB,GAAcoB,UAAYD,MAGjD,SAASvG,IACLmG,GAAY,SAAWrG,EAAkBE,MACzCoG,GAAU,SAAWtG,EAAkBE,MAAM,SAAUqG,EAAQjB,EAAckB,EAAWzH,EAAK4H,GAEzFhC,EAAoB5xB,SAAQ,SAAUqI,GAClC,IAAI6iB,EAASiG,EAAc9oB,GACvByR,EAAM+Z,GAAoBlC,EAAiBtpB,EAAO,GAAG,GAAM,GAAM,GACjEkP,EAAMsc,GAAoBlC,EAAiBtpB,EAAO,KAAK,GAAM,GAAM,GACnEmS,EAAMoZ,EAAUvrB,GAEhB/G,EAAOmkB,OAAO5jB,EAAQ8tB,WAAW/V,GAAG6Z,EAAUprB,KAElDyR,EAAM2X,EAAexJ,aAAanO,GAAK+Q,QAAQ,GAC/CtT,EAAMka,EAAexJ,aAAa1Q,GAAKsT,QAAQ,GAC/CrQ,EAAMiX,EAAexJ,aAAazN,GAAKqQ,QAAQ,GAC/CK,EAAOrjB,SAAS,GAAGxF,aAAa,gBAAiByX,GACjDoR,EAAOrjB,SAAS,GAAGxF,aAAa,gBAAiBkV,GACjD2T,EAAOrjB,SAAS,GAAGxF,aAAa,gBAAiBmY,GACjD0Q,EAAOrjB,SAAS,GAAGxF,aAAa,iBAAkBf,SAI9D,SAASwyB,EAAS3H,GAEd,GAAIA,EAAK4H,OAAS9U,EAAQqJ,SAAS0L,OAAS7H,EAAK4H,OAAS9U,EAAQqJ,SAAS2L,MACvE,OAAOxC,EAAe5J,KAE1B,GAAIsE,EAAK4H,OAAS9U,EAAQqJ,SAAS4L,MAAO,CACtC,GAAI/H,EAAKqH,OAAS,EACd,MAAM,IAAIzwB,MAAM,0DAOpB,IAJA,IAAIoxB,EAAWhI,EAAKqH,OAAS,EACzBY,EAAS,IAAMD,EACfX,EAAS,GAENW,KACHX,EAAOW,GAAYA,EAAWC,EAGlC,OADAZ,EAAOrwB,KAAK,KACLkxB,EAAWb,EAAQrH,EAAKmI,SAEnC,OAAInI,EAAK4H,OAAS9U,EAAQqJ,SAASiM,UAExBF,EAAWlI,EAAKqH,OAAQrH,EAAKmI,SAEpCnI,EAAK4H,OAAS9U,EAAQqJ,SAASkM,OAE3BrI,EAAKmI,QACEnI,EAAKqH,OAAOxtB,KAAI,SAAU9D,GAE7B,OAAOuvB,EAAexJ,aAAawJ,EAAevJ,QAAQuJ,EAAe7J,WAAW1lB,QAIrFiqB,EAAKqH,OAET,GAEX,SAASa,EAAWb,EAAQc,GACxB,OAAOd,EAAOxtB,KAAI,SAAU9D,GACxB,OAAOuvB,EAAexJ,aAAaqM,EAAU7C,EAAevJ,QAAQhmB,GAASA,MAGrF,SAASuyB,EAAetI,GACpB,SAASuI,EAAcxyB,EAAOyyB,GAE1B,OAAOjK,QAAQxoB,EAAQyyB,GAAW9J,QAAQ,IAE9C,IAAI+J,EAAQd,EAAS3H,GACjB0I,EAAU,GACVC,EAAerD,EAAe5J,KAAK,GACnCkN,EAActD,EAAe5J,KAAK4J,EAAe5J,KAAK3jB,OAAS,GAC/D8wB,GAAc,EACdC,GAAa,EACbC,EAAU,EAkFd,OAhFAN,EAAQ9Q,EAAO8Q,EAAMje,QAAQiS,MAAK,SAAUxoB,EAAGC,GAC3C,OAAOD,EAAIC,OAGL,KAAOy0B,IACbF,EAAMO,QAAQL,GACdE,GAAc,GAGdJ,EAAMA,EAAM1wB,OAAS,KAAO6wB,IAC5BH,EAAMzxB,KAAK4xB,GACXE,GAAa,GAEjBL,EAAM50B,SAAQ,SAAUo1B,EAAS/sB,GAE7B,IAAI2hB,EACA3lB,EACAgxB,EAGAC,EACAC,EACAC,EACAptB,EACAgS,EACAqb,EACAC,EARAC,EAAMP,EACNQ,EAAOhB,EAAMvsB,EAAQ,GAQrBwtB,EAAU1J,EAAK4H,OAAS9U,EAAQqJ,SAAS2L,MAiB7C,IAdI4B,IACA7L,EAAOyH,EAAehJ,UAAUpgB,IAG/B2hB,IACDA,EAAO4L,EAAOD,QAGL7hB,IAAT8hB,IACAA,EAAOD,GAGX3L,EAAO1S,KAAKC,IAAIyS,EAAM,MAEjB3lB,EAAIsxB,EAAKtxB,GAAKuxB,EAAMvxB,EAAIqwB,EAAcrwB,EAAG2lB,GAAO,CAcjD,IATA5P,GADAmb,GADAD,EAAS7D,EAAe7J,WAAWvjB,IACV6wB,IACA/I,EAAK2J,SAAW,GAMzCJ,EAAWH,GALXE,EAAYne,KAAKsD,MAAMR,IAQlBib,EAAI,EAAGA,GAAKI,EAAWJ,GAAK,EAM7BR,GADAW,EAASN,EAAUG,EAAIK,GACR7K,QAAQ,IAAM,CAAC4G,EAAexJ,aAAauN,GAAS,GAGvEptB,EAAOwsB,EAAMtsB,QAAQjE,IAAM,EAAI4a,EAAQoJ,SAAS0N,WAAaF,EAAU5W,EAAQoJ,SAAS2N,WAAa/W,EAAQoJ,SAAS4N,SAEjH5tB,GAAS2sB,GAAe3wB,IAAMuxB,IAC/BxtB,EAAO,GAEL/D,IAAMuxB,GAAQX,IAEhBJ,EAAQS,EAAOzK,QAAQ,IAAM,CAACxmB,EAAG+D,IAGrC8sB,EAAUI,MAGXT,EAEX,SAASqB,EAAW9B,EAAQ+B,EAAY5G,GACpC,IAAI6G,EAAIC,EACJr1B,EAAU+wB,EAAe5wB,cAAc,OACvCm1B,IAAoBF,EAAK,IACtBnX,EAAQoJ,SAASkO,MAAQ,GAC5BH,EAAGnX,EAAQoJ,SAAS4N,SAAWp0B,EAAQkpB,WAAW+B,YAClDsJ,EAAGnX,EAAQoJ,SAAS0N,YAAcl0B,EAAQkpB,WAAWgC,WACrDqJ,EAAGnX,EAAQoJ,SAAS2N,YAAcn0B,EAAQkpB,WAAWiC,SACrDoJ,GACAI,IAAqBH,EAAK,IACvBpX,EAAQoJ,SAASkO,MAAQ,GAC5BF,EAAGpX,EAAQoJ,SAAS4N,SAAWp0B,EAAQkpB,WAAW0B,aAClD4J,EAAGpX,EAAQoJ,SAAS0N,YAAcl0B,EAAQkpB,WAAW2B,YACrD2J,EAAGpX,EAAQoJ,SAAS2N,YAAcn0B,EAAQkpB,WAAW4B,UACrD0J,GACAI,EAA0B,CAAC50B,EAAQkpB,WAAW6B,gBAAiB/qB,EAAQkpB,WAAW8B,eAClF6J,EAA2B,CAAC70B,EAAQkpB,WAAWwB,iBAAkB1qB,EAAQkpB,WAAWyB,gBAGxF,SAASmK,EAAWvuB,EAAM8I,GACtB,IAAI9Q,EAAI8Q,IAAWrP,EAAQkpB,WAAW7oB,MAElC00B,EAAcx2B,EAAIk2B,EAAmBE,EACzC,OAAOtlB,EAAS,KAFS9Q,EAAIq2B,EAA0BC,GAEd70B,EAAQ0sB,KAAO,IAAMqI,EAAYxuB,GAE9E,SAASyuB,EAAU5S,EAAQ/hB,EAAOkG,GAG9B,IADAA,EAAO+tB,EAAaA,EAAWj0B,EAAOkG,GAAQA,KACjC6W,EAAQoJ,SAASkO,KAA9B,CAIA,IAAI/1B,EAAO2xB,EAAUnxB,GAAS,GAC9BR,EAAK0kB,UAAYyR,EAAWvuB,EAAMvG,EAAQkpB,WAAWuB,QACrD9rB,EAAKkwB,MAAM7uB,EAAQ6uB,OAASzM,EAAS,IAEjC7b,EAAO6W,EAAQoJ,SAAS4N,WACxBz1B,EAAO2xB,EAAUnxB,GAAS,IACrBkkB,UAAYyR,EAAWvuB,EAAMvG,EAAQkpB,WAAW7oB,OACrD1B,EAAK6B,aAAa,aAAcojB,OAAOvjB,IACvC1B,EAAKkwB,MAAM7uB,EAAQ6uB,OAASzM,EAAS,IACrCzjB,EAAKmzB,UAAYlO,OAAO8J,EAAU3V,GAAG1X,MAO7C,OA/BAijB,EAASnkB,EAASa,EAAQkpB,WAAWoB,MACrChH,EAASnkB,EAAyB,IAAhBa,EAAQ0sB,IAAY1sB,EAAQkpB,WAAWqB,eAAiBvqB,EAAQkpB,WAAWsB,cA2B7FzsB,OAAOgJ,KAAKwrB,GAAQp0B,SAAQ,SAAUikB,GAClC4S,EAAU5S,EAAQmQ,EAAOnQ,GAAQ,GAAImQ,EAAOnQ,GAAQ,OAEjDjjB,EAEX,SAAS81B,IACDzF,IACA5N,EAAc4N,GACdA,EAAa,MAGrB,SAASlF,GAAKA,GAEV2K,IACA,IAAI1C,EAASK,EAAetI,GACxBlmB,EAASkmB,EAAKlmB,OACd+M,EAASmZ,EAAKnZ,QAAU,CACxB4G,GAAI,SAAU1X,GACV,OAAOujB,OAAOnO,KAAKsD,MAAM1Y,MAIjC,OADAmvB,EAAaG,EAAa/wB,YAAYy1B,EAAW9B,EAAQnuB,EAAQ+M,IAIrE,SAAS+jB,KACL,IAAI5S,EAAO+M,EAAW9M,wBAClB4S,EAAO,SAAW,CAAC,QAAS,UAAUn1B,EAAQ0sB,KAClD,OAAuB,IAAhB1sB,EAAQ0sB,IAAYpK,EAAK8S,OAAS/F,EAAW8F,GAAO7S,EAAK+S,QAAUhG,EAAW8F,GAGzF,SAASG,GAAYtb,EAAQ7a,EAASsD,EAAU/C,GAG5C,IAAIyS,EAAS,SAAUrS,GACnB,IAAI4M,EAAI6oB,GAASz1B,EAAOJ,EAAKkjB,WAAYljB,EAAKhB,QAAUS,GAGxD,QAAKuN,KAKD2kB,MAAuB3xB,EAAK81B,gBAI5BxR,EAAS2L,EAAc3vB,EAAQkpB,WAAWiB,OAASzqB,EAAK81B,gBAIxDxb,IAAW0V,EAAQlgB,YAAuByC,IAAdvF,EAAE+oB,SAAyB/oB,EAAE+oB,QAAU,MAInE/1B,EAAK4tB,QAAS5gB,EAAE+oB,WAQf1Q,GACDrY,EAAEsV,iBAENtV,EAAEgpB,UAAYhpB,EAAEipB,OAAO31B,EAAQ0sB,UAE/BjqB,EAASiK,EAAGhN,KAGZk2B,EAAU,GAMd,OAJA5b,EAAO1M,MAAM,KAAKnP,SAAQ,SAAU03B,GAChC12B,EAAQc,iBAAiB41B,EAAW1jB,IAAQ4S,GAAkB,CAAE+Q,SAAS,IACzEF,EAAQt0B,KAAK,CAACu0B,EAAW1jB,OAEtByjB,EAGX,SAASL,GAAS7oB,EAAGkW,EAAYmT,GAI7B,IAAIC,EAAoC,IAA5BtpB,EAAEnG,KAAKE,QAAQ,SACvBwvB,EAAoC,IAA5BvpB,EAAEnG,KAAKE,QAAQ,SACvByvB,EAAwC,IAA9BxpB,EAAEnG,KAAKE,QAAQ,WACzBmX,EAAI,EACJC,EAAI,EAQR,GANoC,IAAhCnR,EAAEnG,KAAKE,QAAQ,eACfyvB,GAAU,GAKC,cAAXxpB,EAAEnG,OAAyBmG,EAAE+oB,UAAY/oB,EAAEypB,QAC3C,OAAO,EAGX,GAAIH,EAAO,CAEP,IAAII,EAAkB,SAAUC,GAC5B,IAAI33B,EAAS23B,EAAW33B,OACxB,OAAQA,IAAWq3B,GACfA,EAAY9R,SAASvlB,IACpBgO,EAAE4pB,UAAY5pB,EAAE6pB,eAAehc,UAAYwb,GAIpD,GAAe,eAAXrpB,EAAEnG,KAAuB,CACzB,IAAIiwB,EAAgB3wB,MAAMgE,UAAUzF,OAAOiW,KAAK3N,EAAEypB,QAASC,GAE3D,GAAII,EAAcn0B,OAAS,EACvB,OAAO,EAEXub,EAAI4Y,EAAc,GAAGC,MACrB5Y,EAAI2Y,EAAc,GAAGE,UAEpB,CAED,IAAIC,EAAc9wB,MAAMgE,UAAU+sB,KAAKvc,KAAK3N,EAAEmqB,eAAgBT,GAE9D,IAAKO,EACD,OAAO,EAEX/Y,EAAI+Y,EAAYF,MAChB5Y,EAAI8Y,EAAYD,OAWxB,OARA9T,EAAaA,GAAcC,EAAcqN,IACrC+F,GAASC,KACTtY,EAAIlR,EAAEoqB,QAAUlU,EAAWhF,EAC3BC,EAAInR,EAAEqqB,QAAUnU,EAAW/E,GAE/BnR,EAAEkW,WAAaA,EACflW,EAAEipB,OAAS,CAAC/X,EAAGC,GACfnR,EAAEsqB,OAASf,GAASC,EACbxpB,EAGX,SAASuqB,GAAsBvB,GAC3B,IACIwB,EAAuB,KADZxB,EAAYtT,EAAOiN,EAAYrvB,EAAQ0sB,MACpBwI,KAKlC,OADAgC,EAAWvc,EAAMuc,GACVl3B,EAAQmtB,IAAM,IAAM+J,EAAWA,EAG1C,SAASC,GAAiBC,GACtB,IAAIC,EAAqB,IACrB3G,GAAe,EAkBnB,OAjBApB,EAAcnxB,SAAQ,SAAUkrB,EAAQ7iB,GAEpC,IAAI+qB,EAAiB/qB,GAArB,CAGA,IAAI8wB,EAAiBxH,EAAgBtpB,GACjC+wB,EAA2B9hB,KAAKK,IAAIwhB,EAAiBF,IAI1CG,EAA2BF,GACtBE,GAA4BF,GAAsBD,EAAkBE,GAHzC,MAA7BC,GAA2D,MAAvBF,KAKlD3G,EAAelqB,EACf6wB,EAAqBE,OAGtB7G,EAGX,SAAS8G,GAAc13B,EAAOJ,GACP,aAAfI,EAAMyG,MACoB,SAA1BzG,EAAMpB,OAAO+4B,UACW,OAAxB33B,EAAM43B,eACNC,GAAS73B,EAAOJ,GAIxB,SAASk4B,GAAU93B,EAAOJ,GAMtB,IAAgD,IAA5CiI,UAAUsV,WAAWxW,QAAQ,WAAsC,IAAlB3G,EAAM21B,SAA0C,IAAzB/1B,EAAKm4B,gBAC7E,OAAOF,GAAS73B,EAAOJ,GAG3B,IAAIo4B,GAAY93B,EAAQmtB,KAAO,EAAI,IAAMrtB,EAAM41B,UAAYh2B,EAAKq4B,gBAGhEC,GAAYF,EAAW,EADI,IAAXA,EAAkBp4B,EAAKw1B,SACHx1B,EAAKu4B,UAAWv4B,EAAKw4B,cAAex4B,EAAKwI,SAGjF,SAASyvB,GAAS73B,EAAOJ,GAEjBA,EAAK2pB,SACL9F,EAAY7jB,EAAK2pB,OAAQrpB,EAAQkpB,WAAWkB,QAC5C4F,GAA4B,GAGhCtwB,EAAKy4B,UAAUh6B,SAAQ,SAAUwF,GAC7BwsB,EAAsBjwB,oBAAoByD,EAAE,GAAIA,EAAE,OAErB,IAA7BqsB,IAEAzM,EAAYoM,EAAc3vB,EAAQkpB,WAAWgB,MAC7CkO,KAEIt4B,EAAMk3B,SACN5G,EAAWvB,MAAMmI,OAAS,GAC1B5G,EAAWlwB,oBAAoB,cAAe8hB,KAGtDtiB,EAAKw4B,cAAc/5B,SAAQ,SAAUuyB,GACjC2H,GAAU,SAAU3H,GACpB2H,GAAU,MAAO3H,GACjB2H,GAAU,MAAO3H,MAIzB,SAAS4H,GAAWx4B,EAAOJ,GAEvB,IAAIA,EAAKw4B,cAAcK,KAAKhH,GAA5B,CAGA,IAAIlI,EAC8B,IAA9B3pB,EAAKw4B,cAAc71B,SAEnBgnB,EADmBiG,EAAc5vB,EAAKw4B,cAAc,IAC9BlyB,SAAS,GAC/BgqB,GAA4B,EAE5B1M,EAAS+F,EAAQrpB,EAAQkpB,WAAWkB,SAGxCtqB,EAAM04B,kBAEN,IAAIL,EAAY,GAEZM,EAAYnD,GAAY5F,EAAQ9K,KAAMuL,EAAuByH,GAAW,CAGxEl5B,OAAQoB,EAAMpB,OACd2qB,OAAQA,EACRnhB,QAASxI,EAAKwI,QACdiwB,UAAWA,EACXJ,eAAgBj4B,EAAM41B,UACtBR,SAAUA,KACVtS,WAAY9iB,EAAM8iB,WAClBsV,cAAex4B,EAAKw4B,cACpBL,gBAAiB/3B,EAAM21B,QACvBwC,UAAWnI,EAAgBhb,UAE3B4jB,EAAWpD,GAAY5F,EAAQxX,IAAKiY,EAAuBwH,GAAU,CACrEj5B,OAAQoB,EAAMpB,OACd2qB,OAAQA,EACR8O,UAAWA,EACX3C,aAAa,EACb0C,cAAex4B,EAAKw4B,gBAEpBS,EAAWrD,GAAY,WAAYnF,EAAuBqH,GAAe,CACzE94B,OAAQoB,EAAMpB,OACd2qB,OAAQA,EACR8O,UAAWA,EACX3C,aAAa,EACb0C,cAAex4B,EAAKw4B,gBAIxBC,EAAU72B,KAAKuW,MAAMsgB,EAAWM,EAAUG,OAAOF,EAAUC,IAGvD74B,EAAMk3B,SAEN5G,EAAWvB,MAAMmI,OAAS9F,iBAAiBpxB,EAAMpB,QAAQs4B,OAErD1H,EAAcjtB,OAAS,GACvBihB,EAASqM,EAAc3vB,EAAQkpB,WAAWgB,MAQ9CkG,EAAWnwB,iBAAiB,cAAe+hB,GAAgB,IAE/DtiB,EAAKw4B,cAAc/5B,SAAQ,SAAUuyB,GACjC2H,GAAU,QAAS3H,OAI3B,SAASmI,GAAS/4B,GAEdA,EAAM04B,kBACN,IAAItB,EAAWD,GAAsBn3B,EAAM41B,WACvChF,EAAeyG,GAAiBD,IAEf,IAAjBxG,IAKC1wB,EAAQga,OAAOuM,MAChBnD,EAAYuM,EAAc3vB,EAAQkpB,WAAWiB,IAAKnqB,EAAQusB,mBAE9DuM,GAAUpI,EAAcwG,GAAU,GAAM,GACxCkB,KACAC,GAAU,QAAS3H,GAAc,GACjC2H,GAAU,SAAU3H,GAAc,GAC7B1wB,EAAQga,OAAOuM,KAKhB+R,GAAWx4B,EAAO,CAAEo4B,cAAe,CAACxH,MAJpC2H,GAAU,SAAU3H,GAAc,GAClC2H,GAAU,MAAO3H,GAAc,KAOvC,SAASqI,GAAWj5B,GAChB,IAAIo3B,EAAWD,GAAsBn3B,EAAM41B,WACvC3d,EAAK6X,EAAevJ,QAAQ6Q,GAC5B72B,EAAQuvB,EAAexJ,aAAarO,GACxCha,OAAOgJ,KAAKkpB,GAAc9xB,SAAQ,SAAU66B,GACpC,UAAYA,EAAY1rB,MAAM,KAAK,IACnC2iB,EAAa+I,GAAa76B,SAAQ,SAAUsE,GACxCA,EAAS4X,KAAK4e,GAAY54B,SAO1C,SAASswB,GAAa7wB,EAAO4wB,GACzB,GAAIW,KAAsBE,EAAiBb,GACvC,OAAO,EAEX,IAAIwI,EAAiB,CAAC,OAAQ,SAC1BC,EAAe,CAAC,OAAQ,MACxBC,EAAgB,CAAC,WAAY,UAC7BC,EAAW,CAAC,OAAQ,OACpBr5B,EAAQmtB,MAAQntB,EAAQ0sB,IAExBwM,EAAeI,UAEVt5B,EAAQ0sB,MAAQ1sB,EAAQmtB,MAE7BgM,EAAaG,UACbF,EAAcE,WAGlB,IAWIvhB,EAXAqE,EAAMtc,EAAMsc,IAAI/P,QAAQ,QAAS,IACjCktB,EAAcnd,IAAQgd,EAAc,GACpCI,EAAYpd,IAAQgd,EAAc,GAClCrR,EAAS3L,IAAQ+c,EAAa,IAAM/c,IAAQ8c,EAAe,IAAMK,EACjEE,EAAOrd,IAAQ+c,EAAa,IAAM/c,IAAQ8c,EAAe,IAAMM,EAC/DE,EAAQtd,IAAQid,EAAS,GACzBM,EAAQvd,IAAQid,EAAS,GAC7B,KAAKtR,GAAW0R,GAASC,GAAUC,GAC/B,OAAO,EAIX,GAFA75B,EAAMkiB,iBAEFyX,GAAQ1R,EAAQ,CAChB,IAAIV,EAAYU,EAAS,EAAI,EAEzBI,EADQyR,GAAsBlJ,GACjBrJ,GAEjB,GAAa,OAATc,EACA,OAAO,GAGE,IAATA,IACAA,EAAOyH,EAAe9H,eAAegI,EAAgBY,GAAe3I,EAAQ/nB,EAAQ8rB,sBAGpF3D,GADAqR,GAAaD,EACLv5B,EAAQ0rB,uBAGR1rB,EAAQ4rB,mBAGpBzD,EAAO1S,KAAKC,IAAIyS,EAAM,MAEtBA,GAAQJ,GAAU,EAAI,EACtBhQ,EAAK8X,EAAaa,GAAgBvI,OAIlCpQ,EAFK4hB,EAEA35B,EAAQgsB,SAAShG,KAAKhmB,EAAQgsB,SAAShG,KAAK3jB,OAAS,GAIrDrC,EAAQgsB,SAAShG,KAAK,GAO/B,OALA8S,GAAUpI,EAAcd,EAAe7J,WAAWhO,IAAK,GAAM,GAC7DsgB,GAAU,QAAS3H,GACnB2H,GAAU,SAAU3H,GACpB2H,GAAU,SAAU3H,GACpB2H,GAAU,MAAO3H,IACV,EAGX,SAASmJ,GAAiBnL,GAEjBA,EAAUrB,OACXiC,EAAcnxB,SAAQ,SAAUkrB,EAAQ7iB,GAGpC8uB,GAAY5F,EAAQlgB,MAAO6Z,EAAOrjB,SAAS,GAAIsyB,GAAY,CACvDJ,cAAe,CAAC1xB,QAKxBkoB,EAAUvE,KACVmL,GAAY5F,EAAQlgB,MAAO6f,EAAYwJ,GAAU,IAGjDnK,EAAUpB,OACVgI,GAAY5F,EAAQ9K,KAAMyK,EAAY0J,GAAY,CAC9CzL,OAAO,IAIXoB,EAAUxE,MACVqF,EAAepxB,SAAQ,SAAU+J,EAAS1B,GACtC,IAAgB,IAAZ0B,GAA+B,IAAV1B,GAAeA,IAAU+oB,EAAeltB,OAAS,EAA1E,CAGA,IAAIy3B,EAAexK,EAAc9oB,EAAQ,GACrCuzB,EAAczK,EAAc9oB,GAC5BwzB,EAAe,CAAC9xB,GAChB+xB,EAAgB,CAACH,EAAcC,GAC/BG,EAAsB,CAAC1zB,EAAQ,EAAGA,GACtC8c,EAASpb,EAASlI,EAAQkpB,WAAWe,WAKjCyE,EAAUrB,QACV2M,EAAa14B,KAAKw4B,EAAa9zB,SAAS,IACxCg0B,EAAa14B,KAAKy4B,EAAY/zB,SAAS,KAEvC0oB,EAAUlB,UACVyM,EAAgB3K,EAChB4K,EAAsBnK,GAE1BiK,EAAa77B,SAAQ,SAAUg8B,GAC3B7E,GAAY5F,EAAQlgB,MAAO2qB,EAAa7B,GAAY,CAChDpM,QAAS+N,EACT/B,cAAegC,EACfhyB,QAASA,WAO7B,SAASwpB,GAAU0I,EAAiB33B,GAChCwtB,EAAamK,GAAmBnK,EAAamK,IAAoB,GACjEnK,EAAamK,GAAiB94B,KAAKmB,GAEG,WAAlC23B,EAAgB9sB,MAAM,KAAK,IAC3BgiB,EAAcnxB,SAAQ,SAAUI,EAAGiI,GAC/B6xB,GAAU,SAAU7xB,MAIhC,SAAS6zB,GAAoBC,GACzB,OAAOA,IAAclP,EAAkBE,MAAQgP,IAAclP,EAAkBC,SAGnF,SAASoG,GAAY2I,GACjB,IAAIt6B,EAAQs6B,GAAmBA,EAAgB9sB,MAAM,KAAK,GACtDgtB,EAAYx6B,EAAQs6B,EAAgBG,UAAUz6B,EAAMuC,QAAU+3B,EAClEr8B,OAAOgJ,KAAKkpB,GAAc9xB,SAAQ,SAAUqY,GACxC,IAAIgkB,EAAShkB,EAAKlJ,MAAM,KAAK,GACzBmtB,EAAajkB,EAAK+jB,UAAUC,EAAOn4B,QACjCvC,GAASA,IAAU06B,GAAaF,GAAaA,IAAcG,GAExDJ,GAAoBI,IAAeH,IAAcG,UAC3CxK,EAAazZ,MAMpC,SAAS6hB,GAAUxC,EAAWnF,EAAcvG,GACxCpsB,OAAOgJ,KAAKkpB,GAAc9xB,SAAQ,SAAU66B,GACxC,IAAI0B,EAAY1B,EAAY1rB,MAAM,KAAK,GACnCuoB,IAAc6E,GACdzK,EAAa+I,GAAa76B,SAAQ,SAAUsE,GACxCA,EAAS4X,KAET4e,GAEApJ,EAAa1rB,IAAInE,EAAQmR,OAAO4G,IAEhC2Y,EAEAb,EAAa/a,QAEbqV,IAAO,EAEP2F,EAAgBhb,QAEhBmkB,UAMhB,SAASjH,GAAoB2I,EAAWjK,EAAc3Y,EAAI6iB,EAAcC,EAAaC,GACjF,IAAIC,EA0CJ,OAvCIzL,EAAcjtB,OAAS,IAAMrC,EAAQga,OAAOuT,gBACxCqN,GAAgBlK,EAAe,IAC/BqK,EAAWnL,EAAexI,oBAAoBuT,EAAUjK,EAAe,GAAI1wB,EAAQ4sB,QAAQ,GAC3F7U,EAAKtC,KAAKC,IAAIqC,EAAIgjB,IAElBF,GAAenK,EAAepB,EAAcjtB,OAAS,IACrD04B,EAAWnL,EAAexI,oBAAoBuT,EAAUjK,EAAe,GAAI1wB,EAAQ4sB,QAAQ,GAC3F7U,EAAKtC,KAAKwC,IAAIF,EAAIgjB,KAMtBzL,EAAcjtB,OAAS,GAAKrC,EAAQ2a,QAChCigB,GAAgBlK,EAAe,IAC/BqK,EAAWnL,EAAexI,oBAAoBuT,EAAUjK,EAAe,GAAI1wB,EAAQ2a,OAAO,GAC1F5C,EAAKtC,KAAKwC,IAAIF,EAAIgjB,IAElBF,GAAenK,EAAepB,EAAcjtB,OAAS,IACrD04B,EAAWnL,EAAexI,oBAAoBuT,EAAUjK,EAAe,GAAI1wB,EAAQ2a,OAAO,GAC1F5C,EAAKtC,KAAKC,IAAIqC,EAAIgjB,KAKtB/6B,EAAQ+sB,UACa,IAAjB2D,IACAqK,EAAWnL,EAAexI,oBAAoB,EAAGpnB,EAAQ+sB,QAAQ,IAAI,GACrEhV,EAAKtC,KAAKC,IAAIqC,EAAIgjB,IAElBrK,IAAiBpB,EAAcjtB,OAAS,IACxC04B,EAAWnL,EAAexI,oBAAoB,IAAKpnB,EAAQ+sB,QAAQ,IAAI,GACvEhV,EAAKtC,KAAKwC,IAAIF,EAAIgjB,QAK1BhjB,EAAK4C,EAFL5C,EAAK6X,EAAevJ,QAAQtO,OAIjB4iB,EAAUjK,KAAkBoK,IAGhC/iB,EAGX,SAASijB,GAAYC,EAAG18B,GACpB,IAAImF,EAAI1D,EAAQ0sB,IAChB,OAAQhpB,EAAInF,EAAI08B,GAAK,MAAQv3B,EAAIu3B,EAAI18B,GAIzC,SAASy5B,GAAYkD,EAAQhE,EAAUe,EAAWC,EAAehwB,GAC7D,IAAIizB,EAAYlD,EAAUnjB,QAEtBsmB,EAAclD,EAAc,GAC5B15B,EAAI,EAAE08B,EAAQA,GACdG,EAAI,CAACH,GAASA,GAElBhD,EAAgBA,EAAcpjB,QAG1BomB,GACAhD,EAAcoB,UAGdpB,EAAc71B,OAAS,EACvB61B,EAAc/5B,SAAQ,SAAUuyB,EAAchtB,GAC1C,IAAIqU,EAAKia,GAAoBmJ,EAAWzK,EAAcyK,EAAUzK,GAAgBwG,EAAU14B,EAAEkF,GAAI23B,EAAE33B,IAAI,IAE3F,IAAPqU,EACAmf,EAAW,GAGXA,EAAWnf,EAAKojB,EAAUzK,GAC1ByK,EAAUzK,GAAgB3Y,MAMlCvZ,EAAI68B,EAAI,EAAC,GAEb,IAAI/uB,GAAQ,EAEZ4rB,EAAc/5B,SAAQ,SAAUuyB,EAAchtB,GAC1C4I,EAAQwsB,GAAUpI,EAAcuH,EAAUvH,GAAgBwG,EAAU14B,EAAEkF,GAAI23B,EAAE33B,KAAO4I,KAGnFA,IACA4rB,EAAc/5B,SAAQ,SAAUuyB,GAC5B2H,GAAU,SAAU3H,GACpB2H,GAAU,QAAS3H,MAGRze,MAAX/J,GACAmwB,GAAU,OAAQ+C,IAQ9B,SAASE,GAAmB/8B,EAAGC,GAC3B,OAAOwB,EAAQmtB,IAAM,IAAM5uB,EAAIC,EAAID,EAGvC,SAASg9B,GAAqB7K,EAAc3Y,GAExC+X,EAAgBY,GAAgB3Y,EAEhC8X,EAAaa,GAAgBd,EAAexJ,aAAarO,GACzD,IACIyjB,EAAgB,aAAeR,GADjBM,GAAmBvjB,EAAI,GAAKsY,EACe,IAAK,KAAO,IACzEf,EAAcoB,GAAc7B,MAAM7uB,EAAQivB,eAAiBuM,EAC3DC,GAAc/K,GACd+K,GAAc/K,EAAe,GAKjC,SAAS0H,KACLrI,EAAoB5xB,SAAQ,SAAUuyB,GAClC,IAAIvD,EAAM2C,EAAgBY,GAAgB,IAAM,EAAI,EAChDgL,EAAS,GAAKpM,EAAcjtB,OAAS8qB,EAAMuD,GAC/CpB,EAAcoB,GAAc7B,MAAM6M,OAAS9X,OAAO8X,MAK1D,SAAS5C,GAAUpI,EAAc3Y,EAAI6iB,EAAcC,EAAac,GAI5D,OAHKA,IACD5jB,EAAKia,GAAoBlC,EAAiBY,EAAc3Y,EAAI6iB,EAAcC,GAAa,KAEhF,IAAP9iB,IAGJwjB,GAAqB7K,EAAc3Y,IAC5B,GAGX,SAAS0jB,GAAcj1B,GAEnB,GAAK+oB,EAAe/oB,GAApB,CAGA,IAAIP,EAAI,EACJ21B,EAAI,IACM,IAAVp1B,IACAP,EAAI6pB,EAAgBtpB,EAAQ,IAE5BA,IAAU+oB,EAAeltB,OAAS,IAClCu5B,EAAI9L,EAAgBtpB,IAMxB,IAAIq1B,EAAeD,EAAI31B,EACnBu1B,EAAgB,aAAeR,GAAYM,GAAmBr1B,EAAG41B,GAAgB,IAAK,KAAO,IAC7FC,EAAY,SAAWd,GAAYa,EAAe,IAAK,KAAO,IAClEtM,EAAe/oB,GAAOqoB,MAAM7uB,EAAQivB,eAChCuM,EAAgB,IAAMM,GAG9B,SAASC,GAAehkB,EAAI2Y,GAGxB,OAAW,OAAP3Y,IAAsB,IAAPA,QAAuB9F,IAAP8F,EACxB+X,EAAgBY,IAGT,iBAAP3Y,IACPA,EAAK6L,OAAO7L,KAGL,KADXA,EAAK/X,EAAQmR,OAAOrL,KAAKiS,MAErBA,EAAK6X,EAAe7J,WAAWhO,KAGxB,IAAPA,GAAgBP,MAAMO,GACf+X,EAAgBY,GAEpB3Y,GAGX,SAASikB,GAASC,EAAOC,EAAcP,GACnC,IAAIhK,EAASnO,EAAQyY,GACjBE,OAAgClqB,IAAvB6d,EAAgB,GAE7BoM,OAAgCjqB,IAAjBiqB,GAAoCA,EAG/Cl8B,EAAQqsB,UAAY8P,GACpB/Y,EAAYuM,EAAc3vB,EAAQkpB,WAAWiB,IAAKnqB,EAAQusB,mBAG9DwD,EAAoB5xB,SAAQ,SAAUuyB,GAClCoI,GAAUpI,EAAcqL,GAAepK,EAAOjB,GAAeA,IAAe,GAAM,EAAOiL,MAE7F,IAAIn5B,EAAmC,IAA/ButB,EAAoB1tB,OAAe,EAAI,EAE/C,GAAI85B,GAAUvM,EAAenH,cACzBkT,GAAa,EACb7L,EAAgB,GAAK,EACjBC,EAAoB1tB,OAAS,GAAG,CAChC,IAAI+5B,EAAU,KAAOrM,EAAoB1tB,OAAS,GAClD0tB,EAAoB5xB,SAAQ,SAAUuyB,GAClCZ,EAAgBY,GAAgBA,EAAe0L,KAM3D,KAAO55B,EAAIutB,EAAoB1tB,SAAUG,EACrCutB,EAAoB5xB,SAAQ,SAAUuyB,GAClCoI,GAAUpI,EAAcZ,EAAgBY,IAAe,GAAM,EAAMiL,MAG3EvD,KACArI,EAAoB5xB,SAAQ,SAAUuyB,GAClC2H,GAAU,SAAU3H,GAES,OAAzBiB,EAAOjB,IAA0BwL,GACjC7D,GAAU,MAAO3H,MAK7B,SAAS2L,GAAWH,GAChBF,GAASh8B,EAAQwP,MAAO0sB,GAG5B,SAASI,GAAe5L,EAAcrwB,EAAO67B,EAAcP,GAGvD,MADAjL,EAAe7H,OAAO6H,KACA,GAAKA,EAAeX,EAAoB1tB,QAC1D,MAAM,IAAInB,MAAM,2CAA6CwvB,GAIjEoI,GAAUpI,EAAcqL,GAAe17B,EAAOqwB,IAAe,GAAM,EAAMiL,GACzEtD,GAAU,SAAU3H,GAChBwL,GACA7D,GAAU,MAAO3H,GAIzB,SAAS6L,GAAS3K,GAEd,QADkB,IAAdA,IAAwBA,GAAY,GACpCA,EAEA,OAA+B,IAAxB/B,EAAaxtB,OAAewtB,EAAa,GAAKA,EAAa/a,MAAM,GAE5E,IAAI6c,EAAS9B,EAAa1rB,IAAInE,EAAQmR,OAAO4G,IAE7C,OAAsB,IAAlB4Z,EAAOtvB,OACAsvB,EAAO,GAEXA,EAGX,SAAS6K,KAOL,IALA/K,GAAYrG,EAAkBE,MAC9BmG,GAAYrG,EAAkBC,UAC9BttB,OAAOgJ,KAAK/G,EAAQkpB,YAAY/qB,SAAQ,SAAUie,GAC9CmH,EAAYoM,EAAc3vB,EAAQkpB,WAAW9M,OAE1CuT,EAAayB,YAChBzB,EAAazwB,YAAYywB,EAAayB,mBAEnCzB,EAAa8M,WAExB,SAAS7C,GAAsBlJ,GAC3B,IAAI9b,EAAWkb,EAAgBY,GAC3BgM,EAAc9M,EAAe5H,eAAepT,GAC5CvU,EAAQwvB,EAAaa,GACrBoC,EAAY4J,EAAYrU,SAASF,KACjCwU,EAAY,KAEhB,GAAI38B,EAAQumB,KACR,MAAO,CACHlmB,EAAQq8B,EAAYzU,WAAWC,YAAc,KAC7CwU,EAAYpU,UAAUJ,WAAa7nB,GAAS,OAKlC,IAAdyyB,GACIzyB,EAAQyyB,EAAY4J,EAAYpU,UAAUJ,aAC1C4K,EAAY4J,EAAYpU,UAAUJ,WAAa7nB,GAKnDs8B,EADAt8B,EAAQq8B,EAAYrU,SAASH,WACjBwU,EAAYrU,SAASF,MAEI,IAAhCuU,EAAYzU,WAAWE,MAKhB9nB,EAAQq8B,EAAYzU,WAAWG,YAG9B,MAAbxT,EACAke,EAAY,KAEM,IAAble,IACL+nB,EAAY,MAGhB,IAAInU,EAAeoH,EAAerH,oBAQlC,OANkB,OAAduK,IAAoC,IAAdA,IACtBA,EAAYjK,OAAOiK,EAAU9J,QAAQR,KAEvB,OAAdmU,IAAoC,IAAdA,IACtBA,EAAY9T,OAAO8T,EAAU3T,QAAQR,KAElC,CAACmU,EAAW7J,GAGvB,SAAS8J,KACL,OAAO7M,EAAoB5rB,IAAIy1B,IAGnC,SAASiD,GAAcC,EAAiBZ,GAIpC,IAAIjB,EAAIsB,KACJQ,EAAa,CACb,SACA,QACA,UACA,QACA,UACA,OACA,OACA,SACA,OACA,YAGJA,EAAW5+B,SAAQ,SAAUiB,QAEK6S,IAA1B6qB,EAAgB19B,KAChBgwB,EAAgBhwB,GAAQ09B,EAAgB19B,OAGhD,IAAI49B,EAAa1O,GAAYc,GAE7B2N,EAAW5+B,SAAQ,SAAUiB,QACK6S,IAA1B6qB,EAAgB19B,KAChBY,EAAQZ,GAAQ49B,EAAW59B,OAGnCwwB,EAAiBoN,EAAWhR,SAE5BhsB,EAAQ4sB,OAASoQ,EAAWpQ,OAC5B5sB,EAAQ2a,MAAQqiB,EAAWriB,MAC3B3a,EAAQ+sB,QAAUiQ,EAAWjQ,QAEzB/sB,EAAQsqB,KACRA,GAAKtqB,EAAQsqB,MAGb2K,IAGAj1B,EAAQqrB,SACRA,IAGAmG,IAGJ1B,EAAkB,GAClBkM,GAASja,EAAM+a,EAAgBttB,OAASstB,EAAgBttB,MAAQyrB,EAAGiB,GAGvE,SAASe,KAGL5N,EAAa4B,EAAUtB,GACvBmB,EAAY9wB,EAAQkI,QAASmnB,GAE7BwK,GAAiB75B,EAAQga,QAEzBgiB,GAASh8B,EAAQwP,OACbxP,EAAQsqB,MACRA,GAAKtqB,EAAQsqB,MAEbtqB,EAAQqrB,UACRA,IAEJC,IAEJ2R,KACA,IAAIhE,GAAa,CACbuD,QAASA,GACTjkB,MAAOqkB,GACP7iB,GAAI2X,GACJzX,IAAKwX,GACLvM,IAAKqX,GACLW,IAAKlB,GACLlD,UAAWwD,GACX5hB,MAAO2hB,GAEPc,cAAe,SAAUjC,EAAQhE,EAAUgB,GACvCF,GAAYkD,EAAQhE,EAAUpH,EAAiBoI,IAEnDl4B,QAASovB,EACTyN,cAAeA,GACfn+B,OAAQixB,EACRsF,WAAYA,EACZzD,eAAgBA,EAChB4L,aAAc,WACV,OAAOtN,EAAgBhb,SAE3BuoB,YAAa,WACT,OAAO5N,GAEX6N,WAAY,WACR,OAAOhO,GAEXhF,KAAMA,IAEV,OAAO2O,GAGX,SAASsE,GAAW7+B,EAAQ0wB,GACxB,IAAK1wB,IAAWA,EAAO+4B,SACnB,MAAM,IAAIv2B,MAAM,sDAAwDxC,GAG5E,GAAIA,EAAO+9B,WACP,MAAM,IAAIv7B,MAAM,+CAGpB,IACIs8B,EAAMrO,GAAMzwB,EADF4vB,GAAYc,GACOA,GAEjC,OADA1wB,EAAO+9B,WAAae,EACbA,EAEX,IAAIC,GAAa,CAEbC,WAAYhX,EAGZwC,WAAYA,EACZlrB,OAAQu/B,IAGZngB,EAAQpf,OAASu/B,GACjBngB,EAAQ8L,WAAaA,EACrB9L,EAAiB,QAAIqgB,GAErB1/B,OAAOknB,eAAe7H,EAAS,aAAc,CAAE/c,OAAO,IA5rESs9B,CAAQvgB,0ECoCnDwgB,EAAA36B,KAAW,GAAC,GAAM46B,EAAA56B,KAAW,GAAC,iFAJ9C,6BAAqB,+CAIS,kBAAkB,kNANxDpE,EAWMH,EAAAo/B,EAAAh/B,GAVJL,EAEMq/B,EAAA1c,GADJ3iB,EAAkC2iB,EAAA2c,oCAGpCt/B,EAGMq/B,EAAAE,GAFJv/B,EAA8Du/B,EAAA7c,sCAC9D1iB,EAAuBu/B,EAAAC,UAGzBx/B,EAAsDq/B,EAAA5c,sCAArB9iB,EAAA6E,OAAAA,EAAK,GAAA4U,MAAAxR,KAAAoR,oCAJhB8b,GAAA,EAAAxwB,IAAA66B,KAAAA,EAAA36B,KAAW,GAAC,KAAAxC,EAAAy9B,EAAAN,KAAMrK,GAAA,EAAAxwB,IAAA86B,KAAAA,EAAA56B,KAAW,GAAC,KAAAxC,EAAA09B,EAAAN,oIA/BzCO,GAAUx3B,SACV4I,GAAK5I,SAEhB3F,GAAO,KACC,MAAAo9B,EAASh/B,SAASi/B,eAAe,UACvC7B,GAAWz+B,OAAOqgC,EAAM,CACpB7uB,MAAO4uB,EACPl2B,QAAU,EAAA,GAAM,GAAO,GACvBigB,KAAM,EACNyE,OAAQ,GACRnH,OACExN,IAAO,GACPvC,IAAO,OAIb2oB,EAAO5B,WAAW1iB,GAAG,UAAW4X,IAC9B4M,EAAA,EAAAH,EAAW,GAAK/wB,SAASskB,EAAO,IAACyM,GACjCG,EAAA,EAAAH,EAAW,GAAK/wB,SAASskB,EAAO,IAACyM,GACjCI,aAAaC,QAAQ,aAAcL,EAAWra,KAAK,6PCTrDllB,EAAeH,EAAA8xB,EAAA1xB,gGAFfD,EAAoBH,EAAA8xB,EAAA1xB,+FAFpBD,EAAmBH,EAAA8xB,EAAA1xB,iFADdmE,EAAQ,GAAAy7B,GAEHz7B,EAAS,GAAA07B,wEAH2F17B,EAAS,QAAC,sFAAzEtC,EAAAygB,EAAA,kBAAAne,MAAYA,EAAS,yBAA0BA,EAAY,+EAF9GpE,EAYMH,EAAAu/B,EAAAn/B,GAXJL,EASMw/B,EAAA9c,GARJ1iB,EAAkI0iB,EAAAC,2CASpI3iB,EAAoDw/B,EAAA/c,iCAAnB9iB,EAAA6E,OAAAA,EAAI,GAAA4U,MAAAxR,KAAAoR,2CAT2ExU,EAAS,SAAxEtC,EAAAygB,EAAA,kBAAAne,MAAYA,EAAS,8BAA0BA,EAAY,gIATjG27B,GAAQh4B,aACRi4B,GAASj4B,gBACTk4B,GAAYl4B,aACZ2C,GAAS3C,QACToF,GAAIpF,iYC+FK3D,EAAS,YAAYA,EAAQ,gBAAgBA,EAAY,aAAaA,EAAS,QAAQA,EAAI,wFAA3FA,EAAS,sBAAYA,EAAQ,yBAAgBA,EAAY,sBAAaA,EAAS,wJAF5EA,EAAU,SAASA,EAAK,wFAAxBA,EAAU,oJAFdA,EAAO,yMADrB,MAAS,SAATA,KAAe,EAED,UAATA,KAAgB,EAEP,QAATA,KAAc,iGAL1BpE,EAQMH,EAAA8xB,EAAA1xB,+ER2+BFsE,EAAS,CACLorB,EAAG,EACH7qB,EAAG,GACHX,EAAGI,iCAIFA,EAAOorB,GACRvwB,EAAQmF,EAAOO,GAEnBP,EAASA,EAAOJ,iKQplClB+G,EAAMA,OAACe,YAAa,EAEhB,IAAAi0B,GAAe,EACf5W,EAAO,OACPiW,EAAU,CAAI,GAAI,KAChB,MAAAtkB,EAAQ0kB,aAAaQ,QAAQ,cAC/BllB,IACFskB,EAAatkB,EAAMxM,MAAM,MAEvB,IAAA/D,EAAY,EACZu1B,GAAe,EACfF,GAAW,EACXC,GAAY,EAEV,MAAAI,MAAsB/3B,EA0CnB,SAAAg4B,EAAKp/B,MACRg/B,EAAY,OAChBP,EAAA,EAAAO,GAAe,OAEXK,EAAuBF,EAAgB/1B,eAAepJ,EAAMpB,OAAO2B,WACvEkJ,EAAY41B,EAAqB51B,iBAC1B0O,EAAKvC,GAAO0oB,EAEf,GAAA70B,EAAYmM,EAAG,CACI,IAAA7E,OACnB,CAAAC,KAAM,yBAECd,OACTuuB,EAAA,EAAAM,GAAY,QACH,GAAAt1B,EAAY0O,EAAG,CACJ,IAAApH,OAClB,CAAAC,KAAM,wBAEAd,OACRuuB,EAAA,EAAAK,GAAW,QAEXL,EAAA,EAAAM,GAAY,GACZN,EAAA,EAAAK,GAAW,GAGbluB,iBACE6tB,EAAA,EAAAO,GAAe,KACd,6CAjEDC,GAAe,QACTE,EAAgB/2B,gBAChB+2B,EAAgBG,wBACtBb,EAAA,EAAApW,EAAO,eACAtb,GACPwyB,MAAMxyB,GAERkyB,GAAe,oBAIfR,EAAA,EAAAh1B,EAAY,GACZg1B,EAAA,EAAAK,GAAW,GACXL,EAAA,EAAAM,GAAY,GACZN,EAAA,EAAApW,EAAO,iBAGC8W,EAAgB52B,wBAAwBC,qBAC9C22B,EAAgB52B,wBAAwBpI,iBAAiB,6BAA8Bi/B,GACvFrmB,kBACEqmB,MACC,WACIryB,GACPwyB,MAAMxyB,GACN0xB,EAAA,EAAApW,EAAO,qCAMD8W,EAAgB52B,wBAAwBQ,oBAC9Co2B,EAAgB52B,wBAAwBnI,oBAAoB,6BAA8Bg/B,SACnFryB,GACPwyB,MAAMxyB,GAER0xB,EAAA,EAAApW,EAAO,kBCzDC,kEAAQ,CAClBzpB,OAAQW,SAASklB"}