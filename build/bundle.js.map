{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/lib/heartRateSensor.js","../../node_modules/howler/dist/howler.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const SERVICE_HEART_RATE = 'heart_rate';\nconst HEART_RATE_CONFIGURATION = 'heart_rate_measurement';\nconst SERVICE_CONFIGURATION = '6217ff4b-fb31-1140-ad5a-a45545d7ecf3';\nconst CHARACTERISTIC_CONFIGURATION = '6217ff4d-91bb-91d0-7e2a-7cd3bda8a1f3';\n\nexport class HeartRateSensor {\n  constructor() {\n    this.device = null;\n    this.server = null;\n    this.serviceHeartRate = null;\n    this.serviceConfiguration = null;\n    this.characteristicConfiguration = null;\n    this._promises = {};\n  }\n\n  async connect() {\n    this.device = await navigator.bluetooth.requestDevice({\n      filters: [{ services: [ SERVICE_HEART_RATE ] }],\n      optionalServices: [ SERVICE_CONFIGURATION ]\n    });\n    this.server = await this.device.gatt.connect();\n    this.serviceHeartRate = await this.server.getPrimaryService(SERVICE_HEART_RATE);\n    this.serviceConfiguration = await this.server.getPrimaryService(SERVICE_CONFIGURATION);\n    this.characteristicConfiguration = await this.serviceConfiguration.getCharacteristic(CHARACTERISTIC_CONFIGURATION);\n    this.characteristicHeartRate = await this.serviceHeartRate.getCharacteristic(HEART_RATE_CONFIGURATION);\n  }\n\n  async enableMultiConnection() {\n    await this.characteristicConfiguration.startNotifications();\n    this.characteristicConfiguration.addEventListener('characteristicvaluechanged', (event) => {\n      const { value } = event.target;\n      const status = value.getUint8(2);\n      if (status === 1) {\n        this._promises.configuration.resolve(value.byteLength === 4 && value.getUint8(3));\n      } else {\n        this._promises.configuration.reject(new Error('Fail!'));\n      }\n    });\n    const multiConnection = await this._getConfiguration(9); // pfcRequestMultiConnectionSetting = 9\n    if (multiConnection === 0) {\n      await this._setConfiguration(8, 1) // pfcConfigureMultiConnection = 8\n    };\n    await this.characteristicConfiguration.stopNotifications();\n  }\n\n  async _getConfiguration(id) {\n    await this.characteristicConfiguration.writeValueWithoutResponse(Uint8Array.of(id));\n    const promise = new Promise((resolve, reject) => {\n      this._promises.configuration = { resolve, reject };\n    });\n    return promise;\n  }\n\n  async _setConfiguration(id, value) {\n    await this.characteristicConfiguration.writeValueWithoutResponse(Uint8Array.of(id, value));\n    const promise = new Promise((resolve, reject) => {\n      this._promises.configuration = { resolve, reject };\n    });\n    return promise;\n  }\n\n  parseHeartRate(value) {\n    // In Chrome 50+, a DataView is returned instead of an ArrayBuffer.\n    value = value.buffer ? value : new DataView(value);\n    let flags = value.getUint8(0);\n    let rate16Bits = flags & 0x1;\n    let result = {};\n    let index = 1;\n    if (rate16Bits) {\n      result.heartRate = value.getUint16(index, /*littleEndian=*/true);\n      index += 2;\n    } else {\n      result.heartRate = value.getUint8(index);\n      index += 1;\n    }\n    let contactDetected = flags & 0x2;\n    let contactSensorPresent = flags & 0x4;\n    if (contactSensorPresent) {\n      result.contactDetected = !!contactDetected;\n    }\n    let energyPresent = flags & 0x8;\n    if (energyPresent) {\n      result.energyExpended = value.getUint16(index, /*littleEndian=*/true);\n      index += 2;\n    }\n    let rrIntervalPresent = flags & 0x10;\n    if (rrIntervalPresent) {\n      let rrIntervals = [];\n      for (; index + 1 < value.byteLength; index += 2) {\n        rrIntervals.push(value.getUint16(index, /*littleEndian=*/true));\n      }\n      result.rrIntervals = rrIntervals;\n    }\n    return result;\n  }\n}\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","<script>\n  import { HeartRateSensor } from './lib/heartRateSensor';\n  import { Howl, Howler } from 'howler';\n  Howler.autoUnlock = false;\n\n  let isConnecting = false;\n  // let tab = 'home';\n  let tab = 'setup';\n  let maxHeartRate = 100;\n  let heartRate = 0;\n  let hearRateBeat = false;\n  let highHearRateBeat = false;\n\n  const heartRateSensor = new HeartRateSensor();\n\n  async function connect() {\n    try {\n      isConnecting = true;\n      await heartRateSensor.connect();\n      await heartRateSensor.enableMultiConnection();\n      tab = 'setup';\n    } catch (err) {\n      alert(err);\n    }\n    isConnecting = false;\n\t}\n\n  async function start() {\n    heartRate = 0;\n    highHearRateBeat = 0;\n    tab = 'run';\n    try {\n      await heartRateSensor.characteristicHeartRate.startNotifications();\n      heartRateSensor.characteristicHeartRate.addEventListener('characteristicvaluechanged', beat);\n    } catch (err) {\n      alert(err);\n      tab = 'home';\n    }\n  }\n\n  async function stop() {\n    try {\n      await heartRateSensor.characteristicHeartRate.stopNotifications();\n      heartRateSensor.characteristicHeartRate.removeEventListener('characteristicvaluechanged', beat);\n    } catch (err) {\n      alert(err);\n    }\n    tab = 'setup';\n  }\n\n  function beat(event) {\n    var heartRateMeasurement = heartRateSensor.parseHeartRate(event.target.value);\n    heartRate = heartRateMeasurement.heartRate;\n    console.log('heartRate', new Date(), heartRate);\n\n    if (heartRate > maxHeartRate) {\n      const beep = new Howl({\n        src: ['sound/beep.mp3']\n      });\n      beep.play();\n      highHearRateBeat = true;\n    } else {\n      highHearRateBeat = false;\n    }\n\n    if (hearRateBeat) return;\n    hearRateBeat = true;\n    setTimeout(() => {\n      hearRateBeat = false;\n    }, 300);\n  }\n</script>\n\n<div class=\"container\">\n\n  {#if tab === 'home'}\n  <div class=\"content\">\n    <div class=\"header\">\n      <h1>Polar H10 zone</h1>\n    </div>\n    {#if isConnecting}\n      <button class=\"button\">Loading...</button>\n    {:else}\n      <button class=\"button\" on:click={connect}>Connect</button>\n    {/if}\n  </div>\n  {:else if tab === 'setup'}\n  <div class=\"content\">\n    <div class=\"header\">\n      <h1>Max ❤️ rate</h1>\n    </div>\n\n    <div class=\"button-group\">\n      <button class=\"button\" on:click={() => maxHeartRate -= 5}>−</button>\n      <div class=\"label\">{maxHeartRate}</div>\n      <button class=\"button\" on:click={() => maxHeartRate += 5}>+</button>\n    </div>\n\n    <button class=\"button\" on:click={start}>Start</button>\n  </div>\n  {:else if tab === 'run'}\n  <div class=\"content\">\n    <div class=\"header\">\n      <div class=\"heartrate\" class:heartrate-high=\"{highHearRateBeat}\" class:heartrate-beat=\"{hearRateBeat}\">{heartRate} BPM</div>\n    </div>\n    <button class=\"button\" on:click={stop}>Stop</button>\n  </div>\n  {/if}\n</div>\n","import './main.scss'\nimport App from './App.svelte';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","$$","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SERVICE_HEART_RATE","SERVICE_CONFIGURATION","HeartRateSensor","constructor","this","device","server","serviceHeartRate","serviceConfiguration","characteristicConfiguration","_promises","async","navigator","bluetooth","requestDevice","filters","services","optionalServices","gatt","connect","getPrimaryService","getCharacteristic","characteristicHeartRate","startNotifications","getUint8","configuration","byteLength","reject","Error","_getConfiguration","_setConfiguration","stopNotifications","id","writeValueWithoutResponse","Uint8Array","of","parseHeartRate","flags","buffer","DataView","result","index","heartRate","getUint16","contactDetected","energyExpended","rrIntervals","HowlerGlobal","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","masterGain","noAudio","usingWebAudio","autoSuspend","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","split","checkSafari","indexOf","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","destination","start","noteOn","resume","onended","disconnect","_emit","_obtainHtml5Audio","testPlay","play","catch","console","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","apply","fade","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","atob","dataView","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","div2","div1","div0","button","div3","button0","button1","button2","create_if_block_1","create_if_block","create_if_block_2","create_if_block_3","div","isConnecting","tab","maxHeartRate","hearRateBeat","highHearRateBeat","heartRateSensor","beat","heartRateMeasurement","log","$$invalidate","enableMultiConnection","alert","$destroy","detaching","d","destroy_component","$on","$set","$$props","obj","$$set","body"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAsRhF,SAASE,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAOhB,EAAMiB,EAAOC,EAASC,GAElC,OADAnB,EAAKoB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMnB,EAAKqB,oBAAoBJ,EAAOC,EAASC,GA8B1D,SAASG,EAAKtB,EAAMuB,EAAWC,GACd,MAATA,EACAxB,EAAKyB,gBAAgBF,GAChBvB,EAAK0B,aAAaH,KAAeC,GACtCxB,EAAK2B,aAAaJ,EAAWC,GAqLrC,SAASI,EAAShB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKiB,YAAchB,IACnBD,EAAKC,KAAOA,GAiGpB,SAASiB,EAAatB,EAASC,EAAMsB,GACjCvB,EAAQwB,UAAUD,EAAS,MAAQ,UAAUtB,GAqNjD,IAAIwB,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAwDxB,MAAMC,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB1D,GACzBoD,EAAiBO,KAAK3D,GAuB1B,MAAM4D,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASC,IACL,MAAMC,EAAkBjB,EACxB,EAAG,CAGC,KAAOe,EAAWZ,EAAiBe,QAAQ,CACvC,MAAMhB,EAAYC,EAAiBY,GACnCA,IACAd,EAAsBC,GACtBiB,EAAOjB,EAAUkB,IAKrB,IAHAnB,EAAsB,MACtBE,EAAiBe,OAAS,EAC1BH,EAAW,EACJX,EAAkBc,QACrBd,EAAkBiB,KAAlBjB,GAIJ,IAAK,IAAIkB,EAAI,EAAGA,EAAIjB,EAAiBa,OAAQI,GAAK,EAAG,CACjD,MAAMC,EAAWlB,EAAiBiB,GAC7BT,EAAeW,IAAID,KAEpBV,EAAeY,IAAIF,GACnBA,KAGRlB,EAAiBa,OAAS,QACrBf,EAAiBe,QAC1B,KAAOZ,EAAgBY,QACnBZ,EAAgBe,KAAhBf,GAEJI,GAAmB,EACnBG,EAAea,QACfzB,EAAsBgB,GAE1B,SAASE,EAAOC,GACZ,GAAoB,OAAhBA,EAAGO,SAAmB,CACtBP,EAAGD,SACH9D,EAAQ+D,EAAGQ,eACX,MAAMC,EAAQT,EAAGS,MACjBT,EAAGS,MAAQ,EAAE,GACbT,EAAGO,UAAYP,EAAGO,SAASG,EAAEV,EAAGW,IAAKF,GACrCT,EAAGY,aAAazE,QAAQoD,IAiBhC,MAAMsB,EAAW,IAAInB,IAotBrB,SAASoB,EAAWhC,EAAWoB,IACI,IAA3BpB,EAAUkB,GAAGS,MAAM,KACnB1B,EAAiBS,KAAKV,GArzBrBQ,IACDA,GAAmB,EACnBH,EAAiB4B,KAAKnB,IAqzBtBd,EAAUkB,GAAGS,MAAMO,KAAK,IAE5BlC,EAAUkB,GAAGS,MAAOP,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASe,EAAKnC,EAAWhB,EAASoD,EAAUC,EAAiBC,EAAWC,EAAOC,EAAeb,EAAQ,EAAE,IACpG,MAAMc,EAAmB3C,EACzBC,EAAsBC,GACtB,MAAMkB,EAAKlB,EAAUkB,GAAK,CACtBO,SAAU,KACVI,IAAK,KAELU,MAAAA,EACAtB,OAAQpE,EACRyF,UAAAA,EACAI,MAAO1F,IAEP2F,SAAU,GACVC,WAAY,GACZC,cAAe,GACfnB,cAAe,GACfI,aAAc,GACdgB,QAAS,IAAIC,IAAI/D,EAAQ8D,UAAYL,EAAmBA,EAAiBvB,GAAG4B,QAAU,KAEtFE,UAAWhG,IACX2E,MAAAA,EACAsB,YAAY,EACZC,KAAMlE,EAAQpB,QAAU6E,EAAiBvB,GAAGgC,MAEhDV,GAAiBA,EAActB,EAAGgC,MAClC,IAAIC,GAAQ,EAkBZ,GAjBAjC,EAAGW,IAAMO,EACHA,EAASpC,EAAWhB,EAAQuD,OAAS,IAAI,CAACnB,EAAGgC,KAAQC,KACnD,MAAMhE,EAAQgE,EAAKrC,OAASqC,EAAK,GAAKD,EAOtC,OANIlC,EAAGW,KAAOS,EAAUpB,EAAGW,IAAIT,GAAIF,EAAGW,IAAIT,GAAK/B,MACtC6B,EAAG+B,YAAc/B,EAAGwB,MAAMtB,IAC3BF,EAAGwB,MAAMtB,GAAG/B,GACZ8D,GACAnB,EAAWhC,EAAWoB,IAEvBgC,KAET,GACNlC,EAAGD,SACHkC,GAAQ,EACRhG,EAAQ+D,EAAGQ,eAEXR,EAAGO,WAAWY,GAAkBA,EAAgBnB,EAAGW,KAC/C7C,EAAQpB,OAAQ,CAChB,GAAIoB,EAAQsE,QAAS,CAEjB,MAAMC,EA91ClB,SAAkBlF,GACd,OAAOmF,MAAMC,KAAKpF,EAAQqF,YA61CJC,CAAS3E,EAAQpB,QAE/BsD,EAAGO,UAAYP,EAAGO,SAASmC,EAAEL,GAC7BA,EAAMlG,QAAQa,QAIdgD,EAAGO,UAAYP,EAAGO,SAASoC,IAE3B7E,EAAQ8E,SApwBGC,EAqwBG/D,EAAUkB,GAAGO,WApwBtBsC,EAAM3C,IACfW,EAASiC,OAAOD,GAChBA,EAAM3C,EAAE6C,KAmqBhB,SAAyBjE,EAAWpC,EAAQI,EAAQkG,GAChD,MAAMzC,SAAEA,EAAQkB,SAAEA,EAAQC,WAAEA,EAAUd,aAAEA,GAAiB9B,EAAUkB,GACnEO,GAAYA,EAAS0C,EAAEvG,EAAQI,GAC1BkG,GAEDzD,GAAoB,KAChB,MAAM2D,EAAiBzB,EAAS0B,IAAIvH,GAAKwH,OAAOhH,GAC5CsF,EACAA,EAAWlC,QAAQ0D,GAKnBjH,EAAQiH,GAEZpE,EAAUkB,GAAGyB,SAAW,MAGhCb,EAAazE,QAAQoD,GA8EjB8D,CAAgBvE,EAAWhB,EAAQpB,OAAQoB,EAAQhB,OAAQgB,EAAQkF,eAEnEpD,IAxwBR,IAAuBiD,EAAOE,EA0wB1BlE,EAAsB0C,GCv2D1B,MAAM+B,EAAqB,aAErBC,EAAwB,uCAGvB,MAAMC,EACXC,cACEC,KAAKC,OAAS,KACdD,KAAKE,OAAS,KACdF,KAAKG,iBAAmB,KACxBH,KAAKI,qBAAuB,KAC5BJ,KAAKK,4BAA8B,KACnCL,KAAKM,UAAY,GAGnBC,gBACEP,KAAKC,aAAeO,UAAUC,UAAUC,cAAc,CACpDC,QAAS,CAAC,CAAEC,SAAU,CAAEhB,KACxBiB,iBAAkB,CAAEhB,KAEtBG,KAAKE,aAAeF,KAAKC,OAAOa,KAAKC,UACrCf,KAAKG,uBAAyBH,KAAKE,OAAOc,kBAAkBpB,GAC5DI,KAAKI,2BAA6BJ,KAAKE,OAAOc,kBAAkBnB,GAChEG,KAAKK,kCAAoCL,KAAKI,qBAAqBa,kBApBlC,wCAqBjCjB,KAAKkB,8BAAgClB,KAAKG,iBAAiBc,kBAvB9B,0BA0B/BV,oCACQP,KAAKK,4BAA4Bc,qBACvCnB,KAAKK,4BAA4BhG,iBAAiB,8BAA+BH,IAC/E,MAAMO,MAAEA,GAAUP,EAAMlB,OAET,IADAyB,EAAM2G,SAAS,GAE5BpB,KAAKM,UAAUe,cAAc1F,QAA6B,IAArBlB,EAAM6G,YAAoB7G,EAAM2G,SAAS,IAE9EpB,KAAKM,UAAUe,cAAcE,OAAO,IAAIC,MAAM,aAI1B,UADMxB,KAAKyB,kBAAkB,UAE7CzB,KAAK0B,kBAAkB,EAAG,SAE5B1B,KAAKK,4BAA4BsB,oBAGzCpB,wBAAwBqB,SAChB5B,KAAKK,4BAA4BwB,0BAA0BC,WAAWC,GAAGH,IAI/E,OAHgB,IAAIlG,SAAQ,CAACC,EAAS4F,KACpCvB,KAAKM,UAAUe,cAAgB,CAAE1F,QAAAA,EAAS4F,OAAAA,MAK9ChB,wBAAwBqB,EAAInH,SACpBuF,KAAKK,4BAA4BwB,0BAA0BC,WAAWC,GAAGH,EAAInH,IAInF,OAHgB,IAAIiB,SAAQ,CAACC,EAAS4F,KACpCvB,KAAKM,UAAUe,cAAgB,CAAE1F,QAAAA,EAAS4F,OAAAA,MAK9CS,eAAevH,GAGb,IAAIwH,GADJxH,EAAQA,EAAMyH,OAASzH,EAAQ,IAAI0H,SAAS1H,IAC1B2G,SAAS,GAEvBgB,EAAS,GACTC,EAAQ,EAFa,EAARJ,GAIfG,EAAOE,UAAY7H,EAAM8H,UAAUF,GAAwB,GAC3DA,GAAS,IAETD,EAAOE,UAAY7H,EAAM2G,SAASiB,GAClCA,GAAS,GAEX,IAAIG,EAA0B,EAARP,EAWtB,GAVmC,EAARA,IAEzBG,EAAOI,kBAAoBA,GAED,EAARP,IAElBG,EAAOK,eAAiBhI,EAAM8H,UAAUF,GAAwB,GAChEA,GAAS,GAEqB,GAARJ,EACD,CACrB,IAAIS,EAAc,GAClB,KAAOL,EAAQ,EAAI5H,EAAM6G,WAAYe,GAAS,EAC5CK,EAAY5G,KAAKrB,EAAM8H,UAAUF,GAAwB,IAE3DD,EAAOM,YAAcA,EAEvB,OAAON;;;;;;;;;;4BCnFX,WAWE,IAAIO,EAAe,WACjB3C,KAAKzC,QAEPoF,EAAaC,UAAY,CAKvBrF,KAAM,WACJ,IAAIsF,EAAO7C,MAAQ8C,EA8BnB,OA3BAD,EAAKE,SAAW,IAGhBF,EAAKG,gBAAkB,GACvBH,EAAKI,cAAgB,GAGrBJ,EAAKK,QAAU,GACfL,EAAKM,OAAS,GACdN,EAAKO,QAAS,EACdP,EAAKQ,QAAU,EACfR,EAAKS,cAAgB,iBACrBT,EAAKU,WAAgC,oBAAXC,QAA0BA,OAAOhD,UAAagD,OAAOhD,UAAY,KAG3FqC,EAAKY,WAAa,KAClBZ,EAAKa,SAAU,EACfb,EAAKc,eAAgB,EACrBd,EAAKe,aAAc,EACnBf,EAAK5F,IAAM,KAGX4F,EAAKgB,YAAa,EAGlBhB,EAAKiB,SAEEjB,GAQTkB,OAAQ,SAASC,GACf,IAAInB,EAAO7C,MAAQ8C,EAQnB,GAPAkB,EAAMC,WAAWD,GAGZnB,EAAK5F,KACRiH,SAGiB,IAARF,GAAuBA,GAAO,GAAKA,GAAO,EAAG,CAItD,GAHAnB,EAAKQ,QAAUW,EAGXnB,EAAKO,OACP,OAAOP,EAILA,EAAKc,eACPd,EAAKY,WAAWU,KAAKC,eAAeJ,EAAKlB,EAAO7F,IAAIoH,aAItD,IAAK,IAAI7H,EAAE,EAAGA,EAAEqG,EAAKM,OAAO/G,OAAQI,IAClC,IAAKqG,EAAKM,OAAO3G,GAAG8H,UAKlB,IAHA,IAAIC,EAAM1B,EAAKM,OAAO3G,GAAGgI,eAGhBC,EAAE,EAAGA,EAAEF,EAAInI,OAAQqI,IAAK,CAC/B,IAAIC,EAAQ7B,EAAKM,OAAO3G,GAAGmI,WAAWJ,EAAIE,IAEtCC,GAASA,EAAME,QACjBF,EAAME,MAAMb,OAASW,EAAMrB,QAAUW,GAM7C,OAAOnB,EAGT,OAAOA,EAAKQ,SAOdwB,KAAM,SAASC,GACb,IAAIjC,EAAO7C,MAAQ8C,EAGdD,EAAK5F,KACRiH,IAGFrB,EAAKO,OAAS0B,EAGVjC,EAAKc,eACPd,EAAKY,WAAWU,KAAKC,eAAeU,EAAQ,EAAIjC,EAAKQ,QAASP,EAAO7F,IAAIoH,aAI3E,IAAK,IAAI7H,EAAE,EAAGA,EAAEqG,EAAKM,OAAO/G,OAAQI,IAClC,IAAKqG,EAAKM,OAAO3G,GAAG8H,UAKlB,IAHA,IAAIC,EAAM1B,EAAKM,OAAO3G,GAAGgI,eAGhBC,EAAE,EAAGA,EAAEF,EAAInI,OAAQqI,IAAK,CAC/B,IAAIC,EAAQ7B,EAAKM,OAAO3G,GAAGmI,WAAWJ,EAAIE,IAEtCC,GAASA,EAAME,QACjBF,EAAME,MAAME,QAAQ,GAAiBJ,EAAMtB,QAMnD,OAAOP,GAMTkC,KAAM,WAIJ,IAHA,IAAIlC,EAAO7C,MAAQ8C,EAGVtG,EAAE,EAAGA,EAAEqG,EAAKM,OAAO/G,OAAQI,IAClCqG,EAAKM,OAAO3G,GAAGuI,OAGjB,OAAOlC,GAOTmC,OAAQ,WAGN,IAFA,IAAInC,EAAO7C,MAAQ8C,EAEVtG,EAAEqG,EAAKM,OAAO/G,OAAO,EAAGI,GAAG,EAAGA,IACrCqG,EAAKM,OAAO3G,GAAGwI,SAUjB,OANInC,EAAKc,eAAiBd,EAAK5F,UAAiC,IAAnB4F,EAAK5F,IAAIgI,QACpDpC,EAAK5F,IAAIgI,QACTpC,EAAK5F,IAAM,KACXiH,KAGKrB,GAQTqC,OAAQ,SAASC,GACf,OAAQnF,MAAQ8C,GAAQI,QAAQiC,EAAIC,QAAQ,MAAO,MAOrDtB,OAAQ,WACN,IAAIjB,EAAO7C,MAAQ8C,EASnB,GANAD,EAAKwC,MAAQxC,EAAK5F,KAAM4F,EAAK5F,IAAIoI,OAAuB,YAGxDxC,EAAKyC,gBAGAzC,EAAKc,cAER,GAAqB,oBAAV4B,MACT,SAIuC,KAH1B,IAAIA,OAGCC,mBACd3C,EAAKS,cAAgB,WAEvB,MAAMmC,GACN5C,EAAKa,SAAU,OAGjBb,EAAKa,SAAU,EAKnB,KACa,IAAI6B,OACNT,QACPjC,EAAKa,SAAU,GAEjB,MAAO+B,IAOT,OAJK5C,EAAKa,SACRb,EAAK6C,eAGA7C,GAOT6C,aAAc,WACZ,IAAI7C,EAAO7C,MAAQ8C,EACf6C,EAAY,KAGhB,IACEA,EAA8B,oBAAVJ,MAAyB,IAAIA,MAAU,KAC3D,MAAOK,GACP,OAAO/C,EAGT,IAAK8C,GAA8C,mBAA1BA,EAAUE,YACjC,OAAOhD,EAGT,IAAIiD,EAAWH,EAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAGhEW,EAAKlD,EAAKU,WAAaV,EAAKU,WAAWyC,UAAY,GACnDC,EAAaF,EAAGG,MAAM,kBACtBC,EAAcF,GAAcG,SAASH,EAAW,GAAGI,MAAM,KAAK,GAAI,IAAM,GACxEC,GAAwC,IAA1BP,EAAGQ,QAAQ,YAA8C,IAA1BR,EAAGQ,QAAQ,UACxDC,EAAgBT,EAAGG,MAAM,mBACzBO,EAAeH,GAAeE,GAAiBJ,SAASI,EAAc,GAAI,IAAM,GAoBpF,OAlBA3D,EAAKK,QAAU,CACbwD,MAASP,IAAeL,IAAYH,EAAUE,YAAY,cAAcT,QAAQ,OAAQ,KACxFuB,OAAQb,EACRc,OAAQjB,EAAUE,YAAY,4BAA4BT,QAAQ,OAAQ,IAC1EyB,MAAOlB,EAAUE,YAAY,8BAA8BT,QAAQ,OAAQ,IAC3E0B,MAAOnB,EAAUE,YAAY,8BAA8BT,QAAQ,OAAQ,IAC3E2B,OAAQpB,EAAUE,YAAY,0BAA4BF,EAAUE,YAAY,cAAcT,QAAQ,OAAQ,IAC9G4B,MAAOrB,EAAUE,YAAY,cAAcT,QAAQ,OAAQ,IAC3D6B,MAAOtB,EAAUE,YAAY,gBAAgBT,QAAQ,OAAQ,IAC7D8B,OAAQvB,EAAUE,YAAY,iBAAmBF,EAAUE,YAAY,eAAiBF,EAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAC7I+B,OAAQxB,EAAUE,YAAY,iBAAmBF,EAAUE,YAAY,eAAiBF,EAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAC7IgC,OAAQzB,EAAUE,YAAY,iBAAmBF,EAAUE,YAAY,eAAiBF,EAAUE,YAAY,eAAeT,QAAQ,OAAQ,IAC7IiC,OAAUZ,IAAed,EAAUE,YAAY,+BAA+BT,QAAQ,OAAQ,KAC9FkC,OAAUb,IAAed,EAAUE,YAAY,+BAA+BT,QAAQ,OAAQ,KAC9FmC,QAAS5B,EAAUE,YAAY,4BAA4BT,QAAQ,OAAQ,IAC3EoC,QAAS7B,EAAUE,YAAY,kBAAoBF,EAAUE,YAAY,gBAAgBT,QAAQ,OAAQ,KAGpGvC,GAST4E,aAAc,WACZ,IAAI5E,EAAO7C,MAAQ8C,EAGnB,IAAID,EAAK6E,gBAAmB7E,EAAK5F,IAAjC,CAIA4F,EAAK6E,gBAAiB,EACtB7E,EAAKgB,YAAa,EAKbhB,EAAK8E,iBAA2C,QAAxB9E,EAAK5F,IAAI2K,aACpC/E,EAAK8E,iBAAkB,EACvB9E,EAAKmC,UAKPnC,EAAKgF,eAAiBhF,EAAK5F,IAAI6K,aAAa,EAAG,EAAG,OAKlD,IAAIC,EAAS,SAAStC,GAOpB,KAAO5C,EAAKG,gBAAgB5G,OAASyG,EAAKI,eACxC,IACE,IAAI+E,EAAY,IAAIzC,MAIpByC,EAAUC,WAAY,EAGtBpF,EAAKqF,mBAAmBF,GACxB,MAAOvC,GACP5C,EAAKa,SAAU,EACf,MAKJ,IAAK,IAAIlH,EAAE,EAAGA,EAAEqG,EAAKM,OAAO/G,OAAQI,IAClC,IAAKqG,EAAKM,OAAO3G,GAAG8H,UAKlB,IAHA,IAAIC,EAAM1B,EAAKM,OAAO3G,GAAGgI,eAGhBC,EAAE,EAAGA,EAAEF,EAAInI,OAAQqI,IAAK,CAC/B,IAAIC,EAAQ7B,EAAKM,OAAO3G,GAAGmI,WAAWJ,EAAIE,IAEtCC,GAASA,EAAME,QAAUF,EAAME,MAAMqD,YACvCvD,EAAME,MAAMqD,WAAY,EACxBvD,EAAME,MAAMuD,QAOpBtF,EAAKuF,cAGL,IAAIC,EAASxF,EAAK5F,IAAIqL,qBACtBD,EAAOnG,OAASW,EAAKgF,eACrBQ,EAAOtH,QAAQ8B,EAAK5F,IAAIsL,kBAGI,IAAjBF,EAAOG,MAChBH,EAAOI,OAAO,GAEdJ,EAAOG,MAAM,GAIgB,mBAApB3F,EAAK5F,IAAIyL,QAClB7F,EAAK5F,IAAIyL,SAIXL,EAAOM,QAAU,WACfN,EAAOO,WAAW,GAGlB/F,EAAK6E,gBAAiB,EAGtB/N,SAASW,oBAAoB,aAAcyN,GAAQ,GACnDpO,SAASW,oBAAoB,WAAYyN,GAAQ,GACjDpO,SAASW,oBAAoB,QAASyN,GAAQ,GAC9CpO,SAASW,oBAAoB,UAAWyN,GAAQ,GAGhD,IAAK,IAAIvL,EAAE,EAAGA,EAAEqG,EAAKM,OAAO/G,OAAQI,IAClCqG,EAAKM,OAAO3G,GAAGqM,MAAM,YAW3B,OALAlP,SAASU,iBAAiB,aAAc0N,GAAQ,GAChDpO,SAASU,iBAAiB,WAAY0N,GAAQ,GAC9CpO,SAASU,iBAAiB,QAAS0N,GAAQ,GAC3CpO,SAASU,iBAAiB,UAAW0N,GAAQ,GAEtClF,IAQTiG,kBAAmB,WACjB,IAAIjG,EAAO7C,MAAQ8C,EAGnB,GAAID,EAAKG,gBAAgB5G,OACvB,OAAOyG,EAAKG,gBAAgBzG,MAI9B,IAAIwM,GAAW,IAAIxD,OAAQyD,OAO3B,OANID,GAA+B,oBAAZrN,UAA4BqN,aAAoBrN,SAAoC,mBAAlBqN,EAAS1L,OAChG0L,EAASE,OAAM,WACbC,QAAQC,KAAK,6EAIV,IAAI5D,OAOb2C,mBAAoB,SAASkB,GAC3B,IAAIvG,EAAO7C,MAAQ8C,EAOnB,OAJIsG,EAAMnB,WACRpF,EAAKG,gBAAgBlH,KAAKsN,GAGrBvG,GAQTyC,aAAc,WACZ,IAAIzC,EAAO7C,KAEX,GAAK6C,EAAKe,aAAgBf,EAAK5F,UAAmC,IAArB4F,EAAK5F,IAAIoM,SAA4BvG,EAAOa,cAAzF,CAKA,IAAK,IAAInH,EAAE,EAAGA,EAAEqG,EAAKM,OAAO/G,OAAQI,IAClC,GAAIqG,EAAKM,OAAO3G,GAAG8H,UACjB,IAAK,IAAIG,EAAE,EAAGA,EAAE5B,EAAKM,OAAO3G,GAAG8M,QAAQlN,OAAQqI,IAC7C,IAAK5B,EAAKM,OAAO3G,GAAG8M,QAAQ7E,GAAG8E,QAC7B,OAAO1G,EAkCf,OA5BIA,EAAK2G,eACPC,aAAa5G,EAAK2G,eAIpB3G,EAAK2G,cAAgBE,YAAW,WAC9B,GAAK7G,EAAKe,YAAV,CAIAf,EAAK2G,cAAgB,KACrB3G,EAAKwC,MAAQ,aAGb,IAAIsE,EAAmB,WACrB9G,EAAKwC,MAAQ,YAETxC,EAAK+G,6BACA/G,EAAK+G,oBACZ/G,EAAKuF,gBAMTvF,EAAK5F,IAAIoM,UAAUhM,KAAKsM,EAAkBA,MACzC,KAEI9G,IAOTuF,YAAa,WACX,IAAIvF,EAAO7C,KAEX,GAAK6C,EAAK5F,UAAkC,IAApB4F,EAAK5F,IAAIyL,QAA2B5F,EAAOa,cAyBnE,MArBmB,YAAfd,EAAKwC,OAA0C,gBAAnBxC,EAAK5F,IAAIoI,OAA2BxC,EAAK2G,eACvEC,aAAa5G,EAAK2G,eAClB3G,EAAK2G,cAAgB,MACG,cAAf3G,EAAKwC,OAAwC,YAAfxC,EAAKwC,OAA0C,gBAAnBxC,EAAK5F,IAAIoI,OAC5ExC,EAAK5F,IAAIyL,SAASrL,MAAK,WACrBwF,EAAKwC,MAAQ,UAGb,IAAK,IAAI7I,EAAE,EAAGA,EAAEqG,EAAKM,OAAO/G,OAAQI,IAClCqG,EAAKM,OAAO3G,GAAGqM,MAAM,aAIrBhG,EAAK2G,gBACPC,aAAa5G,EAAK2G,eAClB3G,EAAK2G,cAAgB,OAEC,eAAf3G,EAAKwC,QACdxC,EAAK+G,qBAAsB,GAGtB/G,IAKX,IAAIC,EAAS,IAAIH,EASbkH,EAAO,SAASC,GAIbA,EAAEC,KAAwB,IAAjBD,EAAEC,IAAI3N,OAHT4D,KAQNzC,KAAKuM,GAJRZ,QAAQc,MAAM,+DAMlBH,EAAKjH,UAAY,CAMfrF,KAAM,SAASuM,GACb,IAAIjH,EAAO7C,KA2EX,OAxEK8C,EAAO7F,KACViH,IAIFrB,EAAKoH,UAAYH,EAAEI,WAAY,EAC/BrH,EAAKsH,QAA+B,iBAAbL,EAAEM,OAAuBN,EAAEM,OAAS,CAACN,EAAEM,QAC9DvH,EAAKwH,OAASP,EAAEQ,QAAS,EACzBzH,EAAKO,OAAS0G,EAAEjF,OAAQ,EACxBhC,EAAK0H,MAAQT,EAAEU,OAAQ,EACvB3H,EAAK4H,MAAQX,EAAEY,MAAQ,EACvB7H,EAAK8H,SAAiC,kBAAdb,EAAEc,SAAuC,aAAdd,EAAEc,SAA0Bd,EAAEc,QACjF/H,EAAKgI,MAAQf,EAAEgB,MAAQ,EACvBjI,EAAKkI,QAAUjB,EAAEkB,QAAU,GAC3BnI,EAAKoI,KAAyB,iBAAVnB,EAAEC,IAAoBD,EAAEC,IAAM,CAACD,EAAEC,KACrDlH,EAAKQ,aAAuB6H,IAAbpB,EAAE/F,OAAuB+F,EAAE/F,OAAS,EACnDlB,EAAKsI,KAAO,CACVC,OAAQtB,EAAEuB,KAAOvB,EAAEuB,IAAID,OAAStB,EAAEuB,IAAID,OAAS,MAC/CE,QAASxB,EAAEuB,KAAOvB,EAAEuB,IAAIC,QAAUxB,EAAEuB,IAAIC,QAAU,KAClDC,mBAAiBzB,EAAEuB,MAAOvB,EAAEuB,IAAIE,kBAAkBzB,EAAEuB,IAAIE,iBAI1D1I,EAAK2I,UAAY,EACjB3I,EAAK4I,OAAS,WACd5I,EAAKyG,QAAU,GACfzG,EAAK6I,WAAa,GAClB7I,EAAK8I,OAAS,GACd9I,EAAK+I,WAAY,EAGjB/I,EAAKgJ,OAAS/B,EAAEgC,MAAQ,CAAC,CAAC3T,GAAI2R,EAAEgC,QAAU,GAC1CjJ,EAAKkJ,QAAUjC,EAAEkC,OAAS,CAAC,CAAC7T,GAAI2R,EAAEkC,SAAW,GAC7CnJ,EAAKoJ,QAAUnC,EAAEoC,OAAS,CAAC,CAAC/T,GAAI2R,EAAEoC,SAAW,GAC7CrJ,EAAKsJ,aAAerC,EAAEsC,YAAc,CAAC,CAACjU,GAAI2R,EAAEsC,cAAgB,GAC5DvJ,EAAKwJ,aAAevC,EAAEwC,YAAc,CAAC,CAACnU,GAAI2R,EAAEwC,cAAgB,GAC5DzJ,EAAK0J,SAAWzC,EAAE0C,QAAU,CAAC,CAACrU,GAAI2R,EAAE0C,UAAY,GAChD3J,EAAK4J,QAAU3C,EAAE4C,OAAS,CAAC,CAACvU,GAAI2R,EAAE4C,SAAW,GAC7C7J,EAAK8J,QAAU7C,EAAE8C,OAAS,CAAC,CAACzU,GAAI2R,EAAE8C,SAAW,GAC7C/J,EAAKgK,QAAU/C,EAAEgD,OAAS,CAAC,CAAC3U,GAAI2R,EAAEgD,SAAW,GAC7CjK,EAAKkK,UAAYjD,EAAEkD,SAAW,CAAC,CAAC7U,GAAI2R,EAAEkD,WAAa,GACnDnK,EAAKoK,QAAUnD,EAAEoD,OAAS,CAAC,CAAC/U,GAAI2R,EAAEoD,SAAW,GAC7CrK,EAAKsK,QAAUrD,EAAEsD,OAAS,CAAC,CAACjV,GAAI2R,EAAEsD,SAAW,GAC7CvK,EAAKwK,UAAYvD,EAAEwD,SAAW,CAAC,CAACnV,GAAI2R,EAAEwD,WAAa,GACnDzK,EAAK0K,UAAY,GAGjB1K,EAAKyB,UAAYxB,EAAOa,gBAAkBd,EAAKwH,YAGrB,IAAfvH,EAAO7F,KAAuB6F,EAAO7F,KAAO6F,EAAOe,YAC5Df,EAAO2E,eAIT3E,EAAOK,OAAOrH,KAAK+G,GAGfA,EAAKoH,WACPpH,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,OACPsT,OAAQ,WACN3K,EAAKmG,UAMPnG,EAAK8H,UAA8B,SAAlB9H,EAAK8H,UACxB9H,EAAKsF,OAGAtF,GAOTsF,KAAM,WACJ,IAAItF,EAAO7C,KACPyN,EAAM,KAGV,GAAI3K,EAAOY,QACTb,EAAKgG,MAAM,YAAa,KAAM,yBADhC,CAMyB,iBAAdhG,EAAKoI,OACdpI,EAAKoI,KAAO,CAACpI,EAAKoI,OAIpB,IAAK,IAAIzO,EAAE,EAAGA,EAAEqG,EAAKoI,KAAK7O,OAAQI,IAAK,CACrC,IAAI2I,EAAKuI,EAET,GAAI7K,EAAKsH,SAAWtH,EAAKsH,QAAQ3N,GAE/B2I,EAAMtC,EAAKsH,QAAQ3N,OACd,CAGL,GAAmB,iBADnBkR,EAAM7K,EAAKoI,KAAKzO,IACa,CAC3BqG,EAAKgG,MAAM,YAAa,KAAM,0DAC9B,UAIF1D,EAAM,0BAA0BwI,KAAKD,MAEnCvI,EAAM,aAAawI,KAAKD,EAAIrH,MAAM,IAAK,GAAG,KAGxClB,IACFA,EAAMA,EAAI,GAAGyI,eAUjB,GALKzI,GACH+D,QAAQC,KAAK,8FAIXhE,GAAOrC,EAAOoC,OAAOC,GAAM,CAC7BsI,EAAM5K,EAAKoI,KAAKzO,GAChB,OAIJ,GAAKiR,EAuBL,OAlBA5K,EAAKoI,KAAOwC,EACZ5K,EAAK4I,OAAS,UAImB,WAA7BjI,OAAOqK,SAASC,UAA6C,UAApBL,EAAIM,MAAM,EAAG,KACxDlL,EAAKwH,QAAS,EACdxH,EAAKyB,WAAY,GAInB,IAAI0J,EAAMnL,GAGNA,EAAKyB,WACP2J,EAAWpL,GAGNA,EAtBLA,EAAKgG,MAAM,YAAa,KAAM,kDA+BlCG,KAAM,SAASgC,EAAQkD,GACrB,IAAIrL,EAAO7C,KACP4B,EAAK,KAGT,GAAsB,iBAAXoJ,EACTpJ,EAAKoJ,EACLA,EAAS,SACJ,CAAA,GAAsB,iBAAXA,GAAuC,WAAhBnI,EAAK4I,SAAwB5I,EAAKkI,QAAQC,GAEjF,OAAO,KACF,QAAsB,IAAXA,IAEhBA,EAAS,aAIJnI,EAAK+I,WAAW,CAEnB,IADA,IAAIuC,EAAM,EACD3R,EAAE,EAAGA,EAAEqG,EAAKyG,QAAQlN,OAAQI,IAC/BqG,EAAKyG,QAAQ9M,GAAG+M,UAAY1G,EAAKyG,QAAQ9M,GAAG4R,SAC9CD,IACAvM,EAAKiB,EAAKyG,QAAQ9M,GAAG6R,KAIb,IAARF,EACFnD,EAAS,KAETpJ,EAAK,MAMX,IAAI8C,EAAQ9C,EAAKiB,EAAK8B,WAAW/C,GAAMiB,EAAKyL,iBAG5C,IAAK5J,EACH,OAAO,KAWT,GAPI9C,IAAOoJ,IACTA,EAAStG,EAAMqG,SAAW,aAMR,WAAhBlI,EAAK4I,OAAqB,CAE5B/G,EAAMqG,QAAUC,EAGhBtG,EAAM0J,QAAS,EAGf,IAAIG,EAAU7J,EAAM2J,IAQpB,OAPAxL,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,OACPsT,OAAQ,WACN3K,EAAKmG,KAAKuF,MAIPA,EAIT,GAAI3M,IAAO8C,EAAM6E,QAMf,OAJK2E,GACHrL,EAAK2L,WAAW,QAGX9J,EAAM2J,IAIXxL,EAAKyB,WACPxB,EAAOsF,cAIT,IAAIqG,EAAOC,KAAKC,IAAI,EAAGjK,EAAMkK,MAAQ,EAAIlK,EAAMkK,MAAQ/L,EAAKkI,QAAQC,GAAQ,GAAK,KAC7E6D,EAAWH,KAAKC,IAAI,GAAK9L,EAAKkI,QAAQC,GAAQ,GAAKnI,EAAKkI,QAAQC,GAAQ,IAAM,IAAQyD,GACtFK,EAAsB,IAAXD,EAAmBH,KAAKK,IAAIrK,EAAMmG,OAC7CrC,EAAQ3F,EAAKkI,QAAQC,GAAQ,GAAK,IAClCjG,GAAQlC,EAAKkI,QAAQC,GAAQ,GAAKnI,EAAKkI,QAAQC,GAAQ,IAAM,IACjEtG,EAAMqG,QAAUC,EAIhBtG,EAAM0J,QAAS,EAGf,IAAIY,EAAY,WACdtK,EAAM6E,SAAU,EAChB7E,EAAMkK,MAAQH,EACd/J,EAAMuK,OAASzG,EACf9D,EAAMwK,MAAQnK,EACdL,EAAM6F,SAAW7F,EAAM6F,QAAS1H,EAAKkI,QAAQC,GAAQ,KAIvD,KAAIyD,GAAQ1J,GAAZ,CAMA,IAAI9L,EAAOyL,EAAME,MACjB,GAAI/B,EAAKyB,UAAW,CAElB,IAAI6K,EAAe,WACjBtM,EAAK+I,WAAY,EACjBoD,IACAnM,EAAKuM,eAAe1K,GAGpB,IAAIV,EAAOU,EAAMtB,QAAUP,EAAKO,OAAU,EAAIsB,EAAMrB,QACpDpK,EAAKkL,KAAKC,eAAeJ,EAAKlB,EAAO7F,IAAIoH,aACzCK,EAAM2K,WAAavM,EAAO7F,IAAIoH,iBAGS,IAA5BpL,EAAKqW,aAAa9G,MAC3B9D,EAAM6F,MAAQtR,EAAKqW,aAAaC,YAAY,EAAGd,EAAM,OAASxV,EAAKqW,aAAaC,YAAY,EAAGd,EAAMI,GAErGnK,EAAM6F,MAAQtR,EAAKqW,aAAa9G,MAAM,EAAGiG,EAAM,OAASxV,EAAKqW,aAAa9G,MAAM,EAAGiG,EAAMI,GAIvFC,IAAYU,EAAAA,IACd3M,EAAK6I,WAAWhH,EAAM2J,KAAO3E,WAAW7G,EAAKuL,OAAOqB,KAAK5M,EAAM6B,GAAQoK,IAGpEZ,GACHxE,YAAW,WACT7G,EAAKgG,MAAM,OAAQnE,EAAM2J,KACzBxL,EAAK2L,eACJ,IAIc,YAAjB1L,EAAOuC,OAA4C,gBAArBvC,EAAO7F,IAAIoI,MAC3C8J,KAEAtM,EAAK+I,WAAY,EAGjB/I,EAAK6M,KAAK,SAAUP,GAGpBtM,EAAK8M,YAAYjL,EAAM2J,UAEpB,CAEL,IAAIuB,EAAY,WACd3W,EAAKoL,YAAcoK,EACnBxV,EAAK6L,MAAQJ,EAAMtB,QAAUP,EAAKO,QAAUN,EAAOM,QAAUnK,EAAK6L,MAClE7L,EAAK8K,OAASW,EAAMrB,QAAUP,EAAOiB,SACrC9K,EAAK4W,aAAenL,EAAMmG,MAG1B,IACE,IAAI7B,EAAO/P,EAAK+P,OAwChB,GArCIA,GAA2B,oBAAZtN,UAA4BsN,aAAgBtN,SAAgC,mBAAdsN,EAAK3L,OAEpFwF,EAAK+I,WAAY,EAGjBoD,IAGAhG,EACG3L,MAAK,WACJwF,EAAK+I,WAAY,EACjB3S,EAAKgP,WAAY,EACZiG,EAGHrL,EAAK2L,aAFL3L,EAAKgG,MAAM,OAAQnE,EAAM2J,QAK5BpF,OAAM,WACLpG,EAAK+I,WAAY,EACjB/I,EAAKgG,MAAM,YAAanE,EAAM2J,IAAK,+IAInC3J,EAAM0J,QAAS,EACf1J,EAAM6E,SAAU,MAEV2E,IACVrL,EAAK+I,WAAY,EACjBoD,IACAnM,EAAKgG,MAAM,OAAQnE,EAAM2J,MAI3BpV,EAAK4W,aAAenL,EAAMmG,MAGtB5R,EAAK6W,OAGP,YAFAjN,EAAKgG,MAAM,YAAanE,EAAM2J,IAAK,+IAMtB,cAAXrD,GAA0BtG,EAAM6F,MAClC1H,EAAK6I,WAAWhH,EAAM2J,KAAO3E,WAAW7G,EAAKuL,OAAOqB,KAAK5M,EAAM6B,GAAQoK,IAEvEjM,EAAK6I,WAAWhH,EAAM2J,KAAO,WAE3BxL,EAAKuL,OAAO1J,GAGZzL,EAAKqB,oBAAoB,QAASuI,EAAK6I,WAAWhH,EAAM2J,MAAM,IAEhEpV,EAAKoB,iBAAiB,QAASwI,EAAK6I,WAAWhH,EAAM2J,MAAM,IAE7D,MAAOzI,GACP/C,EAAKgG,MAAM,YAAanE,EAAM2J,IAAKzI,KAKtB,2FAAb3M,EAAK8Q,MACP9Q,EAAK8Q,IAAMlH,EAAKoI,KAChBhS,EAAKkP,QAIP,IAAI4H,EAAsBvM,QAAUA,OAAOwM,SAAa/W,EAAKgX,YAAcnN,EAAOS,WAAW2M,WAC7F,GAAIjX,EAAKgX,YAAc,GAAKF,EAC1BH,QACK,CACL/M,EAAK+I,WAAY,EACjB/I,EAAK4I,OAAS,UAEd,IAAI0E,EAAW,WACbtN,EAAK4I,OAAS,SAGdmE,IAGA3W,EAAKqB,oBAAoBwI,EAAOQ,cAAe6M,GAAU,IAE3DlX,EAAKoB,iBAAiByI,EAAOQ,cAAe6M,GAAU,GAGtDtN,EAAK8M,YAAYjL,EAAM2J,MAI3B,OAAO3J,EAAM2J,IAzJXxL,EAAKuL,OAAO1J,IAiKhB0L,MAAO,SAASxO,GACd,IAAIiB,EAAO7C,KAGX,GAAoB,WAAhB6C,EAAK4I,QAAuB5I,EAAK+I,UAQnC,OAPA/I,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,QACPsT,OAAQ,WACN3K,EAAKuN,MAAMxO,MAIRiB,EAMT,IAFA,IAAI0B,EAAM1B,EAAK2B,aAAa5C,GAEnBpF,EAAE,EAAGA,EAAE+H,EAAInI,OAAQI,IAAK,CAE/BqG,EAAK8M,YAAYpL,EAAI/H,IAGrB,IAAIkI,EAAQ7B,EAAK8B,WAAWJ,EAAI/H,IAEhC,GAAIkI,IAAUA,EAAM6E,UAElB7E,EAAMkK,MAAQ/L,EAAK4L,KAAKlK,EAAI/H,IAC5BkI,EAAM2L,UAAY,EAClB3L,EAAM6E,SAAU,EAGhB1G,EAAKyN,UAAU/L,EAAI/H,IAEfkI,EAAME,OACR,GAAI/B,EAAKyB,UAAW,CAElB,IAAKI,EAAME,MAAM0K,aACf,cAG2C,IAAlC5K,EAAME,MAAM0K,aAAavK,KAClCL,EAAME,MAAM0K,aAAaiB,QAAQ,GAEjC7L,EAAME,MAAM0K,aAAavK,KAAK,GAIhClC,EAAK2N,aAAa9L,EAAME,YACd6L,MAAM/L,EAAME,MAAMiK,WAAanK,EAAME,MAAMiK,WAAaW,EAAAA,GAClE9K,EAAME,MAAMwL,QAMbM,UAAU,IACb7N,EAAKgG,MAAM,QAASnE,EAAQA,EAAM2J,IAAM,MAI5C,OAAOxL,GASTkC,KAAM,SAASnD,EAAIsM,GACjB,IAAIrL,EAAO7C,KAGX,GAAoB,WAAhB6C,EAAK4I,QAAuB5I,EAAK+I,UAQnC,OAPA/I,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,OACPsT,OAAQ,WACN3K,EAAKkC,KAAKnD,MAIPiB,EAMT,IAFA,IAAI0B,EAAM1B,EAAK2B,aAAa5C,GAEnBpF,EAAE,EAAGA,EAAE+H,EAAInI,OAAQI,IAAK,CAE/BqG,EAAK8M,YAAYpL,EAAI/H,IAGrB,IAAIkI,EAAQ7B,EAAK8B,WAAWJ,EAAI/H,IAE5BkI,IAEFA,EAAMkK,MAAQlK,EAAMuK,QAAU,EAC9BvK,EAAM2L,UAAY,EAClB3L,EAAM6E,SAAU,EAChB7E,EAAM0J,QAAS,EAGfvL,EAAKyN,UAAU/L,EAAI/H,IAEfkI,EAAME,QACJ/B,EAAKyB,UAEHI,EAAME,MAAM0K,oBAC+B,IAAlC5K,EAAME,MAAM0K,aAAavK,KAClCL,EAAME,MAAM0K,aAAaiB,QAAQ,GAEjC7L,EAAME,MAAM0K,aAAavK,KAAK,GAIhClC,EAAK2N,aAAa9L,EAAME,QAEhB6L,MAAM/L,EAAME,MAAMiK,WAAanK,EAAME,MAAMiK,WAAaW,EAAAA,IAClE9K,EAAME,MAAMP,YAAcK,EAAMuK,QAAU,EAC1CvK,EAAME,MAAMwL,QAGR1L,EAAME,MAAMiK,WAAaW,EAAAA,GAC3B3M,EAAK8N,YAAYjM,EAAME,SAKxBsJ,GACHrL,EAAKgG,MAAM,OAAQnE,EAAM2J,MAK/B,OAAOxL,GASTgC,KAAM,SAASC,EAAOlD,GACpB,IAAIiB,EAAO7C,KAGX,GAAoB,WAAhB6C,EAAK4I,QAAsB5I,EAAK+I,UAQlC,OAPA/I,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,OACPsT,OAAQ,WACN3K,EAAKgC,KAAKC,EAAOlD,MAIdiB,EAIT,QAAkB,IAAPjB,EAAoB,CAC7B,GAAqB,kBAAVkD,EAGT,OAAOjC,EAAKO,OAFZP,EAAKO,OAAS0B,EASlB,IAFA,IAAIP,EAAM1B,EAAK2B,aAAa5C,GAEnBpF,EAAE,EAAGA,EAAE+H,EAAInI,OAAQI,IAAK,CAE/B,IAAIkI,EAAQ7B,EAAK8B,WAAWJ,EAAI/H,IAE5BkI,IACFA,EAAMtB,OAAS0B,EAGXJ,EAAMkM,WACR/N,EAAKyN,UAAU5L,EAAM2J,KAGnBxL,EAAKyB,WAAaI,EAAME,MAC1BF,EAAME,MAAMT,KAAKC,eAAeU,EAAQ,EAAIJ,EAAMrB,QAASP,EAAO7F,IAAIoH,aAC7DK,EAAME,QACfF,EAAME,MAAME,QAAQhC,EAAOM,QAAgB0B,GAG7CjC,EAAKgG,MAAM,OAAQnE,EAAM2J,MAI7B,OAAOxL,GAWTkB,OAAQ,WACN,IAEIC,EAAKpC,EAqBL8C,EAvBA7B,EAAO7C,KACP6Q,EAAOH,UAIX,GAAoB,IAAhBG,EAAKzU,OAEP,OAAOyG,EAAKQ,QACP,GAAoB,IAAhBwN,EAAKzU,QAAgC,IAAhByU,EAAKzU,aAAmC,IAAZyU,EAAK,GAAoB,CAEnF,IAAItM,EAAM1B,EAAK2B,eACXnC,EAAQkC,EAAIgC,QAAQsK,EAAK,IACzBxO,GAAS,EACXT,EAAKwE,SAASyK,EAAK,GAAI,IAEvB7M,EAAMC,WAAW4M,EAAK,SAEfA,EAAKzU,QAAU,IACxB4H,EAAMC,WAAW4M,EAAK,IACtBjP,EAAKwE,SAASyK,EAAK,GAAI,KAKzB,UAAmB,IAAR7M,GAAuBA,GAAO,GAAKA,GAAO,GA2CnD,OADAU,EAAQ9C,EAAKiB,EAAK8B,WAAW/C,GAAMiB,EAAKyG,QAAQ,IACjC5E,EAAMrB,QAAU,EAzC/B,GAAoB,WAAhBR,EAAK4I,QAAsB5I,EAAK+I,UAQlC,OAPA/I,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,SACPsT,OAAQ,WACN3K,EAAKkB,OAAO+M,MAAMjO,EAAMgO,MAIrBhO,OAIS,IAAPjB,IACTiB,EAAKQ,QAAUW,GAIjBpC,EAAKiB,EAAK2B,aAAa5C,GACvB,IAAK,IAAIpF,EAAE,EAAGA,EAAEoF,EAAGxF,OAAQI,KAEzBkI,EAAQ7B,EAAK8B,WAAW/C,EAAGpF,OAGzBkI,EAAMrB,QAAUW,EAGX6M,EAAK,IACRhO,EAAKyN,UAAU1O,EAAGpF,IAGhBqG,EAAKyB,WAAaI,EAAME,QAAUF,EAAMtB,OAC1CsB,EAAME,MAAMT,KAAKC,eAAeJ,EAAKlB,EAAO7F,IAAIoH,aACvCK,EAAME,QAAUF,EAAMtB,SAC/BsB,EAAME,MAAMb,OAASC,EAAMlB,EAAOiB,UAGpClB,EAAKgG,MAAM,SAAUnE,EAAM2J,MAQjC,OAAOxL,GAWTkO,KAAM,SAASlS,EAAMmS,EAAIC,EAAKrP,GAC5B,IAAIiB,EAAO7C,KAGX,GAAoB,WAAhB6C,EAAK4I,QAAuB5I,EAAK+I,UAQnC,OAPA/I,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,OACPsT,OAAQ,WACN3K,EAAKkO,KAAKlS,EAAMmS,EAAIC,EAAKrP,MAItBiB,EAIThE,EAAO6P,KAAKwC,IAAIxC,KAAKC,IAAI,EAAG1K,WAAWpF,IAAQ,GAC/CmS,EAAKtC,KAAKwC,IAAIxC,KAAKC,IAAI,EAAG1K,WAAW+M,IAAM,GAC3CC,EAAMhN,WAAWgN,GAGjBpO,EAAKkB,OAAOlF,EAAM+C,GAIlB,IADA,IAAI2C,EAAM1B,EAAK2B,aAAa5C,GACnBpF,EAAE,EAAGA,EAAE+H,EAAInI,OAAQI,IAAK,CAE/B,IAAIkI,EAAQ7B,EAAK8B,WAAWJ,EAAI/H,IAGhC,GAAIkI,EAAO,CAOT,GALK9C,GACHiB,EAAKyN,UAAU/L,EAAI/H,IAIjBqG,EAAKyB,YAAcI,EAAMtB,OAAQ,CACnC,IAAIiB,EAAcvB,EAAO7F,IAAIoH,YACzB8M,EAAM9M,EAAe4M,EAAM,IAC/BvM,EAAMrB,QAAUxE,EAChB6F,EAAME,MAAMT,KAAKC,eAAevF,EAAMwF,GACtCK,EAAME,MAAMT,KAAKiN,wBAAwBJ,EAAIG,GAG/CtO,EAAKwO,mBAAmB3M,EAAO7F,EAAMmS,EAAIC,EAAK1M,EAAI/H,QAAkB,IAAPoF,IAIjE,OAAOiB,GAYTwO,mBAAoB,SAAS3M,EAAO7F,EAAMmS,EAAIC,EAAKrP,EAAI0P,GACrD,IAAIzO,EAAO7C,KACPgE,EAAMnF,EACN0S,EAAOP,EAAKnS,EACZ2S,EAAQ9C,KAAKK,IAAIwC,EAAO,KACxBE,EAAU/C,KAAKC,IAAI,EAAI6C,EAAQ,EAAKP,EAAMO,EAAQP,GAClDS,EAAWC,KAAKC,MAGpBlN,EAAMmN,QAAUb,EAGhBtM,EAAMkM,UAAYkB,aAAY,WAE5B,IAAIC,GAAQJ,KAAKC,MAAQF,GAAYT,EACrCS,EAAWC,KAAKC,MAChB5N,GAAOuN,EAAOQ,EAGd/N,EAAM0K,KAAKsD,MAAY,IAANhO,GAAa,IAI5BA,EADEuN,EAAO,EACH7C,KAAKC,IAAIqC,EAAIhN,GAEb0K,KAAKwC,IAAIF,EAAIhN,GAIjBnB,EAAKyB,UACPI,EAAMrB,QAAUW,EAEhBnB,EAAKkB,OAAOC,EAAKU,EAAM2J,KAAK,GAI1BiD,IACFzO,EAAKQ,QAAUW,IAIZgN,EAAKnS,GAAQmF,GAAOgN,GAAQA,EAAKnS,GAAQmF,GAAOgN,KACnDiB,cAAcvN,EAAMkM,WACpBlM,EAAMkM,UAAY,KAClBlM,EAAMmN,QAAU,KAChBhP,EAAKkB,OAAOiN,EAAItM,EAAM2J,KACtBxL,EAAKgG,MAAM,OAAQnE,EAAM2J,QAE1BoD,IASLnB,UAAW,SAAS1O,GAClB,IAAIiB,EAAO7C,KACP0E,EAAQ7B,EAAK8B,WAAW/C,GAc5B,OAZI8C,GAASA,EAAMkM,YACb/N,EAAKyB,WACPI,EAAME,MAAMT,KAAK+N,sBAAsBpP,EAAO7F,IAAIoH,aAGpD4N,cAAcvN,EAAMkM,WACpBlM,EAAMkM,UAAY,KAClB/N,EAAKkB,OAAOW,EAAMmN,QAASjQ,GAC3B8C,EAAMmN,QAAU,KAChBhP,EAAKgG,MAAM,OAAQjH,IAGdiB,GAWT2H,KAAM,WACJ,IAEIA,EAAM5I,EAAI8C,EAFV7B,EAAO7C,KACP6Q,EAAOH,UAIX,GAAoB,IAAhBG,EAAKzU,OAEP,OAAOyG,EAAK0H,MACP,GAAoB,IAAhBsG,EAAKzU,OAAc,CAC5B,GAAuB,kBAAZyU,EAAK,GAMd,SADAnM,EAAQ7B,EAAK8B,WAAWyB,SAASyK,EAAK,GAAI,OAC3BnM,EAAM6F,MALrBC,EAAOqG,EAAK,GACZhO,EAAK0H,MAAQC,OAMU,IAAhBqG,EAAKzU,SACdoO,EAAOqG,EAAK,GACZjP,EAAKwE,SAASyK,EAAK,GAAI,KAKzB,IADA,IAAItM,EAAM1B,EAAK2B,aAAa5C,GACnBpF,EAAE,EAAGA,EAAE+H,EAAInI,OAAQI,KAC1BkI,EAAQ7B,EAAK8B,WAAWJ,EAAI/H,OAG1BkI,EAAM6F,MAAQC,EACV3H,EAAKyB,WAAaI,EAAME,OAASF,EAAME,MAAM0K,eAC/C5K,EAAME,MAAM0K,aAAa9E,KAAOA,EAC5BA,IACF9F,EAAME,MAAM0K,aAAa6C,UAAYzN,EAAMuK,QAAU,EACrDvK,EAAME,MAAM0K,aAAa8C,QAAU1N,EAAMwK,MAGrCrM,EAAKwP,QAAQ9N,EAAI/H,MACnBqG,EAAKuN,MAAM7L,EAAI/H,IAAI,GACnBqG,EAAKmG,KAAKzE,EAAI/H,IAAI,OAO5B,OAAOqG,GAWTiI,KAAM,WACJ,IAEIA,EAAMlJ,EAqBN8C,EAvBA7B,EAAO7C,KACP6Q,EAAOH,UAIX,GAAoB,IAAhBG,EAAKzU,OAEPwF,EAAKiB,EAAKyG,QAAQ,GAAG+E,SAChB,GAAoB,IAAhBwC,EAAKzU,OAAc,CAE5B,IAAImI,EAAM1B,EAAK2B,eACXnC,EAAQkC,EAAIgC,QAAQsK,EAAK,IACzBxO,GAAS,EACXT,EAAKwE,SAASyK,EAAK,GAAI,IAEvB/F,EAAO7G,WAAW4M,EAAK,SAEA,IAAhBA,EAAKzU,SACd0O,EAAO7G,WAAW4M,EAAK,IACvBjP,EAAKwE,SAASyK,EAAK,GAAI,KAKzB,GAAoB,iBAAT/F,EAwDT,OADApG,EAAQ7B,EAAK8B,WAAW/C,IACT8C,EAAMmG,MAAQhI,EAAKgI,MAtDlC,GAAoB,WAAhBhI,EAAK4I,QAAuB5I,EAAK+I,UAQnC,OAPA/I,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,OACPsT,OAAQ,WACN3K,EAAKiI,KAAKgG,MAAMjO,EAAMgO,MAInBhO,OAIS,IAAPjB,IACTiB,EAAKgI,MAAQC,GAIflJ,EAAKiB,EAAK2B,aAAa5C,GACvB,IAAK,IAAIpF,EAAE,EAAGA,EAAEoF,EAAGxF,OAAQI,IAIzB,GAFAkI,EAAQ7B,EAAK8B,WAAW/C,EAAGpF,IAEhB,CAGLqG,EAAKwP,QAAQzQ,EAAGpF,MAClBkI,EAAM2L,UAAYxN,EAAK4L,KAAK7M,EAAGpF,IAC/BkI,EAAM2K,WAAaxM,EAAKyB,UAAYxB,EAAO7F,IAAIoH,YAAcK,EAAM2K,YAErE3K,EAAMmG,MAAQC,EAGVjI,EAAKyB,WAAaI,EAAME,OAASF,EAAME,MAAM0K,aAC/C5K,EAAME,MAAM0K,aAAaO,aAAazL,eAAe0G,EAAMhI,EAAO7F,IAAIoH,aAC7DK,EAAME,QACfF,EAAME,MAAMiL,aAAe/E,GAI7B,IAAI2D,EAAO5L,EAAK4L,KAAK7M,EAAGpF,IACpBqS,GAAahM,EAAKkI,QAAQrG,EAAMqG,SAAS,GAAKlI,EAAKkI,QAAQrG,EAAMqG,SAAS,IAAM,IAAQ0D,EACxFK,EAAsB,IAAXD,EAAmBH,KAAKK,IAAIrK,EAAMmG,QAG7ChI,EAAK6I,WAAW9J,EAAGpF,KAAQkI,EAAM6E,UACnC1G,EAAK8M,YAAY/N,EAAGpF,IACpBqG,EAAK6I,WAAW9J,EAAGpF,IAAMkN,WAAW7G,EAAKuL,OAAOqB,KAAK5M,EAAM6B,GAAQoK,IAGrEjM,EAAKgG,MAAM,OAAQnE,EAAM2J,KAQ/B,OAAOxL,GAWT4L,KAAM,WACJ,IAEIA,EAAM7M,EAFNiB,EAAO7C,KACP6Q,EAAOH,UAIX,GAAoB,IAAhBG,EAAKzU,OAEHyG,EAAKyG,QAAQlN,SACfwF,EAAKiB,EAAKyG,QAAQ,GAAG+E,UAElB,GAAoB,IAAhBwC,EAAKzU,OAAc,CAE5B,IAAImI,EAAM1B,EAAK2B,eACXnC,EAAQkC,EAAIgC,QAAQsK,EAAK,IACzBxO,GAAS,EACXT,EAAKwE,SAASyK,EAAK,GAAI,IACdhO,EAAKyG,QAAQlN,SACtBwF,EAAKiB,EAAKyG,QAAQ,GAAG+E,IACrBI,EAAOxK,WAAW4M,EAAK,UAEA,IAAhBA,EAAKzU,SACdqS,EAAOxK,WAAW4M,EAAK,IACvBjP,EAAKwE,SAASyK,EAAK,GAAI,KAIzB,QAAkB,IAAPjP,EACT,OAAO,EAIT,GAAoB,iBAAT6M,IAAsC,WAAhB5L,EAAK4I,QAAuB5I,EAAK+I,WAQhE,OAPA/I,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,OACPsT,OAAQ,WACN3K,EAAK4L,KAAKqC,MAAMjO,EAAMgO,MAInBhO,EAIT,IAAI6B,EAAQ7B,EAAK8B,WAAW/C,GAE5B,GAAI8C,EAAO,CACT,KAAoB,iBAAT+J,GAAqBA,GAAQ,GAwCjC,CACL,GAAI5L,EAAKyB,UAAW,CAClB,IAAIgO,EAAWzP,EAAKwP,QAAQzQ,GAAMkB,EAAO7F,IAAIoH,YAAcK,EAAM2K,WAAa,EAC1EkD,EAAW7N,EAAM2L,UAAY3L,EAAM2L,UAAY3L,EAAMkK,MAAQ,EACjE,OAAOlK,EAAMkK,OAAS2D,EAAWD,EAAW5D,KAAKK,IAAIrK,EAAMmG,QAE3D,OAAOnG,EAAME,MAAMP,YA5CrB,IAAIgO,EAAUxP,EAAKwP,QAAQzQ,GACvByQ,GACFxP,EAAKuN,MAAMxO,GAAI,GAIjB8C,EAAMkK,MAAQH,EACd/J,EAAM0J,QAAS,EACfvL,EAAK8M,YAAY/N,GAGZiB,EAAKyB,YAAaI,EAAME,OAAU6L,MAAM/L,EAAME,MAAMiK,YACvDnK,EAAME,MAAMP,YAAcoK,GAI5B,IAAI+D,EAAc,WAEZH,GACFxP,EAAKmG,KAAKpH,GAAI,GAGhBiB,EAAKgG,MAAM,OAAQjH,IAIrB,GAAIyQ,IAAYxP,EAAKyB,UAAW,CAC9B,IAAImO,EAAW,WACR5P,EAAK+I,UAGRlC,WAAW+I,EAAU,GAFrBD,KAKJ9I,WAAW+I,EAAU,QAErBD,IAaN,OAAO3P,GAQTwP,QAAS,SAASzQ,GAChB,IAAIiB,EAAO7C,KAGX,GAAkB,iBAAP4B,EAAiB,CAC1B,IAAI8C,EAAQ7B,EAAK8B,WAAW/C,GAC5B,QAAO8C,IAASA,EAAM6E,QAIxB,IAAK,IAAI/M,EAAE,EAAGA,EAAEqG,EAAKyG,QAAQlN,OAAQI,IACnC,IAAKqG,EAAKyG,QAAQ9M,GAAG+M,QACnB,OAAO,EAIX,OAAO,GAQTsF,SAAU,SAASjN,GACjB,IAAIiB,EAAO7C,KACP6O,EAAWhM,EAAK2I,UAGhB9G,EAAQ7B,EAAK8B,WAAW/C,GAK5B,OAJI8C,IACFmK,EAAWhM,EAAKkI,QAAQrG,EAAMqG,SAAS,GAAK,KAGvC8D,GAOTxJ,MAAO,WACL,OAAOrF,KAAKyL,QAOdzG,OAAQ,WAKN,IAJA,IAAInC,EAAO7C,KAGP0S,EAAS7P,EAAKyG,QACT9M,EAAE,EAAGA,EAAEkW,EAAOtW,OAAQI,IAExBkW,EAAOlW,GAAG+M,SACb1G,EAAKkC,KAAK2N,EAAOlW,GAAG6R,KAIjBxL,EAAKyB,YAERzB,EAAK8N,YAAY+B,EAAOlW,GAAGoI,OAG3B8N,EAAOlW,GAAGoI,MAAMtK,oBAAoB,QAASoY,EAAOlW,GAAGmW,UAAU,GACjED,EAAOlW,GAAGoI,MAAMtK,oBAAoBwI,EAAOQ,cAAeoP,EAAOlW,GAAGoW,SAAS,GAC7EF,EAAOlW,GAAGoI,MAAMtK,oBAAoB,QAASoY,EAAOlW,GAAGqW,QAAQ,GAG/D/P,EAAOoF,mBAAmBwK,EAAOlW,GAAGoI,eAI/B8N,EAAOlW,GAAGoI,MAGjB/B,EAAK8M,YAAY+C,EAAOlW,GAAG6R,KAI7B,IAAIhM,EAAQS,EAAOK,OAAOoD,QAAQ1D,GAC9BR,GAAS,GACXS,EAAOK,OAAO2P,OAAOzQ,EAAO,GAI9B,IAAI0Q,GAAW,EACf,IAAKvW,EAAE,EAAGA,EAAEsG,EAAOK,OAAO/G,OAAQI,IAChC,GAAIsG,EAAOK,OAAO3G,GAAGyO,OAASpI,EAAKoI,MAAQpI,EAAKoI,KAAK1E,QAAQzD,EAAOK,OAAO3G,GAAGyO,OAAS,EAAG,CACxF8H,GAAW,EACX,MAgBJ,OAZIC,GAASD,UACJC,EAAMnQ,EAAKoI,MAIpBnI,EAAOY,SAAU,EAGjBb,EAAK4I,OAAS,WACd5I,EAAKyG,QAAU,GACfzG,EAAO,KAEA,MAWToQ,GAAI,SAAS/Y,EAAO/B,EAAIyJ,EAAI8N,GAC1B,IACIwD,EADOlT,KACO,MAAQ9F,GAM1B,MAJkB,mBAAP/B,GACT+a,EAAOpX,KAAK4T,EAAO,CAAC9N,GAAIA,EAAIzJ,GAAIA,EAAIuX,KAAMA,GAAQ,CAAC9N,GAAIA,EAAIzJ,GAAIA,IAJtD6H,MAiBbmT,IAAK,SAASjZ,EAAO/B,EAAIyJ,GACvB,IAAIiB,EAAO7C,KACPkT,EAASrQ,EAAK,MAAQ3I,GACtBsC,EAAI,EAQR,GALkB,iBAAPrE,IACTyJ,EAAKzJ,EACLA,EAAK,MAGHA,GAAMyJ,EAER,IAAKpF,EAAE,EAAGA,EAAE0W,EAAO9W,OAAQI,IAAK,CAC9B,IAAI4W,EAAQxR,IAAOsR,EAAO1W,GAAGoF,GAC7B,GAAIzJ,IAAO+a,EAAO1W,GAAGrE,IAAMib,IAASjb,GAAMib,EAAM,CAC9CF,EAAOJ,OAAOtW,EAAG,GACjB,YAGC,GAAItC,EAET2I,EAAK,MAAQ3I,GAAS,OACjB,CAEL,IAAImZ,EAAOhb,OAAOgb,KAAKxQ,GACvB,IAAKrG,EAAE,EAAGA,EAAE6W,EAAKjX,OAAQI,IACS,IAA3B6W,EAAK7W,GAAG+J,QAAQ,QAAiB3H,MAAM0U,QAAQzQ,EAAKwQ,EAAK7W,OAC5DqG,EAAKwQ,EAAK7W,IAAM,IAKtB,OAAOqG,GAUT6M,KAAM,SAASxV,EAAO/B,EAAIyJ,GAMxB,OALW5B,KAGNiT,GAAG/Y,EAAO/B,EAAIyJ,EAAI,GAHZ5B,MAeb6I,MAAO,SAAS3O,EAAO0H,EAAI2R,GAKzB,IAJA,IAAI1Q,EAAO7C,KACPkT,EAASrQ,EAAK,MAAQ3I,GAGjBsC,EAAE0W,EAAO9W,OAAO,EAAGI,GAAG,EAAGA,IAE3B0W,EAAO1W,GAAGoF,IAAMsR,EAAO1W,GAAGoF,KAAOA,GAAgB,SAAV1H,IAC1CwP,WAAW,SAASvR,GAClBA,EAAGqb,KAAKxT,KAAM4B,EAAI2R,IAClB9D,KAAK5M,EAAMqQ,EAAO1W,GAAGrE,IAAK,GAGxB+a,EAAO1W,GAAGkT,MACZ7M,EAAKsQ,IAAIjZ,EAAOgZ,EAAO1W,GAAGrE,GAAI+a,EAAO1W,GAAGoF,KAQ9C,OAFAiB,EAAK2L,WAAWtU,GAET2I,GAST2L,WAAY,SAAStU,GACnB,IAAI2I,EAAO7C,KAEX,GAAI6C,EAAK8I,OAAOvP,OAAS,EAAG,CAC1B,IAAIqX,EAAO5Q,EAAK8I,OAAO,GAGnB8H,EAAKvZ,QAAUA,IACjB2I,EAAK8I,OAAO+H,QACZ7Q,EAAK2L,cAIFtU,GACHuZ,EAAKjG,SAIT,OAAO3K,GAQTuL,OAAQ,SAAS1J,GACf,IAAI7B,EAAO7C,KACPgL,EAAStG,EAAMqG,QAKnB,IAAKlI,EAAKyB,WAAaI,EAAME,QAAUF,EAAME,MAAMkL,SAAWpL,EAAME,MAAM+O,OAASjP,EAAME,MAAMP,YAAcK,EAAMwK,MAEjH,OADAxF,WAAW7G,EAAKuL,OAAOqB,KAAK5M,EAAM6B,GAAQ,KACnC7B,EAIT,IAAI2H,KAAU9F,EAAM6F,QAAS1H,EAAKkI,QAAQC,GAAQ,IAWlD,GARAnI,EAAKgG,MAAM,MAAOnE,EAAM2J,MAGnBxL,EAAKyB,WAAakG,GACrB3H,EAAKkC,KAAKL,EAAM2J,KAAK,GAAMrF,KAAKtE,EAAM2J,KAIpCxL,EAAKyB,WAAakG,EAAM,CAC1B3H,EAAKgG,MAAM,OAAQnE,EAAM2J,KACzB3J,EAAMkK,MAAQlK,EAAMuK,QAAU,EAC9BvK,EAAM2L,UAAY,EAClB3L,EAAM2K,WAAavM,EAAO7F,IAAIoH,YAE9B,IAAIyK,EAA0C,KAA9BpK,EAAMwK,MAAQxK,EAAMuK,QAAkBP,KAAKK,IAAIrK,EAAMmG,OACrEhI,EAAK6I,WAAWhH,EAAM2J,KAAO3E,WAAW7G,EAAKuL,OAAOqB,KAAK5M,EAAM6B,GAAQoK,GAuBzE,OAnBIjM,EAAKyB,YAAckG,IACrB9F,EAAM6E,SAAU,EAChB7E,EAAM0J,QAAS,EACf1J,EAAMkK,MAAQlK,EAAMuK,QAAU,EAC9BvK,EAAM2L,UAAY,EAClBxN,EAAK8M,YAAYjL,EAAM2J,KAGvBxL,EAAK2N,aAAa9L,EAAME,OAGxB9B,EAAOwC,gBAIJzC,EAAKyB,WAAckG,GACtB3H,EAAKkC,KAAKL,EAAM2J,KAAK,GAGhBxL,GAQT8M,YAAa,SAAS/N,GACpB,IAAIiB,EAAO7C,KAEX,GAAI6C,EAAK6I,WAAW9J,GAAK,CAEvB,GAAmC,mBAAxBiB,EAAK6I,WAAW9J,GACzB6H,aAAa5G,EAAK6I,WAAW9J,QACxB,CACL,IAAI8C,EAAQ7B,EAAK8B,WAAW/C,GACxB8C,GAASA,EAAME,OACjBF,EAAME,MAAMtK,oBAAoB,QAASuI,EAAK6I,WAAW9J,IAAK,UAI3DiB,EAAK6I,WAAW9J,GAGzB,OAAOiB,GAQT8B,WAAY,SAAS/C,GAInB,IAHA,IAAIiB,EAAO7C,KAGFxD,EAAE,EAAGA,EAAEqG,EAAKyG,QAAQlN,OAAQI,IACnC,GAAIoF,IAAOiB,EAAKyG,QAAQ9M,GAAG6R,IACzB,OAAOxL,EAAKyG,QAAQ9M,GAIxB,OAAO,MAOT8R,eAAgB,WACd,IAAIzL,EAAO7C,KAEX6C,EAAK+Q,SAGL,IAAK,IAAIpX,EAAE,EAAGA,EAAEqG,EAAKyG,QAAQlN,OAAQI,IACnC,GAAIqG,EAAKyG,QAAQ9M,GAAG4R,OAClB,OAAOvL,EAAKyG,QAAQ9M,GAAGqX,QAK3B,OAAO,IAAI7F,EAAMnL,IAMnB+Q,OAAQ,WACN,IAAI/Q,EAAO7C,KACP8T,EAAQjR,EAAK4H,MACbsJ,EAAM,EACNvX,EAAI,EAGR,KAAIqG,EAAKyG,QAAQlN,OAAS0X,GAA1B,CAKA,IAAKtX,EAAE,EAAGA,EAAEqG,EAAKyG,QAAQlN,OAAQI,IAC3BqG,EAAKyG,QAAQ9M,GAAG4R,QAClB2F,IAKJ,IAAKvX,EAAEqG,EAAKyG,QAAQlN,OAAS,EAAGI,GAAG,EAAGA,IAAK,CACzC,GAAIuX,GAAOD,EACT,OAGEjR,EAAKyG,QAAQ9M,GAAG4R,SAEdvL,EAAKyB,WAAazB,EAAKyG,QAAQ9M,GAAGoI,OACpC/B,EAAKyG,QAAQ9M,GAAGoI,MAAMgE,WAAW,GAInC/F,EAAKyG,QAAQwJ,OAAOtW,EAAG,GACvBuX,QAUNvP,aAAc,SAAS5C,GAGrB,QAAkB,IAAPA,EAAoB,CAE7B,IADA,IAAI2C,EAAM,GACD/H,EAAE,EAAGA,EAJLwD,KAIYsJ,QAAQlN,OAAQI,IACnC+H,EAAIzI,KALGkE,KAKOsJ,QAAQ9M,GAAG6R,KAG3B,OAAO9J,EAEP,MAAO,CAAC3C,IASZwN,eAAgB,SAAS1K,GAsBvB,OAlBAA,EAAME,MAAM0K,aAAexM,EAAO7F,IAAIqL,qBACtC5D,EAAME,MAAM0K,aAAapN,OAAS8Q,EAJvBhT,KAIkCiL,MAGzCvG,EAAMsP,QACRtP,EAAME,MAAM0K,aAAavO,QAAQ2D,EAAMsP,SAEvCtP,EAAME,MAAM0K,aAAavO,QAAQ2D,EAAME,OAIzCF,EAAME,MAAM0K,aAAa9E,KAAO9F,EAAM6F,MAClC7F,EAAM6F,QACR7F,EAAME,MAAM0K,aAAa6C,UAAYzN,EAAMuK,QAAU,EACrDvK,EAAME,MAAM0K,aAAa8C,QAAU1N,EAAMwK,OAAS,GAEpDxK,EAAME,MAAM0K,aAAaO,aAAazL,eAAeM,EAAMmG,MAAO/H,EAAO7F,IAAIoH,aAnBlErE,MA6BbwQ,aAAc,SAASvX,GACrB,IACIgb,EAAQnR,EAAOS,YAAcT,EAAOS,WAAW2Q,OAAO3N,QAAQ,UAAY,EAE9E,GAAIzD,EAAO+E,gBAAkB5O,EAAKqW,eAChCrW,EAAKqW,aAAa3G,QAAU,KAC5B1P,EAAKqW,aAAa1G,WAAW,GACzBqL,GACF,IAAMhb,EAAKqW,aAAapN,OAASY,EAAO+E,eAAkB,MAAMpC,IAKpE,OAFAxM,EAAKqW,aAAe,KAVTtP,MAmBb2Q,YAAa,SAAS1X,GACN,kBAAkBkb,KAAKrR,EAAOS,YAAcT,EAAOS,WAAWyC,aAE1E/M,EAAK8Q,IAAM,4FAYjB,IAAIiE,EAAQ,SAASoG,GACnBpU,KAAKqU,QAAUD,EACfpU,KAAKzC,QAEPyQ,EAAMpL,UAAY,CAKhBrF,KAAM,WACJ,IAAIsF,EAAO7C,KACPsU,EAASzR,EAAKwR,QAqBlB,OAlBAxR,EAAKO,OAASkR,EAAOlR,OACrBP,EAAK0H,MAAQ+J,EAAO/J,MACpB1H,EAAKQ,QAAUiR,EAAOjR,QACtBR,EAAKgI,MAAQyJ,EAAOzJ,MACpBhI,EAAK+L,MAAQ,EACb/L,EAAK0G,SAAU,EACf1G,EAAKuL,QAAS,EACdvL,EAAKkI,QAAU,YAGflI,EAAKwL,MAAQvL,EAAOC,SAGpBuR,EAAOhL,QAAQxN,KAAK+G,GAGpBA,EAAKvK,SAEEuK,GAOTvK,OAAQ,WACN,IAAIuK,EAAO7C,KACPsU,EAASzR,EAAKwR,QACdtQ,EAAUjB,EAAOM,QAAUP,EAAKO,QAAUP,EAAKwR,QAAQjR,OAAU,EAAIP,EAAKQ,QAkC9E,OAhCIiR,EAAOhQ,WAETzB,EAAK+B,WAA0C,IAA1B9B,EAAO7F,IAAIsX,WAA8BzR,EAAO7F,IAAIuX,iBAAmB1R,EAAO7F,IAAIsX,aACvG1R,EAAK+B,MAAMT,KAAKC,eAAeL,EAAQjB,EAAO7F,IAAIoH,aAClDxB,EAAK+B,MAAMkL,QAAS,EACpBjN,EAAK+B,MAAM7D,QAAQ+B,EAAOW,aAChBX,EAAOY,UAEjBb,EAAK+B,MAAQ9B,EAAOgG,oBAGpBjG,EAAK8P,SAAW9P,EAAK4R,eAAehF,KAAK5M,GACzCA,EAAK+B,MAAMvK,iBAAiB,QAASwI,EAAK8P,UAAU,GAGpD9P,EAAK+P,QAAU/P,EAAK6R,cAAcjF,KAAK5M,GACvCA,EAAK+B,MAAMvK,iBAAiByI,EAAOQ,cAAeT,EAAK+P,SAAS,GAIhE/P,EAAKgQ,OAAShQ,EAAK8R,aAAalF,KAAK5M,GACrCA,EAAK+B,MAAMvK,iBAAiB,QAASwI,EAAKgQ,QAAQ,GAGlDhQ,EAAK+B,MAAMmF,IAAMuK,EAAOrJ,KACxBpI,EAAK+B,MAAMgG,SAA8B,IAApB0J,EAAO3J,SAAoB,OAAS2J,EAAO3J,SAChE9H,EAAK+B,MAAMb,OAASA,EAASjB,EAAOiB,SAGpClB,EAAK+B,MAAMuD,QAGNtF,GAOTgR,MAAO,WACL,IAAIhR,EAAO7C,KACPsU,EAASzR,EAAKwR,QAgBlB,OAbAxR,EAAKO,OAASkR,EAAOlR,OACrBP,EAAK0H,MAAQ+J,EAAO/J,MACpB1H,EAAKQ,QAAUiR,EAAOjR,QACtBR,EAAKgI,MAAQyJ,EAAOzJ,MACpBhI,EAAK+L,MAAQ,EACb/L,EAAKwN,UAAY,EACjBxN,EAAK0G,SAAU,EACf1G,EAAKuL,QAAS,EACdvL,EAAKkI,QAAU,YAGflI,EAAKwL,MAAQvL,EAAOC,SAEbF,GAMT4R,eAAgB,WACd,IAAI5R,EAAO7C,KAGX6C,EAAKwR,QAAQxL,MAAM,YAAahG,EAAKwL,IAAKxL,EAAK+B,MAAMoF,MAAQnH,EAAK+B,MAAMoF,MAAM4K,KAAO,GAGrF/R,EAAK+B,MAAMtK,oBAAoB,QAASuI,EAAK8P,UAAU,IAMzD+B,cAAe,WACb,IAAI7R,EAAO7C,KACPsU,EAASzR,EAAKwR,QAGlBC,EAAO9I,UAAYkD,KAAKmG,KAA2B,GAAtBhS,EAAK+B,MAAMiK,UAAiB,GAGd,IAAvCxW,OAAOgb,KAAKiB,EAAOvJ,SAAS3O,SAC9BkY,EAAOvJ,QAAU,CAAC+J,UAAW,CAAC,EAAsB,IAAnBR,EAAO9I,aAGpB,WAAlB8I,EAAO7I,SACT6I,EAAO7I,OAAS,SAChB6I,EAAOzL,MAAM,QACbyL,EAAO9F,cAIT3L,EAAK+B,MAAMtK,oBAAoBwI,EAAOQ,cAAeT,EAAK+P,SAAS,IAMrE+B,aAAc,WACZ,IAAI9R,EAAO7C,KACPsU,EAASzR,EAAKwR,QAGdC,EAAO9I,YAAcgE,EAAAA,IAGvB8E,EAAO9I,UAAYkD,KAAKmG,KAA2B,GAAtBhS,EAAK+B,MAAMiK,UAAiB,GAGrDyF,EAAOvJ,QAAQ+J,UAAU,KAAOtF,EAAAA,IAClC8E,EAAOvJ,QAAQ+J,UAAU,GAAwB,IAAnBR,EAAO9I,WAIvC8I,EAAOlG,OAAOvL,IAIhBA,EAAK+B,MAAMtK,oBAAoB,QAASuI,EAAKgQ,QAAQ,KAOzD,IAAIG,EAAQ,GAMR/E,EAAa,SAASpL,GACxB,IAAI4K,EAAM5K,EAAKoI,KAGf,GAAI+H,EAAMvF,GAOR,OALA5K,EAAK2I,UAAYwH,EAAMvF,GAAKoB,cAG5BkG,EAAUlS,GAKZ,GAAI,sBAAsBsR,KAAK1G,GAAM,CAInC,IAFA,IAAI3T,EAAOkb,KAAKvH,EAAIpH,MAAM,KAAK,IAC3B4O,EAAW,IAAInT,WAAWhI,EAAKsC,QAC1BI,EAAE,EAAGA,EAAE1C,EAAKsC,SAAUI,EAC7ByY,EAASzY,GAAK1C,EAAKob,WAAW1Y,GAGhC2Y,EAAgBF,EAAS/S,OAAQW,OAC5B,CAEL,IAAIwI,EAAM,IAAI+J,eACd/J,EAAIgK,KAAKxS,EAAKsI,KAAKC,OAAQqC,GAAK,GAChCpC,EAAIE,gBAAkB1I,EAAKsI,KAAKI,gBAChCF,EAAIiK,aAAe,cAGfzS,EAAKsI,KAAKG,SACZjT,OAAOgb,KAAKxQ,EAAKsI,KAAKG,SAAS7S,SAAQ,SAAS8c,GAC9ClK,EAAImK,iBAAiBD,EAAK1S,EAAKsI,KAAKG,QAAQiK,OAIhDlK,EAAIa,OAAS,WAEX,IAAI0I,GAAQvJ,EAAIoK,OAAS,IAAI,GAChB,MAATb,GAAyB,MAATA,GAAyB,MAATA,EAKpCO,EAAgB9J,EAAIqK,SAAU7S,GAJ5BA,EAAKgG,MAAM,YAAa,KAAM,0CAA4CwC,EAAIoK,OAAS,MAM3FpK,EAAIsK,QAAU,WAER9S,EAAKyB,YACPzB,EAAKwH,QAAS,EACdxH,EAAKyB,WAAY,EACjBzB,EAAKyG,QAAU,UACR0J,EAAMvF,GACb5K,EAAKsF,SAGTyN,EAAYvK,KAQZuK,EAAc,SAASvK,GACzB,IACEA,EAAIwK,OACJ,MAAOpQ,GACP4F,EAAIsK,YASJR,EAAkB,SAASW,EAAajT,GAE1C,IAAImH,EAAQ,WACVnH,EAAKgG,MAAM,YAAa,KAAM,gCAI5BkN,EAAU,SAAS7T,GACjBA,GAAUW,EAAKyG,QAAQlN,OAAS,GAClC4W,EAAMnQ,EAAKoI,MAAQ/I,EACnB6S,EAAUlS,EAAMX,IAEhB8H,KAKmB,oBAAZtO,SAAiE,IAAtCoH,EAAO7F,IAAIkY,gBAAgB/Y,OAC/D0G,EAAO7F,IAAIkY,gBAAgBW,GAAazY,KAAK0Y,GAAS9M,MAAMe,GAE5DlH,EAAO7F,IAAIkY,gBAAgBW,EAAaC,EAAS/L,IASjD+K,EAAY,SAASlS,EAAMX,GAEzBA,IAAWW,EAAK2I,YAClB3I,EAAK2I,UAAYtJ,EAAO2M,UAIe,IAArCxW,OAAOgb,KAAKxQ,EAAKkI,SAAS3O,SAC5ByG,EAAKkI,QAAU,CAAC+J,UAAW,CAAC,EAAoB,IAAjBjS,EAAK2I,aAIlB,WAAhB3I,EAAK4I,SACP5I,EAAK4I,OAAS,SACd5I,EAAKgG,MAAM,QACXhG,EAAK2L,eAOLtK,EAAoB,WAEtB,GAAKpB,EAAOa,cAAZ,CAKA,IAC8B,oBAAjBqS,aACTlT,EAAO7F,IAAM,IAAI+Y,aACsB,oBAAvBC,mBAChBnT,EAAO7F,IAAM,IAAIgZ,mBAEjBnT,EAAOa,eAAgB,EAEzB,MAAM8B,GACN3C,EAAOa,eAAgB,EAIpBb,EAAO7F,MACV6F,EAAOa,eAAgB,GAKzB,IAAIuS,EAAO,iBAAiB/B,KAAKrR,EAAOS,YAAcT,EAAOS,WAAW4S,UACpEC,EAAatT,EAAOS,YAAcT,EAAOS,WAAW6S,WAAWlQ,MAAM,0BACrEmQ,EAAUD,EAAahQ,SAASgQ,EAAW,GAAI,IAAM,KACzD,GAAIF,GAAOG,GAAWA,EAAU,EAAG,CACjC,IAAIC,EAAS,SAASnC,KAAKrR,EAAOS,YAAcT,EAAOS,WAAWyC,UAAU4H,eACxE9K,EAAOS,aAAe+S,IACxBxT,EAAOa,eAAgB,GAKvBb,EAAOa,gBACTb,EAAOW,gBAA+C,IAA1BX,EAAO7F,IAAIsX,WAA8BzR,EAAO7F,IAAIuX,iBAAmB1R,EAAO7F,IAAIsX,aAC9GzR,EAAOW,WAAWU,KAAKC,eAAetB,EAAOM,OAAS,EAAIN,EAAOO,QAASP,EAAO7F,IAAIoH,aACrFvB,EAAOW,WAAW1C,QAAQ+B,EAAO7F,IAAIsL,cAIvCzF,EAAOgB,WAePyS,EAAAzT,OAAiBA,EACjByT,EAAA1M,KAAeA,OAIK,IAAX2M,GACTA,EAAO7T,aAAeA,EACtB6T,EAAO1T,OAASA,EAChB0T,EAAO3M,KAAOA,EACd2M,EAAOxI,MAAQA,GACY,oBAAXxK,SAChBA,OAAOb,aAAeA,EACtBa,OAAOV,OAASA,EAChBU,OAAOqG,KAAOA,EACdrG,OAAOwK,MAAQA,GA1gFnB;;;;;;;;;;;;AA2hFA,WAgIwB,IAAUyI,EA3HhC9T,aAAaC,UAAU8T,KAAO,CAAC,EAAG,EAAG,GACrC/T,aAAaC,UAAU+T,aAAe,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAWvDhU,aAAaC,UAAUgU,OAAS,SAASC,GACvC,IAAIhU,EAAO7C,KAGX,IAAK6C,EAAK5F,MAAQ4F,EAAK5F,IAAIkT,SACzB,OAAOtN,EAIT,IAAK,IAAIrG,EAAEqG,EAAKM,OAAO/G,OAAO,EAAGI,GAAG,EAAGA,IACrCqG,EAAKM,OAAO3G,GAAGoa,OAAOC,GAGxB,OAAOhU,GAWTF,aAAaC,UAAUkU,IAAM,SAASC,EAAGC,EAAGC,GAC1C,IAAIpU,EAAO7C,KAGX,OAAK6C,EAAK5F,KAAQ4F,EAAK5F,IAAIkT,UAK3B6G,EAAkB,iBAANA,EAAkBnU,EAAK6T,KAAK,GAAKM,EAC7CC,EAAkB,iBAANA,EAAkBpU,EAAK6T,KAAK,GAAKO,EAE5B,iBAANF,EAWFlU,EAAK6T,MAVZ7T,EAAK6T,KAAO,CAACK,EAAGC,EAAGC,QAEwB,IAAhCpU,EAAK5F,IAAIkT,SAAS+G,WAC3BrU,EAAK5F,IAAIkT,SAAS+G,UAAUC,gBAAgBtU,EAAK6T,KAAK,GAAI5T,OAAO7F,IAAIoH,YAAa,IAClFxB,EAAK5F,IAAIkT,SAASiH,UAAUD,gBAAgBtU,EAAK6T,KAAK,GAAI5T,OAAO7F,IAAIoH,YAAa,IAClFxB,EAAK5F,IAAIkT,SAASkH,UAAUF,gBAAgBtU,EAAK6T,KAAK,GAAI5T,OAAO7F,IAAIoH,YAAa,KAElFxB,EAAK5F,IAAIkT,SAASmH,YAAYzU,EAAK6T,KAAK,GAAI7T,EAAK6T,KAAK,GAAI7T,EAAK6T,KAAK,IAMjE7T,IArBEA,GAsCXF,aAAaC,UAAU2U,YAAc,SAASR,EAAGC,EAAGC,EAAGO,EAAKC,EAAKC,GAC/D,IAAI7U,EAAO7C,KAGX,IAAK6C,EAAK5F,MAAQ4F,EAAK5F,IAAIkT,SACzB,OAAOtN,EAIT,IAAI8U,EAAK9U,EAAK8T,aAOd,OANAK,EAAkB,iBAANA,EAAkBW,EAAG,GAAKX,EACtCC,EAAkB,iBAANA,EAAkBU,EAAG,GAAKV,EACtCO,EAAsB,iBAARA,EAAoBG,EAAG,GAAKH,EAC1CC,EAAsB,iBAARA,EAAoBE,EAAG,GAAKF,EAC1CC,EAAsB,iBAARA,EAAoBC,EAAG,GAAKD,EAEzB,iBAANX,EAcFY,GAbP9U,EAAK8T,aAAe,CAACI,EAAGC,EAAGC,EAAGO,EAAKC,EAAKC,QAEE,IAA/B7U,EAAK5F,IAAIkT,SAASyH,UAC3B/U,EAAK5F,IAAIkT,SAASyH,SAAST,gBAAgBJ,EAAGjU,OAAO7F,IAAIoH,YAAa,IACtExB,EAAK5F,IAAIkT,SAAS0H,SAASV,gBAAgBH,EAAGlU,OAAO7F,IAAIoH,YAAa,IACtExB,EAAK5F,IAAIkT,SAAS2H,SAASX,gBAAgBF,EAAGnU,OAAO7F,IAAIoH,YAAa,IACtExB,EAAK5F,IAAIkT,SAAS4H,IAAIZ,gBAAgBK,EAAK1U,OAAO7F,IAAIoH,YAAa,IACnExB,EAAK5F,IAAIkT,SAAS6H,IAAIb,gBAAgBM,EAAK3U,OAAO7F,IAAIoH,YAAa,IACnExB,EAAK5F,IAAIkT,SAAS8H,IAAId,gBAAgBO,EAAK5U,OAAO7F,IAAIoH,YAAa,KAEnExB,EAAK5F,IAAIkT,SAAS+H,eAAenB,EAAGC,EAAGC,EAAGO,EAAKC,EAAKC,GAMjD7U,IAWTgH,KAAKjH,UAAUrF,MAAiBkZ,EA2B7B5M,KAAKjH,UAAUrF,KA1BT,SAASuM,GACd,IAAIjH,EAAO7C,KAuBX,OApBA6C,EAAK8T,aAAe7M,EAAEyN,aAAe,CAAC,EAAG,EAAG,GAC5C1U,EAAKsV,QAAUrO,EAAE8M,QAAU,KAC3B/T,EAAK6T,KAAO5M,EAAEgN,KAAO,KACrBjU,EAAKuV,YAAc,CACjBC,oBAA4C,IAArBvO,EAAEuO,eAAiCvO,EAAEuO,eAAiB,IAC7EC,oBAA4C,IAArBxO,EAAEwO,eAAiCxO,EAAEwO,eAAiB,IAC7EC,mBAA0C,IAApBzO,EAAEyO,cAAgCzO,EAAEyO,cAAgB,EAC1EC,mBAA0C,IAApB1O,EAAE0O,cAAgC1O,EAAE0O,cAAgB,UAC1EC,iBAAsC,IAAlB3O,EAAE2O,YAA8B3O,EAAE2O,YAAc,IACpEC,kBAAwC,IAAnB5O,EAAE4O,aAA+B5O,EAAE4O,aAAe,OACvEC,iBAAsC,IAAlB7O,EAAE6O,YAA8B7O,EAAE6O,YAAc,EACpEC,mBAA0C,IAApB9O,EAAE8O,cAAgC9O,EAAE8O,cAAgB,GAI5E/V,EAAKgW,UAAY/O,EAAEgP,SAAW,CAAC,CAAC3gB,GAAI2R,EAAEgP,WAAa,GACnDjW,EAAKkW,OAASjP,EAAEkP,MAAQ,CAAC,CAAC7gB,GAAI2R,EAAEkP,QAAU,GAC1CnW,EAAKoW,eAAiBnP,EAAEoP,cAAgB,CAAC,CAAC/gB,GAAI2R,EAAEoP,gBAAkB,GAG3DzC,EAAOjD,KAAKxT,KAAM8J,KAU7BD,KAAKjH,UAAUgU,OAAS,SAASC,EAAKjV,GACpC,IAAIiB,EAAO7C,KAGX,IAAK6C,EAAKyB,UACR,OAAOzB,EAIT,GAAoB,WAAhBA,EAAK4I,OAQP,OAPA5I,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,SACPsT,OAAQ,WACN3K,EAAK+T,OAAOC,EAAKjV,MAIdiB,EAIT,IAAIsW,OAAuD,IAAlCrW,OAAO7F,IAAImc,mBAAsC,UAAY,SAGtF,QAAkB,IAAPxX,EAAoB,CAE7B,GAAmB,iBAARiV,EAIT,OAAOhU,EAAKsV,QAHZtV,EAAKsV,QAAUtB,EACfhU,EAAK6T,KAAO,CAACG,EAAK,EAAG,GAQzB,IADA,IAAItS,EAAM1B,EAAK2B,aAAa5C,GACnBpF,EAAE,EAAGA,EAAE+H,EAAInI,OAAQI,IAAK,CAE/B,IAAIkI,EAAQ7B,EAAK8B,WAAWJ,EAAI/H,IAEhC,GAAIkI,EAAO,CACT,GAAmB,iBAARmS,EA4BT,OAAOnS,EAAMyT,QA3BbzT,EAAMyT,QAAUtB,EAChBnS,EAAMgS,KAAO,CAACG,EAAK,EAAG,GAElBnS,EAAME,QAERF,EAAM0T,YAAYM,aAAe,aAG5BhU,EAAMsP,SAAYtP,EAAMsP,QAAQ6C,KACnCwC,EAAY3U,EAAOyU,GAGF,YAAfA,OACqC,IAA5BzU,EAAMsP,QAAQkD,WACvBxS,EAAMsP,QAAQkD,UAAU9S,eAAeyS,EAAK/T,OAAO7F,IAAIoH,aACvDK,EAAMsP,QAAQoD,UAAUhT,eAAe,EAAGtB,OAAO7F,IAAIoH,aACrDK,EAAMsP,QAAQqD,UAAUjT,eAAe,EAAGtB,OAAO7F,IAAIoH,cAErDK,EAAMsP,QAAQsD,YAAYT,EAAK,EAAG,GAGpCnS,EAAMsP,QAAQ6C,IAAIzS,eAAeyS,EAAK/T,OAAO7F,IAAIoH,cAIrDxB,EAAKgG,MAAM,SAAUnE,EAAM2J,MAOjC,OAAOxL,GAWTgH,KAAKjH,UAAUkU,IAAM,SAASC,EAAGC,EAAGC,EAAGrV,GACrC,IAAIiB,EAAO7C,KAGX,IAAK6C,EAAKyB,UACR,OAAOzB,EAIT,GAAoB,WAAhBA,EAAK4I,OAQP,OAPA5I,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,MACPsT,OAAQ,WACN3K,EAAKiU,IAAIC,EAAGC,EAAGC,EAAGrV,MAIfiB,EAQT,GAJAmU,EAAkB,iBAANA,EAAkB,EAAIA,EAClCC,EAAkB,iBAANA,GAAmB,GAAMA,OAGnB,IAAPrV,EAAoB,CAE7B,GAAiB,iBAANmV,EAGT,OAAOlU,EAAK6T,KAFZ7T,EAAK6T,KAAO,CAACK,EAAGC,EAAGC,GAQvB,IADA,IAAI1S,EAAM1B,EAAK2B,aAAa5C,GACnBpF,EAAE,EAAGA,EAAE+H,EAAInI,OAAQI,IAAK,CAE/B,IAAIkI,EAAQ7B,EAAK8B,WAAWJ,EAAI/H,IAEhC,GAAIkI,EAAO,CACT,GAAiB,iBAANqS,EAoBT,OAAOrS,EAAMgS,KAnBbhS,EAAMgS,KAAO,CAACK,EAAGC,EAAGC,GAEhBvS,EAAME,QAEHF,EAAMsP,UAAWtP,EAAMsP,QAAQ6C,KAClCwC,EAAY3U,EAAO,gBAGkB,IAA5BA,EAAMsP,QAAQkD,WACvBxS,EAAMsP,QAAQkD,UAAU9S,eAAe2S,EAAGjU,OAAO7F,IAAIoH,aACrDK,EAAMsP,QAAQoD,UAAUhT,eAAe4S,EAAGlU,OAAO7F,IAAIoH,aACrDK,EAAMsP,QAAQqD,UAAUjT,eAAe6S,EAAGnU,OAAO7F,IAAIoH,cAErDK,EAAMsP,QAAQsD,YAAYP,EAAGC,EAAGC,IAIpCpU,EAAKgG,MAAM,MAAOnE,EAAM2J,MAO9B,OAAOxL,GAaTgH,KAAKjH,UAAU2U,YAAc,SAASR,EAAGC,EAAGC,EAAGrV,GAC7C,IAAIiB,EAAO7C,KAGX,IAAK6C,EAAKyB,UACR,OAAOzB,EAIT,GAAoB,WAAhBA,EAAK4I,OAQP,OAPA5I,EAAK8I,OAAO7P,KAAK,CACf5B,MAAO,cACPsT,OAAQ,WACN3K,EAAK0U,YAAYR,EAAGC,EAAGC,EAAGrV,MAIvBiB,EAQT,GAJAmU,EAAkB,iBAANA,EAAkBnU,EAAK8T,aAAa,GAAKK,EACrDC,EAAkB,iBAANA,EAAkBpU,EAAK8T,aAAa,GAAKM,OAGnC,IAAPrV,EAAoB,CAE7B,GAAiB,iBAANmV,EAGT,OAAOlU,EAAK8T,aAFZ9T,EAAK8T,aAAe,CAACI,EAAGC,EAAGC,GAQ/B,IADA,IAAI1S,EAAM1B,EAAK2B,aAAa5C,GACnBpF,EAAE,EAAGA,EAAE+H,EAAInI,OAAQI,IAAK,CAE/B,IAAIkI,EAAQ7B,EAAK8B,WAAWJ,EAAI/H,IAEhC,GAAIkI,EAAO,CACT,GAAiB,iBAANqS,EAyBT,OAAOrS,EAAMiS,aAxBbjS,EAAMiS,aAAe,CAACI,EAAGC,EAAGC,GAExBvS,EAAME,QAEHF,EAAMsP,UAEJtP,EAAMgS,OACThS,EAAMgS,KAAO7T,EAAK6T,MAAQ,CAAC,EAAG,GAAI,KAGpC2C,EAAY3U,EAAO,iBAGqB,IAA/BA,EAAMsP,QAAQsF,cACvB5U,EAAMsP,QAAQsF,aAAalV,eAAe2S,EAAGjU,OAAO7F,IAAIoH,aACxDK,EAAMsP,QAAQuF,aAAanV,eAAe4S,EAAGlU,OAAO7F,IAAIoH,aACxDK,EAAMsP,QAAQwF,aAAapV,eAAe6S,EAAGnU,OAAO7F,IAAIoH,cAExDK,EAAMsP,QAAQkE,eAAenB,EAAGC,EAAGC,IAIvCpU,EAAKgG,MAAM,cAAenE,EAAM2J,MAOtC,OAAOxL,GAiCTgH,KAAKjH,UAAU6W,WAAa,WAC1B,IAEI3P,EAAGlI,EAAI8C,EAFP7B,EAAO7C,KACP6Q,EAAOH,UAIX,IAAK7N,EAAKyB,UACR,OAAOzB,EAIT,GAAoB,IAAhBgO,EAAKzU,OAEP,OAAOyG,EAAKuV,YACP,GAAoB,IAAhBvH,EAAKzU,OAAc,CAC5B,GAAuB,iBAAZyU,EAAK,GAgCd,OADAnM,EAAQ7B,EAAK8B,WAAWyB,SAASyK,EAAK,GAAI,MAC3BnM,EAAM0T,YAAcvV,EAAKuV,YA/BxCtO,EAAI+G,EAAK,QAGS,IAAPjP,IACJkI,EAAE2P,aACL3P,EAAE2P,WAAa,CACbpB,eAAgBvO,EAAEuO,eAClBC,eAAgBxO,EAAEwO,eAClBC,cAAezO,EAAEyO,cACjBC,cAAe1O,EAAE0O,cACjBC,YAAa3O,EAAE2O,YACfE,YAAa7O,EAAE6O,YACfC,cAAe9O,EAAE8O,cACjBF,aAAc5O,EAAE4O,eAIpB7V,EAAKuV,YAAc,CACjBC,oBAAuD,IAAhCvO,EAAE2P,WAAWpB,eAAiCvO,EAAE2P,WAAWpB,eAAiBxV,EAAK6W,gBACxGpB,oBAAuD,IAAhCxO,EAAE2P,WAAWnB,eAAiCxO,EAAE2P,WAAWnB,eAAiBzV,EAAK8W,gBACxGpB,mBAAqD,IAA/BzO,EAAE2P,WAAWlB,cAAgCzO,EAAE2P,WAAWlB,cAAgB1V,EAAK+W,eACrGpB,mBAAqD,IAA/B1O,EAAE2P,WAAWjB,cAAgC1O,EAAE2P,WAAWjB,cAAgB3V,EAAKgX,eACrGpB,iBAAiD,IAA7B3O,EAAE2P,WAAWhB,YAA8B3O,EAAE2P,WAAWhB,YAAc5V,EAAKiX,aAC/FnB,iBAAiD,IAA7B7O,EAAE2P,WAAWd,YAA8B7O,EAAE2P,WAAWd,YAAc9V,EAAKkX,aAC/FnB,mBAAqD,IAA/B9O,EAAE2P,WAAWb,cAAgC9O,EAAE2P,WAAWb,cAAgB/V,EAAKmX,eACrGtB,kBAAmD,IAA9B5O,EAAE2P,WAAWf,aAA+B5O,EAAE2P,WAAWf,aAAe7V,EAAKoX,qBAQ/E,IAAhBpJ,EAAKzU,SACd0N,EAAI+G,EAAK,GACTjP,EAAKwE,SAASyK,EAAK,GAAI,KAKzB,IADA,IAAItM,EAAM1B,EAAK2B,aAAa5C,GACnBpF,EAAE,EAAGA,EAAE+H,EAAInI,OAAQI,IAG1B,GAFAkI,EAAQ7B,EAAK8B,WAAWJ,EAAI/H,IAEjB,CAET,IAAI0d,EAAKxV,EAAM0T,YACf8B,EAAK,CACH7B,oBAA4C,IAArBvO,EAAEuO,eAAiCvO,EAAEuO,eAAiB6B,EAAG7B,eAChFC,oBAA4C,IAArBxO,EAAEwO,eAAiCxO,EAAEwO,eAAiB4B,EAAG5B,eAChFC,mBAA0C,IAApBzO,EAAEyO,cAAgCzO,EAAEyO,cAAgB2B,EAAG3B,cAC7EC,mBAA0C,IAApB1O,EAAE0O,cAAgC1O,EAAE0O,cAAgB0B,EAAG1B,cAC7EC,iBAAsC,IAAlB3O,EAAE2O,YAA8B3O,EAAE2O,YAAcyB,EAAGzB,YACvEE,iBAAsC,IAAlB7O,EAAE6O,YAA8B7O,EAAE6O,YAAcuB,EAAGvB,YACvEC,mBAA0C,IAApB9O,EAAE8O,cAAgC9O,EAAE8O,cAAgBsB,EAAGtB,cAC7EF,kBAAwC,IAAnB5O,EAAE4O,aAA+B5O,EAAE4O,aAAewB,EAAGxB,cAI5E,IAAIyB,EAASzV,EAAMsP,QACfmG,GACFA,EAAO9B,eAAiB6B,EAAG7B,eAC3B8B,EAAO7B,eAAiB4B,EAAG5B,eAC3B6B,EAAO5B,cAAgB2B,EAAG3B,cAC1B4B,EAAO3B,cAAgB0B,EAAG1B,cAC1B2B,EAAO1B,YAAcyB,EAAGzB,YACxB0B,EAAOxB,YAAcuB,EAAGvB,YACxBwB,EAAOvB,cAAgBsB,EAAGtB,cAC1BuB,EAAOzB,aAAewB,EAAGxB,eAGpBhU,EAAMgS,OACThS,EAAMgS,KAAO7T,EAAK6T,MAAQ,CAAC,EAAG,GAAI,KAIpC2C,EAAY3U,EAAO,YAKzB,OAAO7B,GAWTmL,MAAMpL,UAAUrF,KAAO,SAAUkZ,GAC/B,OAAO,WACL,IAAI5T,EAAO7C,KACPsU,EAASzR,EAAKwR,QAGlBxR,EAAK8T,aAAerC,EAAOqC,aAC3B9T,EAAKsV,QAAU7D,EAAO6D,QACtBtV,EAAK6T,KAAOpC,EAAOoC,KACnB7T,EAAKuV,YAAc9D,EAAO8D,YAG1B3B,EAAOjD,KAAKxT,MAGR6C,EAAKsV,QACP7D,EAAOsC,OAAO/T,EAAKsV,SACVtV,EAAK6T,MACdpC,EAAOwC,IAAIjU,EAAK6T,KAAK,GAAI7T,EAAK6T,KAAK,GAAI7T,EAAK6T,KAAK,GAAI7T,EAAKwL,MAlBzC,CAqBpBL,MAAMpL,UAAUrF,MAOnByQ,MAAMpL,UAAUiR,MAAQ,SAAU4C,GAChC,OAAO,WACL,IAAI5T,EAAO7C,KACPsU,EAASzR,EAAKwR,QAqBlB,OAlBAxR,EAAK8T,aAAerC,EAAOqC,aAC3B9T,EAAKsV,QAAU7D,EAAO6D,QACtBtV,EAAK6T,KAAOpC,EAAOoC,KACnB7T,EAAKuV,YAAc9D,EAAO8D,YAGtBvV,EAAKsV,QACP7D,EAAOsC,OAAO/T,EAAKsV,SACVtV,EAAK6T,KACdpC,EAAOwC,IAAIjU,EAAK6T,KAAK,GAAI7T,EAAK6T,KAAK,GAAI7T,EAAK6T,KAAK,GAAI7T,EAAKwL,KACjDxL,EAAKmR,UAEdnR,EAAKmR,QAAQpL,WAAW,GACxB/F,EAAKmR,aAAU9I,EACfoJ,EAAOlF,eAAevM,IAIjB4T,EAAOjD,KAAKxT,OAxBC,CA0BrBgO,MAAMpL,UAAUiR,OAUnB,IAAIwF,EAAc,SAAS3U,EAAO0V,GAInB,aAHbA,EAAOA,GAAQ,YAIb1V,EAAMsP,QAAUlR,OAAO7F,IAAIod,eAC3B3V,EAAMsP,QAAQqE,eAAiB3T,EAAM0T,YAAYC,eACjD3T,EAAMsP,QAAQsE,eAAiB5T,EAAM0T,YAAYE,eACjD5T,EAAMsP,QAAQuE,cAAgB7T,EAAM0T,YAAYG,cAChD7T,EAAMsP,QAAQwE,cAAgB9T,EAAM0T,YAAYI,cAChD9T,EAAMsP,QAAQyE,YAAc/T,EAAM0T,YAAYK,YAC9C/T,EAAMsP,QAAQ2E,YAAcjU,EAAM0T,YAAYO,YAC9CjU,EAAMsP,QAAQ4E,cAAgBlU,EAAM0T,YAAYQ,cAChDlU,EAAMsP,QAAQ0E,aAAehU,EAAM0T,YAAYM,kBAER,IAA5BhU,EAAMsP,QAAQkD,WACvBxS,EAAMsP,QAAQkD,UAAU9S,eAAeM,EAAMgS,KAAK,GAAI5T,OAAO7F,IAAIoH,aACjEK,EAAMsP,QAAQoD,UAAUhT,eAAeM,EAAMgS,KAAK,GAAI5T,OAAO7F,IAAIoH,aACjEK,EAAMsP,QAAQqD,UAAUjT,eAAeM,EAAMgS,KAAK,GAAI5T,OAAO7F,IAAIoH,cAEjEK,EAAMsP,QAAQsD,YAAY5S,EAAMgS,KAAK,GAAIhS,EAAMgS,KAAK,GAAIhS,EAAMgS,KAAK,SAG3B,IAA/BhS,EAAMsP,QAAQsF,cACvB5U,EAAMsP,QAAQsF,aAAalV,eAAeM,EAAMiS,aAAa,GAAI7T,OAAO7F,IAAIoH,aAC5EK,EAAMsP,QAAQuF,aAAanV,eAAeM,EAAMiS,aAAa,GAAI7T,OAAO7F,IAAIoH,aAC5EK,EAAMsP,QAAQwF,aAAapV,eAAeM,EAAMiS,aAAa,GAAI7T,OAAO7F,IAAIoH,cAE5EK,EAAMsP,QAAQkE,eAAexT,EAAMiS,aAAa,GAAIjS,EAAMiS,aAAa,GAAIjS,EAAMiS,aAAa,MAGhGjS,EAAMsP,QAAUlR,OAAO7F,IAAImc,qBAC3B1U,EAAMsP,QAAQ6C,IAAIzS,eAAeM,EAAMyT,QAASrV,OAAO7F,IAAIoH,cAG7DK,EAAMsP,QAAQjT,QAAQ2D,EAAME,OAGvBF,EAAM6E,SACT7E,EAAM2P,QAAQjE,MAAM1L,EAAM2J,KAAK,GAAMrF,KAAKtE,EAAM2J,KAAK,IAjoB3D,+HC97E8GpR,EAAS,QAAC,+FAApEA,EAAgB,yBAA0BA,EAAY,+EAFxG9D,EAKMH,EAAAshB,EAAAlhB,GAJJL,EAEMuhB,EAAAC,GADJxhB,EAA4HwhB,EAAAC,wBAE9HzhB,EAAoDuhB,EAAAG,qBAAnBxd,EAAI,2BAFqEA,EAAS,+BAAnEA,EAAgB,+BAA0BA,EAAY,qNAThFA,EAAY,4PAPpC9D,EAYMH,EAAA0hB,EAAAthB,GAXJL,EAEM2hB,EAAAF,UAENzhB,EAIM2hB,EAAAJ,GAHJvhB,EAAoEuhB,EAAAK,UACpE5hB,EAAuCuhB,EAAAC,iBACvCxhB,EAAoEuhB,EAAAM,UAGtE7hB,EAAsD2hB,EAAAG,2DAArB5d,EAAK,4BAJhBA,EAAY,6EAd7BA,EAAY,GAAA6d,8JAJnB3hB,EASMH,EAAAuhB,EAAAnhB,GARJL,EAEMwhB,EAAAC,2NAIJrhB,EAA0DH,EAAAyhB,EAAArhB,qBAAzB6D,EAAO,6IAFxC9D,EAA0CH,EAAAyhB,EAAArhB,2DANzC,MAAQ,SAAR6D,KAAc8d,EAWD,UAAR9d,KAAe+d,EAcP,QAAR/d,KAAage,OAAb,uFA3BZ9hB,EAmCMH,EAAAkiB,EAAA9hB,qJAzGJ0J,EAAMA,OAACe,YAAa,EAEhB,IAAAsX,GAAe,EAEfC,EAAM,QACNC,EAAe,IACf/Y,EAAY,EACZgZ,GAAe,EACfC,GAAmB,EAEjB,MAAAC,MAAsB1b,EAqCnB,SAAA2b,EAAKvhB,OACRwhB,EAAuBF,EAAgBxZ,eAAe9H,EAAMlB,OAAOyB,OAInE,OAHJ6H,EAAYoZ,EAAqBpZ,WACjC4G,QAAQyS,IAAI,YAAiB,IAAAhK,KAAQrP,GAEjCA,EAAY+Y,EAAY,CACT,IAAAxR,OACf,CAAAE,KAAM,oBAEHf,OACL4S,EAAA,EAAAL,GAAmB,QAEnBK,EAAA,EAAAL,GAAmB,GAGjBD,IACJM,EAAA,EAAAN,GAAe,GACf5R,iBACEkS,EAAA,EAAAN,GAAe,KACd,8CApDDM,EAAA,EAAAT,GAAe,SACTK,EAAgBza,gBAChBya,EAAgBK,wBACtBD,EAAA,EAAAR,EAAM,eACCxV,GACPkW,MAAMlW,GAERgW,EAAA,EAAAT,GAAe,qBAIfS,EAAA,EAAAtZ,EAAY,GACZsZ,EAAA,EAAAL,EAAmB,GACnBK,EAAA,EAAAR,EAAM,iBAEEI,EAAgBta,wBAAwBC,qBAC9Cqa,EAAgBta,wBAAwB7G,iBAAiB,6BAA8BohB,SAChF7V,GACPkW,MAAMlW,GACNgW,EAAA,EAAAR,EAAM,qCAMAI,EAAgBta,wBAAwBS,oBAC9C6Z,EAAgBta,wBAAwB5G,oBAAoB,6BAA8BmhB,SACnF7V,GACPkW,MAAMlW,GAERgW,EAAA,EAAAR,EAAM,UA8CmC,IAAAQ,EAAA,EAAAP,GAAgB,GAEhB,IAAAO,EAAA,EAAAP,GAAgB,WC5FjD,kBJs5DZ,MACIU,YAnIJ,SAA2B3gB,EAAW4gB,GAClC,MAAM1f,EAAKlB,EAAUkB,GACD,OAAhBA,EAAGO,WACHtE,EAAQ+D,EAAG0B,YACX1B,EAAGO,UAAYP,EAAGO,SAASof,EAAED,GAG7B1f,EAAG0B,WAAa1B,EAAGO,SAAW,KAC9BP,EAAGW,IAAM,IA4HTif,CAAkBlc,KAAM,GACxBA,KAAK+b,SAAW9jB,EAEpBkkB,IAAI/B,EAAM3d,GACN,MAAM2B,EAAa4B,KAAK1D,GAAG8B,UAAUgc,KAAUpa,KAAK1D,GAAG8B,UAAUgc,GAAQ,IAEzE,OADAhc,EAAUtC,KAAKW,GACR,KACH,MAAM4F,EAAQjE,EAAUmI,QAAQ9J,IACjB,IAAX4F,GACAjE,EAAU0U,OAAOzQ,EAAO,IAGpC+Z,KAAKC,GA73DT,IAAkBC,EA83DNtc,KAAKuc,QA93DCD,EA83DkBD,EA73DG,IAA5BhkB,OAAOgb,KAAKiJ,GAAKlgB,UA83DhB4D,KAAK1D,GAAG+B,YAAa,EACrB2B,KAAKuc,MAAMF,GACXrc,KAAK1D,GAAG+B,YAAa,iDIx6Db,CAClBrF,OAAQW,SAAS6iB"}